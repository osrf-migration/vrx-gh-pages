{"pagelen": 100, "previous": "data/repositories/osrf/vrx/issues_page=1.json", "values": [{"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/101/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/101.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/101/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/101/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/101/move-wave-plugin-to-a-world-plugin"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/101/vote"}}, "reporter": {"display_name": "Marshall Rawson", "uuid": "{e6f8e5b5-5261-44d3-b2d4-092469c4157a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D"}, "html": {"href": "https://bitbucket.org/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bd54845fa0ad1be5a529eb87d738f221d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMR-4.png"}}, "nickname": "MarshallRawson", "type": "user", "account_id": "5ce2e28709c5fa0fd9fb0c6c"}, "title": "Move wave plugin to a world plugin", "component": {"name": "Plugin", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519936.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "See Issue#100 for reference\\(replace wind with wave\\). \r\n\r\nThis is to be completed after wave visualization in merged into default", "markup": "markdown", "html": "<p>See Issue<a href=\"#!/osrf/vrx/issues/100/wind-plugin-moved-to-world-plugin\" rel=\"nofollow\" title=\"Wind plugin moved to world plugin\" class=\"ap-connect-link\"><s>#100</s></a> for reference(replace wind with wave). </p>\n<p>This is to be completed after wave visualization in merged into default</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-06-04T18:38:21.649084+00:00", "milestone": {"name": "1.2", "links": {"self": {"href": "data/repositories/osrf/vrx/milestones/370076.json"}}}, "updated_on": "2019-07-12T21:15:02.398571+00:00", "type": "issue", "id": 101}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/102/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/102.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/102/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/102/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/102/gui-overlay-to-gazebo-to-help-with-debug"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/102/vote"}}, "reporter": {"display_name": "Marshall Rawson", "uuid": "{e6f8e5b5-5261-44d3-b2d4-092469c4157a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D"}, "html": {"href": "https://bitbucket.org/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bd54845fa0ad1be5a529eb87d738f221d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMR-4.png"}}, "nickname": "MarshallRawson", "type": "user", "account_id": "5ce2e28709c5fa0fd9fb0c6c"}, "title": "GUI/Overlay to Gazebo to help with debug", "component": {"name": "Plugin", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519936.json"}}}, "votes": 0, "watches": 3, "content": {"raw": "create a graphical overlay onto gazebo with help full information about the world the team is currently operating in and how they are doing as opposed to having six or seven rostopic echo terminals running.\r\n\r\n\u200c\r\n\r\nRelevant information to potentially display:\r\n\r\n* Compass to indicate wind direction and magnitude\r\n* What task is being attempted\r\n* How many collisions and with what.\r\n* Current score\r\n* Current wave state\r\n* Task state \\(initial, ready, running, finished\\)\r\n* Task time\r\n* A toggle button to enable/disable visual markers \\(we could display visual debug information for each task\\).\r\n\r\nIf you need some inspiration, @{5b6a0f313df2033d0d9a151a} might help with the design of the widget layout.", "markup": "markdown", "html": "<p>create a graphical overlay onto gazebo with help full information about the world the team is currently operating in and how they are doing as opposed to having six or seven rostopic echo terminals running.</p>\n<p>\u200c</p>\n<p>Relevant information to potentially display:</p>\n<ul>\n<li>Compass to indicate wind direction and magnitude</li>\n<li>What task is being attempted</li>\n<li>How many collisions and with what.</li>\n<li>Current score</li>\n<li>Current wave state</li>\n<li>Task state (initial, ready, running, finished)</li>\n<li>Task time</li>\n<li>A toggle button to enable/disable visual markers (we could display visual debug information for each task).</li>\n</ul>\n<p>If you need some inspiration, <span class=\"ap-mention\" data-atlassian-id=\"5b6a0f313df2033d0d9a151a\">@Cole Biesemeyer</span> might help with the design of the widget layout.</p>", "type": "rendered"}, "assignee": {"display_name": "Marshall Rawson", "uuid": "{e6f8e5b5-5261-44d3-b2d4-092469c4157a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D"}, "html": {"href": "https://bitbucket.org/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bd54845fa0ad1be5a529eb87d738f221d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMR-4.png"}}, "nickname": "MarshallRawson", "type": "user", "account_id": "5ce2e28709c5fa0fd9fb0c6c"}, "state": "new", "version": null, "edited_on": null, "created_on": "2019-06-04T18:51:36.585925+00:00", "milestone": null, "updated_on": "2019-08-08T23:51:36.011504+00:00", "type": "issue", "id": 102}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/103/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/103.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/103/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/103/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/103/adjust-3d-lidar-post-to-match-camera-post"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/103/vote"}}, "reporter": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "title": "Adjust 3d lidar post to match camera post (vary height based on z position)", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently the 3d lidar post is a fixed length and the post arm and lidar \u2018slides\u2019 up a down the post. This is okay, but the fixed post length is inappropriate if the z of the lidar is very different. We would like to change the post to match the camera post, which varies in length based on the z position of the lidar.", "markup": "markdown", "html": "<p>Currently the 3d lidar post is a fixed length and the post arm and lidar \u2018slides\u2019 up a down the post. This is okay, but the fixed post length is inappropriate if the z of the lidar is very different. We would like to change the post to match the camera post, which varies in length based on the z position of the lidar.</p>", "type": "rendered"}, "assignee": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-06-06T00:23:04.849858+00:00", "milestone": {"name": "1.1", "links": {"self": {"href": "data/repositories/osrf/vrx/milestones/363172.json"}}}, "updated_on": "2019-06-06T17:17:03.835147+00:00", "type": "issue", "id": 103}, {"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/104/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/104.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/104/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/104/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/104/add-gps-imu-sensor-model-plugin"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/104/vote"}}, "reporter": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "title": "Add GPS/IMU sensor model plugin", "component": {"name": "Plugin", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519936.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "The ability to configure sensors from a set of \u2018standard\u2019 VRX sensors is described on the [Adding Sensors For Competition Wiki](#!/osrf/vrx/wiki/tutorials/Adding%20Sensors%20For%20Competition).  The possible sensors are described by these xacro files: [[#!/osrf/vrx/src/default/wamv\\_gazebo/urdf/sensors/](#!/osrf/vrx/src/default/wamv_gazebo/urdf/sensors/)](#!/osrf/vrx/src/default/wamv_gazebo/urdf/sensors)\r\n\r\nCurrently we have standalone GPS/IMU models.  It seems that meany teams use a GPS aided IMU similar to these types of units: \r\n\r\n* [https://www.microstrain.com/inertial/3dm-gx5-45](https://www.microstrain.com/inertial/3dm-gx5-45)\r\n* [https://www.advancednavigation.com/product/spatial](https://www.advancednavigation.com/product/spatial)\r\n\r\nThese types of sensors do the fusion of GPS and IMU to provide a high-update rate solution for position, velocity, acceleration, orientation and orientation rate.  We should consider having this as an configurable option.\r\n\r\nIn the past, we\u2019ve used a hack to simulate this type of sensor by adding noise to the P3D ground truth, but that solution isn\u2019t really appropriate and incurs an unrelated dependency: [https://wiki.nps.edu/display/RC/Simulated\\+Sensors%3A\\+Kingfisher\\+Example](https://wiki.nps.edu/display/RC/Simulated+Sensors%3A+Kingfisher+Example)\r\n\r\nThoughts?", "markup": "markdown", "html": "<p>The ability to configure sensors from a set of \u2018standard\u2019 VRX sensors is described on the <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/wiki/tutorials/Adding%20Sensors%20For%20Competition\" rel=\"nofollow\">Adding Sensors For Competition Wiki</a>.  The possible sensors are described by these xacro files: <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/src/default/wamv_gazebo/urdf/sensors\" rel=\"nofollow\">[#!/osrf/vrx/src/default/wamv_gazebo/urdf/sensors/](#!/osrf/vrx/src/default/wamv_gazebo/urdf/sensors/)</a></p>\n<p>Currently we have standalone GPS/IMU models.  It seems that meany teams use a GPS aided IMU similar to these types of units: </p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"https://www.microstrain.com/inertial/3dm-gx5-45\" rel=\"nofollow\">https://www.microstrain.com/inertial/3dm-gx5-45</a></li>\n<li><a data-is-external-link=\"true\" href=\"https://www.advancednavigation.com/product/spatial\" rel=\"nofollow\">https://www.advancednavigation.com/product/spatial</a></li>\n</ul>\n<p>These types of sensors do the fusion of GPS and IMU to provide a high-update rate solution for position, velocity, acceleration, orientation and orientation rate.  We should consider having this as an configurable option.</p>\n<p>In the past, we\u2019ve used a hack to simulate this type of sensor by adding noise to the P3D ground truth, but that solution isn\u2019t really appropriate and incurs an unrelated dependency: <a data-is-external-link=\"true\" href=\"https://wiki.nps.edu/display/RC/Simulated+Sensors%3A+Kingfisher+Example\" rel=\"nofollow\">https://wiki.nps.edu/display/RC/Simulated+Sensors%3A+Kingfisher+Example</a></p>\n<p>Thoughts?</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-06-07T17:55:56.881176+00:00", "milestone": {"name": "1.1", "links": {"self": {"href": "data/repositories/osrf/vrx/milestones/363172.json"}}}, "updated_on": "2019-07-03T18:27:16.478465+00:00", "type": "issue", "id": 104}, {"priority": "blocker", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/105/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/105.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/105/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/105/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/105/default-not-building-winddirection"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/105/vote"}}, "reporter": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "title": "Default Not Building: windDirection ignition::math::Vector3d implementation fix", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The default branch is not building on the most recent merge. I believe this is due to a small implementation detail with the ignition::math::Vector3d windDirection in usv\\_gazebo\\_wind\\_plugin.cc. It\u2019s x,y,z components cannot only be read with the \\[\\] operator, but not changed.  \r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/4256198044-lvalue_required.png)\r\n![](data/bitbucket.org/repo/BgXLzgM/images/3794178774-Default_Branch_Not_Building.png)", "markup": "markdown", "html": "<p>The default branch is not building on the most recent merge. I believe this is due to a small implementation detail with the ignition::math::Vector3d windDirection in usv_gazebo_wind_plugin.cc. It\u2019s x,y,z components cannot only be read with the [] operator, but not changed.  </p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/4256198044-lvalue_required.png\" />\n<img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3794178774-Default_Branch_Not_Building.png\" /></p>", "type": "rendered"}, "assignee": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-06-07T19:57:30.453275+00:00", "milestone": null, "updated_on": "2019-06-07T20:23:37.212992+00:00", "type": "issue", "id": 105}, {"priority": "major", "kind": "task", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/106/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/106.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/106/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/106/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/106/vrx-automated-evaluation"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/106/vote"}}, "reporter": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "title": "VRX automated evaluation", "component": {"name": "Docker", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519937.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "The purpose of this task is to automatically evaluate all team\u2019s submissions for a VRX event. Ideally, we want to reuse as much as possible all infrastructure developed for the ARIAC competition. Here\u2019s a relevant repository:\r\n\r\n[\\[https://github.com/osrf/ariac-docker/\\]\\(https://github.com/osrf/ariac-docker/\\)](https://github.com/osrf/ariac-docker)\r\n\r\nSome developer\u2019s documentation:\r\n\r\n[https://github.com/osrf/ariac-docker/blob/master/README\\_DEVELOPER.md](https://github.com/osrf/ariac-docker/blob/master/README_DEVELOPER.md)\r\n\r\nAnd some high level instructions:\r\n\r\n[https://bitbucket.org/osrf/ariac/wiki/2019/automated\\_evaluation](https://bitbucket.org/osrf/ariac/wiki/2019/automated_evaluation)\r\n\r\nBefore working in the infrastructure, I\u2019d propose to create a plan, discuss it, and then, implement the infrastructure \\(e.g.: Do we create a new repository or we add it to the VRX one?\\).\r\n\r\nMake sure to document the process in the same way we did for ARIAC.", "markup": "markdown", "html": "<p>The purpose of this task is to automatically evaluate all team\u2019s submissions for a VRX event. Ideally, we want to reuse as much as possible all infrastructure developed for the ARIAC competition. Here\u2019s a relevant repository:</p>\n<p><a data-is-external-link=\"true\" href=\"https://github.com/osrf/ariac-docker\" rel=\"nofollow\">[https://github.com/osrf/ariac-docker/](https://github.com/osrf/ariac-docker/)</a></p>\n<p>Some developer\u2019s documentation:</p>\n<p><a data-is-external-link=\"true\" href=\"https://github.com/osrf/ariac-docker/blob/master/README_DEVELOPER.md\" rel=\"nofollow\">https://github.com/osrf/ariac-docker/blob/master/README_DEVELOPER.md</a></p>\n<p>And some high level instructions:</p>\n<p><a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/ariac/wiki/2019/automated_evaluation\" rel=\"nofollow\">https://bitbucket.org/osrf/ariac/wiki/2019/automated_evaluation</a></p>\n<p>Before working in the infrastructure, I\u2019d propose to create a plan, discuss it, and then, implement the infrastructure (e.g.: Do we create a new repository or we add it to the VRX one?).</p>\n<p>Make sure to document the process in the same way we did for ARIAC.</p>", "type": "rendered"}, "assignee": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-06-12T18:05:54.632252+00:00", "milestone": {"name": "1.2", "links": {"self": {"href": "data/repositories/osrf/vrx/milestones/370076.json"}}}, "updated_on": "2019-07-31T20:58:45.582797+00:00", "type": "issue", "id": 106}, {"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/107/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/107.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/107/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/107/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/107/use-namespaces-to-organise-topics"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/107/vote"}}, "reporter": {"display_name": "Jonathan Wheare", "uuid": "{65043b9b-c505-4efe-852a-3d2393a0ee80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B65043b9b-c505-4efe-852a-3d2393a0ee80%7D"}, "html": {"href": "https://bitbucket.org/%7B65043b9b-c505-4efe-852a-3d2393a0ee80%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/JW-2.png"}}, "nickname": "Jonathan Wheare", "type": "user", "account_id": "5b9791e8a9fd6d2c834b5864"}, "title": "Use namespaces to organise topics", "component": {"name": "ROS", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519935.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Currently sensor and control topics are named based on the name of the sensor, e.g. the left thruster command topic is named /left\\_thrust\\_cmd which is based off the .xacro file being passed the name \u201cleft\u201d. As such, I do not believe that a topic name can be created that dows not start with the name of the gazebo object. This also appears to be true of the .xacro generated sensor models.\r\n\r\nThis is in contrast to the topics created by [uuv\\_simulator](https://github.com/uuvsimulator/uuv_simulator), where thruster control topics are prepended with a namespace. For example, the Rexrov uuv has thruster command topics in the form;\r\n\r\n/rexrov/thrusters/0/dynamic\\_state\\_efficiency  \r\n/rexrov/thrusters/0/input  \r\n/rexrov/thrusters/0/is\\_on  \r\n/rexrov/thrusters/0/thrust\r\n\r\nGrouping topics in this manner allows the sensor and control topics to be logically organised. The ability to further prepend a unique robot name would also allow multiple robot simulation to be performed at a later date.\r\n\r\nFor this reason, I propose the following;\r\n\r\n* Add support for namespaces to the .xacro macros that generate the wamv model. This would allow teams to customise their topic layouts. If the namespace is a parameter that has a defaults to an empty string, it should not affect the current topic organisation.\r\n* Add support to the .yaml based thruster configuration in issue ~~#97~~ for such namespaces\r\n\r\n~~In addition to altering the simulation based topics, ity may also be useful if task related topics were also moved under a namespace such as /task.~~  Reviewing the topic organisation, competition related topics are under the VRX namespace.\r\n\r\nRegards,\r\n\r\nJonathan.", "markup": "markdown", "html": "<p>Currently sensor and control topics are named based on the name of the sensor, e.g. the left thruster command topic is named /left_thrust_cmd which is based off the .xacro file being passed the name \u201cleft\u201d. As such, I do not believe that a topic name can be created that dows not start with the name of the gazebo object. This also appears to be true of the .xacro generated sensor models.</p>\n<p>This is in contrast to the topics created by <a data-is-external-link=\"true\" href=\"https://github.com/uuvsimulator/uuv_simulator\" rel=\"nofollow\">uuv_simulator</a>, where thruster control topics are prepended with a namespace. For example, the Rexrov uuv has thruster command topics in the form;</p>\n<p>/rexrov/thrusters/0/dynamic_state_efficiency<br />\n/rexrov/thrusters/0/input<br />\n/rexrov/thrusters/0/is_on<br />\n/rexrov/thrusters/0/thrust</p>\n<p>Grouping topics in this manner allows the sensor and control topics to be logically organised. The ability to further prepend a unique robot name would also allow multiple robot simulation to be performed at a later date.</p>\n<p>For this reason, I propose the following;</p>\n<ul>\n<li>Add support for namespaces to the .xacro macros that generate the wamv model. This would allow teams to customise their topic layouts. If the namespace is a parameter that has a defaults to an empty string, it should not affect the current topic organisation.</li>\n<li>Add support to the .yaml based thruster configuration in issue <del><a href=\"#!/osrf/vrx/issues/97/propulsion-allowing-for-yaml-based\" rel=\"nofollow\" title=\"Propulsion: Allowing for YAML based configuration\" class=\"ap-connect-link\"><s>#97</s></a></del> for such namespaces</li>\n</ul>\n<p><del>In addition to altering the simulation based topics, ity may also be useful if task related topics were also moved under a namespace such as /task.</del>  Reviewing the topic organisation, competition related topics are under the VRX namespace.</p>\n<p>Regards,</p>\n<p>Jonathan.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-06-15T03:50:38.061909+00:00", "milestone": {"name": "1.2", "links": {"self": {"href": "data/repositories/osrf/vrx/milestones/370076.json"}}}, "updated_on": "2019-08-16T23:37:02.383866+00:00", "type": "issue", "id": 107}, {"priority": "major", "kind": "task", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/108/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/108.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/108/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/108/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/108/refine-navigation-gps-imu-etc-sensor"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/108/vote"}}, "reporter": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "title": "Refine navigation (GPS, IMU, etc.) sensor options for VRX", "component": {"name": "Plugin", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519936.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "**Overview**\r\n\r\nNeed to solidify the types and characteristics of navigation sensors available to VRX participants.   \r\n\r\n**Background**\r\n\r\n* [PR #99](#!/osrf/vrx/pull-requests/99/yaml-sensor-configuration/diff) added ability for teams to customize sensor configuration\r\n* [Issue #104](#!/osrf/vrx/issues/104) suggests allowing for GPS-sided IMU navigation sensors\r\n* [VRX Forum Post](https://robonationforum.vbulletin.net/forum/robotx/virtual-robotx-aa/2021-questions-about-vrx-2019-rules) discusses a custom GPS plugin that publishes NMEA sentences.  The suggestion is that this might be a useful sensor to consider including.\r\n\r\n**Plan**\r\n\r\nNeed to\u2026\r\n\r\n1. Survey past RobotX reports to  refine what types of solutions are typical for RobotX teams\r\n2. Define a set of generic navigation sensors that would cover a good portion of the use cases in 1.\r\n\r\n    1. Types of sensors: GPS, IMU, GPS/IMU, etc.\r\n    2. Performance specifications: accuracy, update rate, etc.\r\n    \r\n3. Provide support and examples for the defined set of navigation sensors within VRX\r\n4. Create documentation \\(include narrative in Technical Guide\\) and tutorials \\(wiki\\)", "markup": "markdown", "html": "<p><strong>Overview</strong></p>\n<p>Need to solidify the types and characteristics of navigation sensors available to VRX participants.   </p>\n<p><strong>Background</strong></p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"#!/osrf/vrx/pull-requests/99/yaml-sensor-configuration/diff\" rel=\"nofollow\">PR #99</a> added ability for teams to customize sensor configuration</li>\n<li><a data-is-external-link=\"true\" href=\"#!/osrf/vrx/issues/104\" rel=\"nofollow\">Issue #104</a> suggests allowing for GPS-sided IMU navigation sensors</li>\n<li><a data-is-external-link=\"true\" href=\"https://robonationforum.vbulletin.net/forum/robotx/virtual-robotx-aa/2021-questions-about-vrx-2019-rules\" rel=\"nofollow\">VRX Forum Post</a> discusses a custom GPS plugin that publishes NMEA sentences.  The suggestion is that this might be a useful sensor to consider including.</li>\n</ul>\n<p><strong>Plan</strong></p>\n<p>Need to\u2026</p>\n<ol>\n<li>Survey past RobotX reports to  refine what types of solutions are typical for RobotX teams</li>\n<li>\n<p>Define a set of generic navigation sensors that would cover a good portion of the use cases in 1.</p>\n<ol>\n<li>Types of sensors: GPS, IMU, GPS/IMU, etc.</li>\n<li>Performance specifications: accuracy, update rate, etc.</li>\n</ol>\n</li>\n<li>\n<p>Provide support and examples for the defined set of navigation sensors within VRX</p>\n</li>\n<li>Create documentation (include narrative in Technical Guide) and tutorials (wiki)</li>\n</ol>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-06-17T15:16:14.619294+00:00", "milestone": {"name": "1.1", "links": {"self": {"href": "data/repositories/osrf/vrx/milestones/363172.json"}}}, "updated_on": "2019-06-30T07:55:09.644704+00:00", "type": "issue", "id": 108}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/109/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/109.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/109/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/109/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/109/wamv-forces-visualization"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/109/vote"}}, "reporter": {"display_name": "Marshall Rawson", "uuid": "{e6f8e5b5-5261-44d3-b2d4-092469c4157a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D"}, "html": {"href": "https://bitbucket.org/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bd54845fa0ad1be5a529eb87d738f221d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMR-4.png"}}, "nickname": "MarshallRawson", "type": "user", "account_id": "5ce2e28709c5fa0fd9fb0c6c"}, "title": "WAMV Forces Visualization", "component": {"name": "Plugin", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519936.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Create a model plugin \\(attached to the WAMV\\) which looks at all forces applied to that model\u2019s links and visualizes them with gazebo markers. The markers should ideally not be expressed as simply forces and torques on the Center of Mass of an object, but rather arrow markers steaming from where the force on the wamv is being applied, a length proportional to the magnitude of the force, and direction equal to the direction of the force.", "markup": "markdown", "html": "<p>Create a model plugin (attached to the WAMV) which looks at all forces applied to that model\u2019s links and visualizes them with gazebo markers. The markers should ideally not be expressed as simply forces and torques on the Center of Mass of an object, but rather arrow markers steaming from where the force on the wamv is being applied, a length proportional to the magnitude of the force, and direction equal to the direction of the force.</p>", "type": "rendered"}, "assignee": {"display_name": "Rumman Waqar", "uuid": "{375366ee-150c-4843-9449-cbec61c538ca}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B375366ee-150c-4843-9449-cbec61c538ca%7D"}, "html": {"href": "https://bitbucket.org/%7B375366ee-150c-4843-9449-cbec61c538ca%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5a8b94bb21870439aa9167ef/026c5cb4-b99d-4aad-90d7-62d45fe41395/128"}}, "nickname": "rumman05", "type": "user", "account_id": "5a8b94bb21870439aa9167ef"}, "state": "new", "version": null, "edited_on": null, "created_on": "2019-06-18T19:02:15.083393+00:00", "milestone": {"name": "1.2", "links": {"self": {"href": "data/repositories/osrf/vrx/milestones/370076.json"}}}, "updated_on": "2019-07-08T16:21:19.528780+00:00", "type": "issue", "id": 109}, {"priority": "critical", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/110/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/110.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/110/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/110/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/110/stationkeeping-plugin-rms_error-is"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/110/vote"}}, "reporter": {"display_name": "Michael McCarrin", "uuid": "{3c3f500d-bbf6-472c-b8f7-627e5eabc226}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D"}, "html": {"href": "https://bitbucket.org/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a50abc93a3175f92c79e7521dfe089c0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "m1chaelm", "type": "user", "account_id": "5b2a9176467c9a09caa71ab1"}, "title": "Stationkeeping plugin rms_error is publishing \"nan\"", "component": null, "votes": 0, "watches": 1, "content": {"raw": "There seems to be some error in the rms\\_error calculation that needs to be tracked down.", "markup": "markdown", "html": "<p>There seems to be some error in the rms_error calculation that needs to be tracked down.</p>", "type": "rendered"}, "assignee": {"display_name": "Michael McCarrin", "uuid": "{3c3f500d-bbf6-472c-b8f7-627e5eabc226}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D"}, "html": {"href": "https://bitbucket.org/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a50abc93a3175f92c79e7521dfe089c0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "m1chaelm", "type": "user", "account_id": "5b2a9176467c9a09caa71ab1"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-06-20T16:43:12.599786+00:00", "milestone": null, "updated_on": "2019-06-21T16:16:11.206771+00:00", "type": "issue", "id": 110}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/111/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/111.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/111/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/111/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/111/finish-criteria-for-scoring-plugins"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/111/vote"}}, "reporter": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "title": "Finish criteria for scoring plugins.", "component": {"name": "Plugin", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519936.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "The Wayfinding, Navigation Channel and Docking tasks have a component of scoring based on the elapsed time of the task.  Implementing this will require having the associated scoring plugins transition to \u201cfinished\u201d state based on task-specific criteria.  Would also need to make sure the elapsed time was easily accessible in the log files for scoring purposes.", "markup": "markdown", "html": "<p>The Wayfinding, Navigation Channel and Docking tasks have a component of scoring based on the elapsed time of the task.  Implementing this will require having the associated scoring plugins transition to \u201cfinished\u201d state based on task-specific criteria.  Would also need to make sure the elapsed time was easily accessible in the log files for scoring purposes.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-06-21T00:53:30.691578+00:00", "milestone": {"name": "1.1", "links": {"self": {"href": "data/repositories/osrf/vrx/milestones/363172.json"}}}, "updated_on": "2019-07-02T01:54:17.605444+00:00", "type": "issue", "id": 111}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/112/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/112.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/112/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/112/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/112/perception-task-and-scan-the-code-task-do"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/112/vote"}}, "reporter": {"display_name": "Michael McCarrin", "uuid": "{3c3f500d-bbf6-472c-b8f7-627e5eabc226}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D"}, "html": {"href": "https://bitbucket.org/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a50abc93a3175f92c79e7521dfe089c0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "m1chaelm", "type": "user", "account_id": "5b2a9176467c9a09caa71ab1"}, "title": "Perception Task and Scan-the-code task do not signal state changes", "component": null, "votes": 0, "watches": 1, "content": {"raw": "All of our tasks follow the four state progression described in the Technical Guide, but only 3 of them print messages to console indicating when state changes occur. In retrospect, these messages were probably meant as placeholders that didn\u2019t get removed during implementation. However, they are very convenient for helping users to understand what\u2019s happening \\(for example, why their score has stopped updating, etc.\\) So, I propose that all tasks print these messages in a uniform way.", "markup": "markdown", "html": "<p>All of our tasks follow the four state progression described in the Technical Guide, but only 3 of them print messages to console indicating when state changes occur. In retrospect, these messages were probably meant as placeholders that didn\u2019t get removed during implementation. However, they are very convenient for helping users to understand what\u2019s happening (for example, why their score has stopped updating, etc.) So, I propose that all tasks print these messages in a uniform way.</p>", "type": "rendered"}, "assignee": {"display_name": "Michael McCarrin", "uuid": "{3c3f500d-bbf6-472c-b8f7-627e5eabc226}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D"}, "html": {"href": "https://bitbucket.org/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a50abc93a3175f92c79e7521dfe089c0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "m1chaelm", "type": "user", "account_id": "5b2a9176467c9a09caa71ab1"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-06-21T01:23:10.381227+00:00", "milestone": {"name": "1.1", "links": {"self": {"href": "data/repositories/osrf/vrx/milestones/363172.json"}}}, "updated_on": "2019-07-01T17:51:46.582044+00:00", "type": "issue", "id": 112}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/113/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/113.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/113/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/113/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/113/rqt-is-used-in-our-tutorials-but-not"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/113/vote"}}, "reporter": {"display_name": "Michael McCarrin", "uuid": "{3c3f500d-bbf6-472c-b8f7-627e5eabc226}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D"}, "html": {"href": "https://bitbucket.org/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a50abc93a3175f92c79e7521dfe089c0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "m1chaelm", "type": "user", "account_id": "5b2a9176467c9a09caa71ab1"}, "title": "rqt is used in our tutorials but not installed by default", "component": null, "votes": 0, "watches": 1, "content": {"raw": "In the [Perception Task example tutorial](#!/osrf/vrx/wiki/tutorials/vrx_tasks_2019) we ask users to run \r\n\r\n```\r\nrosrun rqt_gui rqt_gui --perspective-file ~/vrx_ws/src/vrx/vrx_gazebo/config/front_stereo.perspective\r\n```\r\n\r\nbut if they have followed our build instructions this will produce an error, since rqt\\_gui is not installed. To fix, the Dockerfile and host install instructions need to be updated.", "markup": "markdown", "html": "<p>In the <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/wiki/tutorials/vrx_tasks_2019\" rel=\"nofollow\">Perception Task example tutorial</a> we ask users to run </p>\n<div class=\"codehilite\"><pre><span></span>rosrun rqt_gui rqt_gui --perspective-file ~/vrx_ws/src/vrx/vrx_gazebo/config/front_stereo.perspective\n</pre></div>\n\n\n<p>but if they have followed our build instructions this will produce an error, since rqt_gui is not installed. To fix, the Dockerfile and host install instructions need to be updated.</p>", "type": "rendered"}, "assignee": {"display_name": "Michael McCarrin", "uuid": "{3c3f500d-bbf6-472c-b8f7-627e5eabc226}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D"}, "html": {"href": "https://bitbucket.org/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a50abc93a3175f92c79e7521dfe089c0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "m1chaelm", "type": "user", "account_id": "5b2a9176467c9a09caa71ab1"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-06-21T01:26:35.650121+00:00", "milestone": {"name": "1.1", "links": {"self": {"href": "data/repositories/osrf/vrx/milestones/363172.json"}}}, "updated_on": "2019-06-25T23:34:29.899422+00:00", "type": "issue", "id": 113}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/114/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/114.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/114/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/114/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/114/perception-task-starts-very-soon"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/114/vote"}}, "reporter": {"display_name": "Michael McCarrin", "uuid": "{3c3f500d-bbf6-472c-b8f7-627e5eabc226}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D"}, "html": {"href": "https://bitbucket.org/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a50abc93a3175f92c79e7521dfe089c0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "m1chaelm", "type": "user", "account_id": "5b2a9176467c9a09caa71ab1"}, "title": "Perception Task starts very soon", "component": null, "votes": 0, "watches": 1, "content": {"raw": "When running the perception task example, the objects begin appearing almost immediately after the scene is initialized. As a result, it is difficult to bring up the front stereo perspective fast enough to see all the objects. When automated, this may be of less importance, but it still seems, at least provisionally, like a longer initial pause might be helpful. What does everyone think?", "markup": "markdown", "html": "<p>When running the perception task example, the objects begin appearing almost immediately after the scene is initialized. As a result, it is difficult to bring up the front stereo perspective fast enough to see all the objects. When automated, this may be of less importance, but it still seems, at least provisionally, like a longer initial pause might be helpful. What does everyone think?</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-06-21T01:32:49.478631+00:00", "milestone": null, "updated_on": "2019-06-22T06:44:07.230847+00:00", "type": "issue", "id": 114}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/115/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/115.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/115/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/115/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/115/add-buoyancy-forces-to-dock-elements"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/115/vote"}}, "reporter": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "title": "Add buoyancy forces to dock elements", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently the dock blocks are static, so not affected by the waves. Would be nice to add the buoyancy plugin to these models.", "markup": "markdown", "html": "<p>Currently the dock blocks are static, so not affected by the waves. Would be nice to add the buoyancy plugin to these models.</p>", "type": "rendered"}, "assignee": {"display_name": "Marshall Rawson", "uuid": "{e6f8e5b5-5261-44d3-b2d4-092469c4157a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D"}, "html": {"href": "https://bitbucket.org/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bd54845fa0ad1be5a529eb87d738f221d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMR-4.png"}}, "nickname": "MarshallRawson", "type": "user", "account_id": "5ce2e28709c5fa0fd9fb0c6c"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-06-21T16:05:41.918125+00:00", "milestone": {"name": "1.2", "links": {"self": {"href": "data/repositories/osrf/vrx/milestones/370076.json"}}}, "updated_on": "2019-08-15T22:02:29.329810+00:00", "type": "issue", "id": 115}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/116/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/116.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/116/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/116/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/116/roskey-is-out-of-date"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/116/vote"}}, "reporter": {"display_name": "Michael McCarrin", "uuid": "{3c3f500d-bbf6-472c-b8f7-627e5eabc226}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D"}, "html": {"href": "https://bitbucket.org/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a50abc93a3175f92c79e7521dfe089c0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "m1chaelm", "type": "user", "account_id": "5b2a9176467c9a09caa71ab1"}, "title": "ros.key is out of date", "component": null, "votes": 0, "watches": 1, "content": {"raw": "[A new key came out on June 7](https://discourse.ros.org/t/new-gpg-keys-deployed-for-packages-ros-org/9454). This is addressed by PR #117. Creating this issue to make sure it\u2019s tied to the upcoming release.", "markup": "markdown", "html": "<p><a data-is-external-link=\"true\" href=\"https://discourse.ros.org/t/new-gpg-keys-deployed-for-packages-ros-org/9454\" rel=\"nofollow\">A new key came out on June 7</a>. This is addressed by <a href=\"#!/osrf/vrx/pull-requests/117/updating-to-new-ros-key-using-pgp-block\" rel=\"nofollow\" class=\"ap-connect-link\">PR #117</a>. Creating this issue to make sure it\u2019s tied to the upcoming release.</p>", "type": "rendered"}, "assignee": {"display_name": "Michael McCarrin", "uuid": "{3c3f500d-bbf6-472c-b8f7-627e5eabc226}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D"}, "html": {"href": "https://bitbucket.org/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a50abc93a3175f92c79e7521dfe089c0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "m1chaelm", "type": "user", "account_id": "5b2a9176467c9a09caa71ab1"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-06-21T17:05:35.849863+00:00", "milestone": {"name": "1.1", "links": {"self": {"href": "data/repositories/osrf/vrx/milestones/363172.json"}}}, "updated_on": "2019-06-22T23:12:16.620917+00:00", "type": "issue", "id": 116}, {"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/117/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/117.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/117/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/117/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/117/clarify-how-perception-task-handles-timing"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/117/vote"}}, "reporter": {"display_name": "Michael McCarrin", "uuid": "{3c3f500d-bbf6-472c-b8f7-627e5eabc226}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D"}, "html": {"href": "https://bitbucket.org/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a50abc93a3175f92c79e7521dfe089c0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "m1chaelm", "type": "user", "account_id": "5b2a9176467c9a09caa71ab1"}, "title": "Clarify how perception task handles timing of submissions", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The behavior of the scoring plugin appears to be that it only allows the team to submit an answer while the object in question is still visible \\(i.e. before the next object appears\\). Given that we will only score the first answer, it seems like the optimal solution would want to take advantage of the full window before giving an answer, but would need to make sure it doesn't answer too late. However, we don't give any indication of when the object is going to go away, so this is hard to guess. I think there are a few solutions we might consider:\r\n\r\n1. Simply state that every object will be visible for some fixed amount of time. For example, it looks like we currently switch every 5 seconds, so we could just document that this is the time.\r\n2. If the time is meant to be variable, we can give some indication that an object is about to go away--either by publishing a message or giving a visual indication.\r\n3. Ignore the time of submission and simply score the submissions in order. In this version, the objects would still appear and disappear at any speeds \\(or variable speeds\\), and teams can submit solutions any time before the onFinished state arrives. \r\n\r\nMy preference is option 3 because it seems relatively simple to implement and allows us to vary the difficulty of the task over different runs. Option 2 seems like the most complicated.  \r\n  \r\nOf course, I doubt the above list is exhaustive. Other ideas?", "markup": "markdown", "html": "<p>The behavior of the scoring plugin appears to be that it only allows the team to submit an answer while the object in question is still visible (i.e. before the next object appears). Given that we will only score the first answer, it seems like the optimal solution would want to take advantage of the full window before giving an answer, but would need to make sure it doesn't answer too late. However, we don't give any indication of when the object is going to go away, so this is hard to guess. I think there are a few solutions we might consider:</p>\n<ol>\n<li>Simply state that every object will be visible for some fixed amount of time. For example, it looks like we currently switch every 5 seconds, so we could just document that this is the time.</li>\n<li>If the time is meant to be variable, we can give some indication that an object is about to go away--either by publishing a message or giving a visual indication.</li>\n<li>Ignore the time of submission and simply score the submissions in order. In this version, the objects would still appear and disappear at any speeds (or variable speeds), and teams can submit solutions any time before the onFinished state arrives. </li>\n</ol>\n<p>My preference is option 3 because it seems relatively simple to implement and allows us to vary the difficulty of the task over different runs. Option 2 seems like the most complicated.  </p>\n<p>Of course, I doubt the above list is exhaustive. Other ideas?</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-06-21T18:33:10.076009+00:00", "milestone": {"name": "1.1", "links": {"self": {"href": "data/repositories/osrf/vrx/milestones/363172.json"}}}, "updated_on": "2019-07-01T23:48:11.163410+00:00", "type": "issue", "id": 117}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/118/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/118.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/118/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/118/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/118/fix-perception-task-tutorial-to-reflect"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/118/vote"}}, "reporter": {"display_name": "Michael McCarrin", "uuid": "{3c3f500d-bbf6-472c-b8f7-627e5eabc226}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D"}, "html": {"href": "https://bitbucket.org/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a50abc93a3175f92c79e7521dfe089c0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "m1chaelm", "type": "user", "account_id": "5b2a9176467c9a09caa71ab1"}, "title": "Fix perception task tutorial to reflect final submission protocol", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The current version of the [perception task tutorial](#!/osrf/vrx/wiki/tutorials/vrx_tasks_2019#markdown-header-3-perception) gives the following command for publishing landmark identification and localization solutions to the `/vrx/perception/landmark` topic:\r\n\r\n```\r\nrostopic pub -r 1 /vrx/perception/landmark geographic_msgs/GeoPoseStamped '{header: {stamp: now, frame_id: \"red_mark\"}, pose: {position: {latitude: 21.30996, longitude: -157.8901, altitude: 0.0}}}'\r\n```\r\n\r\nThis command causes the submission to be published repeatedly at 1Hz, and must be canceled manually with CTRL\\+C. It seems likely that this command should instead be:\r\n\r\n```\r\nrostopic pub -1 /vrx/perception/landmark geographic_msgs/GeoPoseStamped '{header: {stamp: now, frame_id: \"red_mark\"}, pose: {position: {latitude: 21.30996, longitude: -157.8901, altitude: 0.0}}}'\r\n```\r\n\r\nwhich publishes the solution once and latches it for 3 seconds. \r\n\r\nHowever, it would be good to specify whether this publication must occur while the object is still in view, so this fix depends on issue #117.", "markup": "markdown", "html": "<p>The current version of the <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/wiki/tutorials/vrx_tasks_2019#markdown-header-3-perception\" rel=\"nofollow\">perception task tutorial</a> gives the following command for publishing landmark identification and localization solutions to the <code>/vrx/perception/landmark</code> topic:</p>\n<div class=\"codehilite\"><pre><span></span>rostopic pub -r 1 /vrx/perception/landmark geographic_msgs/GeoPoseStamped &#39;{header: {stamp: now, frame_id: &quot;red_mark&quot;}, pose: {position: {latitude: 21.30996, longitude: -157.8901, altitude: 0.0}}}&#39;\n</pre></div>\n\n\n<p>This command causes the submission to be published repeatedly at 1Hz, and must be canceled manually with CTRL+C. It seems likely that this command should instead be:</p>\n<div class=\"codehilite\"><pre><span></span>rostopic pub -1 /vrx/perception/landmark geographic_msgs/GeoPoseStamped &#39;{header: {stamp: now, frame_id: &quot;red_mark&quot;}, pose: {position: {latitude: 21.30996, longitude: -157.8901, altitude: 0.0}}}&#39;\n</pre></div>\n\n\n<p>which publishes the solution once and latches it for 3 seconds. </p>\n<p>However, it would be good to specify whether this publication must occur while the object is still in view, so this fix depends on issue <a href=\"#!/osrf/vrx/issues/117/clarify-how-perception-task-handles-timing\" rel=\"nofollow\" title=\"Clarify how perception task handles timing of submissions\" class=\"ap-connect-link\"><s>#117</s></a>.</p>", "type": "rendered"}, "assignee": {"display_name": "Michael McCarrin", "uuid": "{3c3f500d-bbf6-472c-b8f7-627e5eabc226}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D"}, "html": {"href": "https://bitbucket.org/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a50abc93a3175f92c79e7521dfe089c0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "m1chaelm", "type": "user", "account_id": "5b2a9176467c9a09caa71ab1"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-06-21T18:43:16.941901+00:00", "milestone": {"name": "1.1", "links": {"self": {"href": "data/repositories/osrf/vrx/milestones/363172.json"}}}, "updated_on": "2019-07-01T23:59:24.357457+00:00", "type": "issue", "id": 118}, {"priority": "major", "kind": "task", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/119/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/119.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/119/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/119/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/119/update-vrx-2019-task-example-tutorials"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/119/vote"}}, "reporter": {"display_name": "Michael McCarrin", "uuid": "{3c3f500d-bbf6-472c-b8f7-627e5eabc226}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D"}, "html": {"href": "https://bitbucket.org/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a50abc93a3175f92c79e7521dfe089c0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "m1chaelm", "type": "user", "account_id": "5b2a9176467c9a09caa71ab1"}, "title": "Update VRX 2019 Task example tutorials", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Make sure the VRX Tasks: Examples tutorials are working before the release.", "markup": "markdown", "html": "<p>Make sure the VRX Tasks: Examples tutorials are working before the release.</p>", "type": "rendered"}, "assignee": {"display_name": "Michael McCarrin", "uuid": "{3c3f500d-bbf6-472c-b8f7-627e5eabc226}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D"}, "html": {"href": "https://bitbucket.org/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a50abc93a3175f92c79e7521dfe089c0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "m1chaelm", "type": "user", "account_id": "5b2a9176467c9a09caa71ab1"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-06-21T18:49:02.749855+00:00", "milestone": {"name": "1.1", "links": {"self": {"href": "data/repositories/osrf/vrx/milestones/363172.json"}}}, "updated_on": "2019-07-08T21:49:15.652505+00:00", "type": "issue", "id": 119}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/120/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/120.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/120/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/120/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/120/scan-and-dock-task-can-produce-unsolvable"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/120/vote"}}, "reporter": {"display_name": "Michael McCarrin", "uuid": "{3c3f500d-bbf6-472c-b8f7-627e5eabc226}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D"}, "html": {"href": "https://bitbucket.org/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a50abc93a3175f92c79e7521dfe089c0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "m1chaelm", "type": "user", "account_id": "5b2a9176467c9a09caa71ab1"}, "title": "Scan and Dock Task can produce unsolvable scenarios", "component": {"name": "Plugin", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519936.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Running the Scan and Dock task \\(a or b\\) always creates a dock with two bays, both of which are marked with a blue circle. Therefore, no matter what shape or sequence is received, it is impossible to know which bay is correct. At minimum, our example should default to a dock with different symbols on it. If we want to offer the ability to generate a scenario at random, a dock should not be able to choose the same color / shape combination for multiple bays.\r\n\r\nIn addition, when running version A of this task, the plugin always announces the correct dock as \u201cred\\_circle\u201d \\(which does not match the placard of the correct dock\\). This could be easily fixed by editing the \u201cannounce symbol\u201d in the xacro file, but it would be better if the announce symbol were red from the actual symbol on the bay, since this would prevent the system from \u201clying\u201d about its symbol.", "markup": "markdown", "html": "<p>Running the Scan and Dock task (a or b) always creates a dock with two bays, both of which are marked with a blue circle. Therefore, no matter what shape or sequence is received, it is impossible to know which bay is correct. At minimum, our example should default to a dock with different symbols on it. If we want to offer the ability to generate a scenario at random, a dock should not be able to choose the same color / shape combination for multiple bays.</p>\n<p>In addition, when running version A of this task, the plugin always announces the correct dock as \u201cred_circle\u201d (which does not match the placard of the correct dock). This could be easily fixed by editing the \u201cannounce symbol\u201d in the xacro file, but it would be better if the announce symbol were red from the actual symbol on the bay, since this would prevent the system from \u201clying\u201d about its symbol.</p>", "type": "rendered"}, "assignee": {"display_name": "Marshall Rawson", "uuid": "{e6f8e5b5-5261-44d3-b2d4-092469c4157a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D"}, "html": {"href": "https://bitbucket.org/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bd54845fa0ad1be5a529eb87d738f221d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMR-4.png"}}, "nickname": "MarshallRawson", "type": "user", "account_id": "5ce2e28709c5fa0fd9fb0c6c"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-06-21T20:40:49.120955+00:00", "milestone": {"name": "1.1", "links": {"self": {"href": "data/repositories/osrf/vrx/milestones/363172.json"}}}, "updated_on": "2019-06-30T07:52:20.671260+00:00", "type": "issue", "id": 120}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/121/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/121.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/121/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/121/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/121/scan-the-code-b-does-not-indicate-how"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/121/vote"}}, "reporter": {"display_name": "Michael McCarrin", "uuid": "{3c3f500d-bbf6-472c-b8f7-627e5eabc226}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D"}, "html": {"href": "https://bitbucket.org/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a50abc93a3175f92c79e7521dfe089c0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "m1chaelm", "type": "user", "account_id": "5b2a9176467c9a09caa71ab1"}, "title": "Scan-the-code B does not indicate how sequences correspond to placards", "component": {"name": "Plugin", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519936.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Our documentation currently states that the color sequence shown in the scan-the-code buoy corresponds to a unique placard symbol that indicates which bay vehicles should dock at. However, it does not yet say how the teams can derive the symbol from the sequence. How does this work?", "markup": "markdown", "html": "<p>Our documentation currently states that the color sequence shown in the scan-the-code buoy corresponds to a unique placard symbol that indicates which bay vehicles should dock at. However, it does not yet say how the teams can derive the symbol from the sequence. How does this work?</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-06-22T06:36:46.320841+00:00", "milestone": {"name": "1.1", "links": {"self": {"href": "data/repositories/osrf/vrx/milestones/363172.json"}}}, "updated_on": "2019-06-30T07:39:00.289560+00:00", "type": "issue", "id": 121}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/122/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/122.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/122/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/122/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/122/ocean-reflections"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/122/vote"}}, "reporter": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "title": "Ocean reflections", "component": {"name": "Rendering", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519938.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Would it be possible to have the ocean surface provide reflections?  For vision-based tasks on the water this may be an important factor to reproduce.\r\n\r\nI suspect this is something teams will inquire about, so if it isn\u2019t feasible we be able to explain the tradeoff.", "markup": "markdown", "html": "<p>Would it be possible to have the ocean surface provide reflections?  For vision-based tasks on the water this may be an important factor to reproduce.</p>\n<p>I suspect this is something teams will inquire about, so if it isn\u2019t feasible we be able to explain the tradeoff.</p>", "type": "rendered"}, "assignee": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-06-24T18:06:56.114354+00:00", "milestone": {"name": "1.2", "links": {"self": {"href": "data/repositories/osrf/vrx/milestones/370076.json"}}}, "updated_on": "2019-09-05T20:30:20.646114+00:00", "type": "issue", "id": 122}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/123/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/123.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/123/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/123/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/123/add-record-and-playback-functionality"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/123/vote"}}, "reporter": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "title": "Add record and playback functionality", "component": null, "votes": 0, "watches": 1, "content": {"raw": "It will be very valuable to be able to record and playback Gazebo simulations, particularly for the purposes of generating videos for competition. These include feedback for competitors who want to see their performance visually and highlight videos that we can create to showcase the best teams.", "markup": "markdown", "html": "<p>It will be very valuable to be able to record and playback Gazebo simulations, particularly for the purposes of generating videos for competition. These include feedback for competitors who want to see their performance visually and highlight videos that we can create to showcase the best teams.</p>", "type": "rendered"}, "assignee": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-06-24T23:54:39.427417+00:00", "milestone": null, "updated_on": "2019-06-27T20:29:47.238618+00:00", "type": "issue", "id": 123}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/124/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/124.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/124/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/124/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/124/thrusters-not-connected-to-base-link-in-tf"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/124/vote"}}, "reporter": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "title": "Thrusters Not Connected to Base Link in TF Tree", "component": null, "votes": 1, "watches": 1, "content": {"raw": "Currently, when running any boat launch file, the thrusters are not connected to the base link in the tf tree. This can be shown by running the following commands.\r\n\r\n1. `roslaunch vrx_gazebo sandisland.launch`\r\n2. `rosrun robot_state_publisher robot_state_publisher`\r\n3. `rosrun rqt_tf_tree rqt_tf_tree`\r\n\r\n    ![](data/bitbucket.org/repo/BgXLzgM/images/2706069844-TF_Tree_from_Default_VRX_launch.png)\r\n\r\n_Figure 1: TF Tree from vrx.launch_\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/2032781734-TF_Tree_for_Sandisland_Default.png)\r\n_Figure 2: TF Tree from sandisland.launch_", "markup": "markdown", "html": "<p>Currently, when running any boat launch file, the thrusters are not connected to the base link in the tf tree. This can be shown by running the following commands.</p>\n<ol>\n<li><code>roslaunch vrx_gazebo sandisland.launch</code></li>\n<li><code>rosrun robot_state_publisher robot_state_publisher</code></li>\n<li>\n<p><code>rosrun rqt_tf_tree rqt_tf_tree</code></p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/2706069844-TF_Tree_from_Default_VRX_launch.png\" /></p>\n</li>\n</ol>\n<p><em>Figure 1: TF Tree from vrx.launch</em></p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/2032781734-TF_Tree_for_Sandisland_Default.png\" />\n<em>Figure 2: TF Tree from sandisland.launch</em></p>", "type": "rendered"}, "assignee": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-06-27T14:12:58.050954+00:00", "milestone": null, "updated_on": "2019-06-27T20:29:22.307291+00:00", "type": "issue", "id": 124}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/125/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/125.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/125/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/125/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/125/access-to-the-thrust_angle-topic-and-more"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/125/vote"}}, "reporter": {"display_name": "Matthieu Parent", "uuid": "{8cd0d7ed-b490-4bf0-ba83-2aa5825e516e}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B8cd0d7ed-b490-4bf0-ba83-2aa5825e516e%7D"}, "html": {"href": "https://bitbucket.org/%7B8cd0d7ed-b490-4bf0-ba83-2aa5825e516e%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/831530fba530d018794f6ba54b0065b0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-4.png"}}, "nickname": "Matthieu Parent", "type": "user", "account_id": "5d165701e207030bd3c6e063"}, "title": "Access to the thrust_angle topic and more", "component": {"name": "ROS", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519935.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Hi,\r\n\r\nI am currently running through the tutorial and I am stuck. I respect every steps and I cannot access to the thurst\\_angle topic concerning the angle of the propellers. Do I miss something ?\r\n\r\nQuote from the tutorials/examples section : << After launch, all examples given below should begin with the wamv floating on the water near the shore, as shown >>   -----> my boat is always in the middle of nowhere in water\u2026 and it is just drifting.\r\n\r\nNot a single example is working in the end. Maybe I am wrong I do not know\u2026\r\n\r\nIn the installation tutorial it is told that we have 2 options : installing the full-package or build it from source. I had to do both, I do not understand why there are two options then.\r\n\r\nI am a real beginner on ROS and I have already made some tutorials but it is quite hard right now.\r\n\r\nThank you for your time,\r\n\r\nMatthieuPar", "markup": "markdown", "html": "<p>Hi,</p>\n<p>I am currently running through the tutorial and I am stuck. I respect every steps and I cannot access to the thurst_angle topic concerning the angle of the propellers. Do I miss something ?</p>\n<p>Quote from the tutorials/examples section : &lt;&lt; After launch, all examples given below should begin with the wamv floating on the water near the shore, as shown &gt;&gt;   -----&gt; my boat is always in the middle of nowhere in water\u2026 and it is just drifting.</p>\n<p>Not a single example is working in the end. Maybe I am wrong I do not know\u2026</p>\n<p>In the installation tutorial it is told that we have 2 options : installing the full-package or build it from source. I had to do both, I do not understand why there are two options then.</p>\n<p>I am a real beginner on ROS and I have already made some tutorials but it is quite hard right now.</p>\n<p>Thank you for your time,</p>\n<p>MatthieuPar</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-06-28T18:11:35.700099+00:00", "milestone": null, "updated_on": "2019-07-30T18:03:54.742874+00:00", "type": "issue", "id": 125}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/126/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/126.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/126/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/126/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/126/perception-task-starts-before-running"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/126/vote"}}, "reporter": {"display_name": "Michael McCarrin", "uuid": "{3c3f500d-bbf6-472c-b8f7-627e5eabc226}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D"}, "html": {"href": "https://bitbucket.org/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a50abc93a3175f92c79e7521dfe089c0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "m1chaelm", "type": "user", "account_id": "5b2a9176467c9a09caa71ab1"}, "title": "Perception Task starts before running state", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The trials in the perception task begin to run before the plugin transitions to the running state. \\(In our example, all trials complete before the running state begins.\\) According to our documentation, the trials should be in the running state, and nothing should happen in the ready state.", "markup": "markdown", "html": "<p>The trials in the perception task begin to run before the plugin transitions to the running state. (In our example, all trials complete before the running state begins.) According to our documentation, the trials should be in the running state, and nothing should happen in the ready state.</p>", "type": "rendered"}, "assignee": {"display_name": "Michael McCarrin", "uuid": "{3c3f500d-bbf6-472c-b8f7-627e5eabc226}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D"}, "html": {"href": "https://bitbucket.org/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a50abc93a3175f92c79e7521dfe089c0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "m1chaelm", "type": "user", "account_id": "5b2a9176467c9a09caa71ab1"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-06-30T22:44:51.713650+00:00", "milestone": {"name": "1.1", "links": {"self": {"href": "data/repositories/osrf/vrx/milestones/363172.json"}}}, "updated_on": "2019-07-01T17:51:36.126793+00:00", "type": "issue", "id": 126}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/127/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/127.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/127/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/127/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/127/perception-task-can-only-spawn-one-object"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/127/vote"}}, "reporter": {"display_name": "Michael McCarrin", "uuid": "{3c3f500d-bbf6-472c-b8f7-627e5eabc226}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D"}, "html": {"href": "https://bitbucket.org/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a50abc93a3175f92c79e7521dfe089c0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "m1chaelm", "type": "user", "account_id": "5b2a9176467c9a09caa71ab1"}, "title": "Perception Task can only spawn one object at a time", "component": {"name": "Plugin", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519936.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Our documentation for the perception task leaves open the possibility that multiple objects might be displayed at the same time. However, our implementation makes this impossible because:\r\n\r\n* objects are stored in a queue such that only one object is associated with each trial, and\r\n* changes in trials only occur when the current time becomes greater than or equal to the time associated with the first object in the queue.\r\n\r\nOptions:\r\n\r\n* We could leave as is and support only one object per trial.\r\n* We could add support for multiple objects per trial.\r\n\r\n    * If we do this, I think the best solution is to define a <trial> object that takes a set of objects all associated with a single <time> element, then remove the <time> element from the individual <object> elements.\r\n    * We will also need to implement some method for submitting a solution that identifies multiple objects.", "markup": "markdown", "html": "<p>Our documentation for the perception task leaves open the possibility that multiple objects might be displayed at the same time. However, our implementation makes this impossible because:</p>\n<ul>\n<li>objects are stored in a queue such that only one object is associated with each trial, and</li>\n<li>changes in trials only occur when the current time becomes greater than or equal to the time associated with the first object in the queue.</li>\n</ul>\n<p>Options:</p>\n<ul>\n<li>We could leave as is and support only one object per trial.</li>\n<li>\n<p>We could add support for multiple objects per trial.</p>\n<ul>\n<li>If we do this, I think the best solution is to define a &lt;trial&gt; object that takes a set of objects all associated with a single &lt;time&gt; element, then remove the &lt;time&gt; element from the individual &lt;object&gt; elements.</li>\n<li>We will also need to implement some method for submitting a solution that identifies multiple objects.</li>\n</ul>\n</li>\n</ul>", "type": "rendered"}, "assignee": {"display_name": "Marshall Rawson", "uuid": "{e6f8e5b5-5261-44d3-b2d4-092469c4157a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D"}, "html": {"href": "https://bitbucket.org/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bd54845fa0ad1be5a529eb87d738f221d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMR-4.png"}}, "nickname": "MarshallRawson", "type": "user", "account_id": "5ce2e28709c5fa0fd9fb0c6c"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-07-01T05:28:23.157709+00:00", "milestone": {"name": "1.2", "links": {"self": {"href": "data/repositories/osrf/vrx/milestones/370076.json"}}}, "updated_on": "2019-08-15T21:03:57.320120+00:00", "type": "issue", "id": 127}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/128/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/128.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/128/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/128/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/128/adding-wind-effect-to-other-objects"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/128/vote"}}, "reporter": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "title": "Adding wind effect to other objects", "component": null, "votes": 1, "watches": 4, "content": {"raw": "Currently the WAM-V is the only object affected by wind.  Other objects are affected in different ways:\r\n\r\n* For buoy makers and totems the wind induces translation \\(moving relative to the anchor\\) and attitude changes \\(oscillating pitch and roll\\).\r\n* For docks, the wind can cause translation and orientation \\(yaw\\) changes.\r\n\r\nAt this point, I recommend that this be considered for addition after the VRX competition, but would like it to be on the list.", "markup": "markdown", "html": "<p>Currently the WAM-V is the only object affected by wind.  Other objects are affected in different ways:</p>\n<ul>\n<li>For buoy makers and totems the wind induces translation (moving relative to the anchor) and attitude changes (oscillating pitch and roll).</li>\n<li>For docks, the wind can cause translation and orientation (yaw) changes.</li>\n</ul>\n<p>At this point, I recommend that this be considered for addition after the VRX competition, but would like it to be on the list.</p>", "type": "rendered"}, "assignee": {"display_name": "Marshall Rawson", "uuid": "{e6f8e5b5-5261-44d3-b2d4-092469c4157a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D"}, "html": {"href": "https://bitbucket.org/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bd54845fa0ad1be5a529eb87d738f221d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMR-4.png"}}, "nickname": "MarshallRawson", "type": "user", "account_id": "5ce2e28709c5fa0fd9fb0c6c"}, "state": "open", "version": null, "edited_on": null, "created_on": "2019-07-01T19:26:09.386751+00:00", "milestone": null, "updated_on": "2019-07-31T23:00:52.651580+00:00", "type": "issue", "id": 128}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/129/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/129.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/129/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/129/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/129/add-a-zed-camera-to-the-urdf"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/129/vote"}}, "reporter": null, "title": "Add a zed camera to the urdf", "component": {"name": "ROS", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519935.json"}}}, "votes": 0, "watches": null, "content": {"raw": "Hi,\r\n\r\nI would like to add a zed camera to the simulation. For that I tried to add the urdf of the zed camera in vrx_ws/src/vrx/wamv_gazebo/urdf/sensors and then I add this sensor to the wamv_gazebo.urf.xacro and generate the .urdf as shown in the tutorial for the stereo camera.\r\nBut unfortunately it doesn't work.\r\nI am a ROS beginer and I am not sure that it's the good way to do it, could you help me to solve this problem ?\r\n\r\nRegards,\r\nClement", "markup": "markdown", "html": "<p>Hi,</p>\n<p>I would like to add a zed camera to the simulation. For that I tried to add the urdf of the zed camera in vrx_ws/src/vrx/wamv_gazebo/urdf/sensors and then I add this sensor to the wamv_gazebo.urf.xacro and generate the .urdf as shown in the tutorial for the stereo camera.\nBut unfortunately it doesn't work.\nI am a ROS beginer and I am not sure that it's the good way to do it, could you help me to solve this problem ?</p>\n<p>Regards,\nClement</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-07-02T19:14:25.284515+00:00", "milestone": null, "updated_on": "2019-07-03T13:18:15.827875+00:00", "type": "issue", "id": 129}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/130/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/130.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/130/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/130/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/130/systemsetupinstall-failed-when-i-use"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/130/vote"}}, "reporter": {"display_name": "JayceHu", "uuid": "{a3f2772d-f403-4b4b-a889-222003f76d53}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Ba3f2772d-f403-4b4b-a889-222003f76d53%7D"}, "html": {"href": "https://bitbucket.org/%7Ba3f2772d-f403-4b4b-a889-222003f76d53%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/72fd564de6893fdc25b4e8940f3d6ca9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJ-0.png"}}, "nickname": "JayceHu", "type": "user", "account_id": "5d1e8ec291943f0d2ac55649"}, "title": "SystemSetupInstall failed When I use catkin_make", "component": null, "votes": 0, "watches": 1, "content": {"raw": "In the System Install tutorial for installing files to host, the catkin\\_make command fails with the message:\r\n\r\n-- Gazebo version: 9.9  \r\n-- Could NOT find geographic\\_msgs \\(missing: geographic\\_msgs\\_DIR\\)  \r\n-- Could not find the required component 'geographic\\_msgs'. The following CMake error indicates that you either need to install the package with the same name or change your environment so that it can be found.  \r\nCMake Error at /opt/ros/melodic/share/catkin/cmake/catkinConfig.cmake:83 \\(find\\_package\\):  \r\nCould not find a package configuration file provided by \"geographic\\_msgs\"  \r\nwith any of the following names:\r\n\r\n```\r\ngeographic_msgsConfig.cmake\r\ngeographic_msgs-config.cmake\r\n```\r\n\r\nAdd the installation prefix of \"geographic\\_msgs\" to CMAKE\\_PREFIX\\_PATH or  \r\nset \"geographic\\_msgs\\_DIR\" to a directory containing one of the above files.  \r\nIf \"geographic\\_msgs\" provides a separate development package or SDK, be  \r\nsure it has been installed.  \r\nCall Stack \\(most recent call first\\):  \r\nvrx/vrx\\_gazebo/CMakeLists.txt:18 \\(find\\_package\\)\r\n\r\n-- Configuring incomplete, errors occurred!", "markup": "markdown", "html": "<p>In the System Install tutorial for installing files to host, the catkin_make command fails with the message:</p>\n<p>-- Gazebo version: 9.9<br />\n-- Could NOT find geographic_msgs (missing: geographic_msgs_DIR)<br />\n-- Could not find the required component 'geographic_msgs'. The following CMake error indicates that you either need to install the package with the same name or change your environment so that it can be found.<br />\nCMake Error at /opt/ros/melodic/share/catkin/cmake/catkinConfig.cmake:83 (find_package):<br />\nCould not find a package configuration file provided by \"geographic_msgs\"<br />\nwith any of the following names:</p>\n<div class=\"codehilite\"><pre><span></span>geographic_msgsConfig.cmake\ngeographic_msgs-config.cmake\n</pre></div>\n\n\n<p>Add the installation prefix of \"geographic_msgs\" to CMAKE_PREFIX_PATH or<br />\nset \"geographic_msgs_DIR\" to a directory containing one of the above files.<br />\nIf \"geographic_msgs\" provides a separate development package or SDK, be<br />\nsure it has been installed.<br />\nCall Stack (most recent call first):<br />\nvrx/vrx_gazebo/CMakeLists.txt:18 (find_package)</p>\n<p>-- Configuring incomplete, errors occurred!</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-07-04T23:54:44.457499+00:00", "milestone": null, "updated_on": "2019-07-05T08:56:46.001776+00:00", "type": "issue", "id": 130}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/131/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/131.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/131/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/131/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/131/32-beam-lidar-issue"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/131/vote"}}, "reporter": {"display_name": "Marshall Rawson", "uuid": "{e6f8e5b5-5261-44d3-b2d4-092469c4157a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D"}, "html": {"href": "https://bitbucket.org/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bd54845fa0ad1be5a529eb87d738f221d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMR-4.png"}}, "nickname": "MarshallRawson", "type": "user", "account_id": "5ce2e28709c5fa0fd9fb0c6c"}, "title": "32 beam lidar issue", "component": {"name": "ROS", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519935.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "The 32 beam lidar has some artifacts \\(in pink\\) that I do not think are supposed to be present as well as the TF from lidar to base\\_link being possibly wrong as seen by the points which look like the gps unit but are not located near the gps unit. This is using the robot state publisher for the location of things in rviz \\( rosrun robot\\_state\\_publisher robot\\_state\\_publisher \\). \r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/2190002708-32_beam.png)", "markup": "markdown", "html": "<p>The 32 beam lidar has some artifacts (in pink) that I do not think are supposed to be present as well as the TF from lidar to base_link being possibly wrong as seen by the points which look like the gps unit but are not located near the gps unit. This is using the robot state publisher for the location of things in rviz ( rosrun robot_state_publisher robot_state_publisher ). </p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/2190002708-32_beam.png\" /></p>", "type": "rendered"}, "assignee": {"display_name": "Marshall Rawson", "uuid": "{e6f8e5b5-5261-44d3-b2d4-092469c4157a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D"}, "html": {"href": "https://bitbucket.org/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bd54845fa0ad1be5a529eb87d738f221d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMR-4.png"}}, "nickname": "MarshallRawson", "type": "user", "account_id": "5ce2e28709c5fa0fd9fb0c6c"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-07-08T17:33:07.825156+00:00", "milestone": null, "updated_on": "2019-07-09T18:01:51.331959+00:00", "type": "issue", "id": 131}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/132/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/132.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/132/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/132/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/132/add-coordinate-to-each-world-xacro-made-by"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/132/vote"}}, "reporter": {"display_name": "Marshall Rawson", "uuid": "{e6f8e5b5-5261-44d3-b2d4-092469c4157a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D"}, "html": {"href": "https://bitbucket.org/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bd54845fa0ad1be5a529eb87d738f221d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMR-4.png"}}, "nickname": "MarshallRawson", "type": "user", "account_id": "5ce2e28709c5fa0fd9fb0c6c"}, "title": "Add coordinate to each world xacro made by the world generator", "component": null, "votes": 0, "watches": 1, "content": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "assignee": {"display_name": "Marshall Rawson", "uuid": "{e6f8e5b5-5261-44d3-b2d4-092469c4157a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D"}, "html": {"href": "https://bitbucket.org/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bd54845fa0ad1be5a529eb87d738f221d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMR-4.png"}}, "nickname": "MarshallRawson", "type": "user", "account_id": "5ce2e28709c5fa0fd9fb0c6c"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-07-09T00:37:26.294873+00:00", "milestone": null, "updated_on": "2019-07-09T18:01:32.360415+00:00", "type": "issue", "id": 132}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/133/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/133.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/133/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/133/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/133/generate-worlds-launch-example-no-longer"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/133/vote"}}, "reporter": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "title": "Generate worlds launch example no longer working", "component": null, "votes": 0, "watches": 1, "content": {"raw": "**Descrption**\r\n\r\nI believe that there is an issue with `generate_worlds.launch`. The generated world files not longer work as expected \\(though I am certain they used to work\\).  This is likely because of how the buoyancy/wave plugins have changed. \r\n\r\nThis either requires a change in how `generate_worlds.launch` works, a change in the macros that it calls, or perhaps simply a change in the example yaml file, depending on the bug\u2019s source.\r\n\r\n**Instructions to recreate bug:**\r\n\r\n1. Follow generate worlds tutorial [#!/osrf/vrx/wiki/tutorials/Creating Many Test Worlds](#!/osrf/vrx/wiki/tutorials/Creating%20Many%20Test%20Worlds) to create 10 world files.\r\n2. Run `roslaunch vrx_gazebo sandisland.launch verbose:=true world:=/home/<username>/generated_worlds/worlds/world0.world`\r\n3. Read error:\r\n\r\n**Error Output**\r\n\r\n```\r\n[Msg] Buoyancy object\r\n\tlink: gate_end_green::link[28]\r\n\tpose: 0 0 -0.31 0 -0 0\r\n\tgeometry Sphere:0.23\r\n\tmass 25\r\n[Msg] usv_gazebo_dynamics_plugin: waveParams is null. Trying to get wave parameters from ocean model\r\n[Err] [WavefieldModelPlugin.cc:182] No Wavefield Model found with name 'ocean_waves'.\r\n[ERROR] [1562709964.805341, 0.001000]: Spawn service failed. Exiting.\r\nSegmentation fault (core dumped)\r\n[Err] [TransportIface.cc:396] Unable to connect to master.\r\n[Err] [GLWidget.cc:881] Unable to connect to a running Gazebo master.\r\n[gazebo-2] process has died [pid 7768, exit code 139, cmd /opt/ros/melodic/lib/gazebo_ros/gzserver --verbose -e ode /home/tylerlum/generated_worlds/worlds/world0.world __name:=gazebo __log:=/home/tylerlum/.ros/log/bca6b370-a295-11e9-9987-985fd3e41ed0/gazebo-2.log].\r\nlog file: /home/tylerlum/.ros/log/bca6b370-a295-11e9-9987-985fd3e41ed0/gazebo-2*.log\r\n[spawn_model-4] process has died [pid 7782, exit code 1, cmd /opt/ros/melodic/lib/gazebo_ros/spawn_model -x 158 -y 108 -z 0.1 -R 0 -P 0 -Y -2.76 -urdf -param robot_description -model wamv __name:=spawn_model __log:=/home/tylerlum/.ros/log/bca6b370-a295-11e9-9987-985fd3e41ed0/spawn_model-4.log].\r\nlog file: /home/tylerlum/.ros/log/bca6b370-a295-11e9-9987-985fd3e41ed0/spawn_model-4*.log\r\n```", "markup": "markdown", "html": "<p><strong>Descrption</strong></p>\n<p>I believe that there is an issue with <code>generate_worlds.launch</code>. The generated world files not longer work as expected (though I am certain they used to work).  This is likely because of how the buoyancy/wave plugins have changed. </p>\n<p>This either requires a change in how <code>generate_worlds.launch</code> works, a change in the macros that it calls, or perhaps simply a change in the example yaml file, depending on the bug\u2019s source.</p>\n<p><strong>Instructions to recreate bug:</strong></p>\n<ol>\n<li>Follow generate worlds tutorial <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/wiki/tutorials/Creating%20Many%20Test%20Worlds\" rel=\"nofollow\">#!/osrf/vrx/wiki/tutorials/Creating Many Test Worlds</a> to create 10 world files.</li>\n<li>Run <code>roslaunch vrx_gazebo sandisland.launch verbose:=true world:=/home/&lt;username&gt;/generated_worlds/worlds/world0.world</code></li>\n<li>Read error:</li>\n</ol>\n<p><strong>Error Output</strong></p>\n<div class=\"codehilite\"><pre><span></span>[Msg] Buoyancy object\n    link: gate_end_green::link[28]\n    pose: 0 0 -0.31 0 -0 0\n    geometry Sphere:0.23\n    mass 25\n[Msg] usv_gazebo_dynamics_plugin: waveParams is null. Trying to get wave parameters from ocean model\n[Err] [WavefieldModelPlugin.cc:182] No Wavefield Model found with name &#39;ocean_waves&#39;.\n[ERROR] [1562709964.805341, 0.001000]: Spawn service failed. Exiting.\nSegmentation fault (core dumped)\n[Err] [TransportIface.cc:396] Unable to connect to master.\n[Err] [GLWidget.cc:881] Unable to connect to a running Gazebo master.\n[gazebo-2] process has died [pid 7768, exit code 139, cmd /opt/ros/melodic/lib/gazebo_ros/gzserver --verbose -e ode /home/tylerlum/generated_worlds/worlds/world0.world __name:=gazebo __log:=/home/tylerlum/.ros/log/bca6b370-a295-11e9-9987-985fd3e41ed0/gazebo-2.log].\nlog file: /home/tylerlum/.ros/log/bca6b370-a295-11e9-9987-985fd3e41ed0/gazebo-2*.log\n[spawn_model-4] process has died [pid 7782, exit code 1, cmd /opt/ros/melodic/lib/gazebo_ros/spawn_model -x 158 -y 108 -z 0.1 -R 0 -P 0 -Y -2.76 -urdf -param robot_description -model wamv __name:=spawn_model __log:=/home/tylerlum/.ros/log/bca6b370-a295-11e9-9987-985fd3e41ed0/spawn_model-4.log].\nlog file: /home/tylerlum/.ros/log/bca6b370-a295-11e9-9987-985fd3e41ed0/spawn_model-4*.log\n</pre></div>", "type": "rendered"}, "assignee": {"display_name": "Marshall Rawson", "uuid": "{e6f8e5b5-5261-44d3-b2d4-092469c4157a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D"}, "html": {"href": "https://bitbucket.org/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bd54845fa0ad1be5a529eb87d738f221d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMR-4.png"}}, "nickname": "MarshallRawson", "type": "user", "account_id": "5ce2e28709c5fa0fd9fb0c6c"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-07-09T22:14:24.325739+00:00", "milestone": {"name": "1.2", "links": {"self": {"href": "data/repositories/osrf/vrx/milestones/370076.json"}}}, "updated_on": "2019-07-09T23:08:18.285912+00:00", "type": "issue", "id": 133}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/134/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/134.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/134/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/134/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/134/for-each-vrx-competition-task-write-an"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/134/vote"}}, "reporter": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "title": "For each VRX competition task, write an example yaml file for creating worlds", "component": null, "votes": 0, "watches": 1, "content": {"raw": "**Description**\r\n\r\nIn order to facilitate users testing their configurations for robustness, we should write write an example yaml file for world creation for each VRX competition task. Eg. `scan_and_dock.yaml`, `navigation_task.yaml`, `dock.yaml`, etc. It should make about 4-10 worlds each. Right now there is only one example, and it is not very easy for users to take that one example yaml and create their own yamls for each competition task.\r\n\r\nCurrent example at: [#!/osrf/vrx/wiki/tutorials/Creating Many Test Worlds](#!/osrf/vrx/wiki/tutorials/Creating%20Many%20Test%20Worlds)\r\n\r\n**Reason it\u2019s needed**\r\n\r\nOne of the main objectives of the VRX competition is to create a scoring system that \"encourage robust, repeatable performance rather than a single, maximum scoring run. This is done by scoring over multiple trials where the environmental conditions \\(e.g., sea state, wind magnitude and direction, lighting, etc.\\) are varied between trials.\" To help facilitate this testing, we have `generate_worlds.launch`, which takes a yaml file as input and creates multiple world files with different configurations of tasks, weather, lighting, etc. However, this yaml file is still quite complex and not easy to use for the average first time user. It would be much easier for them to do their own robustness testing with these worlds if they were given more examples to work with than just the one example we currently have.", "markup": "markdown", "html": "<p><strong>Description</strong></p>\n<p>In order to facilitate users testing their configurations for robustness, we should write write an example yaml file for world creation for each VRX competition task. Eg. <code>scan_and_dock.yaml</code>, <code>navigation_task.yaml</code>, <code>dock.yaml</code>, etc. It should make about 4-10 worlds each. Right now there is only one example, and it is not very easy for users to take that one example yaml and create their own yamls for each competition task.</p>\n<p>Current example at: <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/wiki/tutorials/Creating%20Many%20Test%20Worlds\" rel=\"nofollow\">#!/osrf/vrx/wiki/tutorials/Creating Many Test Worlds</a></p>\n<p><strong>Reason it\u2019s needed</strong></p>\n<p>One of the main objectives of the VRX competition is to create a scoring system that \"encourage robust, repeatable performance rather than a single, maximum scoring run. This is done by scoring over multiple trials where the environmental conditions (e.g., sea state, wind magnitude and direction, lighting, etc.) are varied between trials.\" To help facilitate this testing, we have <code>generate_worlds.launch</code>, which takes a yaml file as input and creates multiple world files with different configurations of tasks, weather, lighting, etc. However, this yaml file is still quite complex and not easy to use for the average first time user. It would be much easier for them to do their own robustness testing with these worlds if they were given more examples to work with than just the one example we currently have.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-07-09T22:38:09.447782+00:00", "milestone": {"name": "1.2", "links": {"self": {"href": "data/repositories/osrf/vrx/milestones/370076.json"}}}, "updated_on": "2019-07-31T21:15:00.134715+00:00", "type": "issue", "id": 134}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/135/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/135.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/135/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/135/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/135/return-laserscan-from-the-water-surface"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/135/vote"}}, "reporter": {"display_name": "Masaya Kataoka", "uuid": "{fd49a92b-7bd6-4ce7-b2c9-3c8d9f9a2835}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bfd49a92b-7bd6-4ce7-b2c9-3c8d9f9a2835%7D"}, "html": {"href": "https://bitbucket.org/%7Bfd49a92b-7bd6-4ce7-b2c9-3c8d9f9a2835%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:7faacef1-5834-4456-8b00-1aff6177afba/5297a07f-7bd3-45f2-8630-29f7bef23516/128"}}, "nickname": "hakuturu583", "type": "user", "account_id": "557058:7faacef1-5834-4456-8b00-1aff6177afba"}, "title": "return laserscan from the water surface", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The water surface in the real world does not returns laser scan, but VRX water surface returns the laser scam.\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/2184881560-Screenshot_from_2019-07-11_00-41-42.png)", "markup": "markdown", "html": "<p>The water surface in the real world does not returns laser scan, but VRX water surface returns the laser scam.</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/2184881560-Screenshot_from_2019-07-11_00-41-42.png\" /></p>", "type": "rendered"}, "assignee": {"display_name": "Marshall Rawson", "uuid": "{e6f8e5b5-5261-44d3-b2d4-092469c4157a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D"}, "html": {"href": "https://bitbucket.org/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bd54845fa0ad1be5a529eb87d738f221d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMR-4.png"}}, "nickname": "MarshallRawson", "type": "user", "account_id": "5ce2e28709c5fa0fd9fb0c6c"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-07-10T16:01:04.286668+00:00", "milestone": null, "updated_on": "2019-07-11T19:50:56.621977+00:00", "type": "issue", "id": 135}, {"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/136/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/136.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/136/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/136/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/136/testing-for-computational-issues"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/136/vote"}}, "reporter": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "title": "Testing for computational issues", "component": {"name": "Plugin", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519936.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "With 1.1 we are allowing teams a pretty hefty set of cameras and two lidars.  We also added some buoyancy elements that may soak up some more compute cycles.  We should generate some example configurations and worlds to serve as worst case examples to evaluate the ability for VRX to run in real-time on our stated systems specs: [#!/osrf/vrx/wiki/system\\_requirements](#!/osrf/vrx/wiki/system_requirements)", "markup": "markdown", "html": "<p>With 1.1 we are allowing teams a pretty hefty set of cameras and two lidars.  We also added some buoyancy elements that may soak up some more compute cycles.  We should generate some example configurations and worlds to serve as worst case examples to evaluate the ability for VRX to run in real-time on our stated systems specs: <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/wiki/system_requirements\" rel=\"nofollow\">#!/osrf/vrx/wiki/system_requirements</a></p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-07-10T23:26:15.429115+00:00", "milestone": {"name": "1.2", "links": {"self": {"href": "data/repositories/osrf/vrx/milestones/370076.json"}}}, "updated_on": "2019-07-10T23:26:15.429115+00:00", "type": "issue", "id": 136}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/137/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/137.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/137/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/137/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/137/consider-differences-in-heading-sensor"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/137/vote"}}, "reporter": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "title": "Consider differences in heading sensor plugin options: IMU and GPS-based", "component": {"name": "Plugin", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519936.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Background:\r\n\r\n* Forum discussion: [https://robonationforum.vbulletin.net/forum/robotx/virtual-robotx-aa/2021-questions-about-vrx-2019-rules/page2](https://robonationforum.vbulletin.net/forum/robotx/virtual-robotx-aa/2021-questions-about-vrx-2019-rules/page2)\r\n\r\nIssue:\r\n\r\nAt least one team is using a GPS-based heading reference:\r\n\r\n* [[https://www.garmin.co.jp/products/on...00/#featureTab](https://www.garmin.co.jp/products/on...00/#featureTab)](https://www.garmin.co.jp/products/onthewater/gps19x_nmea2000/#featureTab)\r\n* [https://www.furuno.com/files/Brochur...pload/sc30.pdf](https://www.furuno.com/files/Brochur...pload/sc30.pdf)\r\n\r\nThere is concern that there is significant differences between this GPS-based measurement and the IMU-based measurement simulated by the hector\\_gazebo\\_imu plugin currently used by VRX.\r\n\r\nProposed Action:\r\n\r\n* Understand the GPS-based heading measurement - how it estimates heading and the associated noise.\r\n\r\n    * Consider the sensor descriptions above.\r\n    * Consider the plugin developed by the OUXT team: [https://github.com/OUXT-Polaris/nmea\\_gps\\_plugin](https://github.com/OUXT-Polaris/nmea_gps_plugin)\r\n    \r\n* Describe the sensor model from the hector\\_gazebo\\_imu plugin and its use in VRX\r\n* Compare the two models \r\n* Consider the cost-benefit of a separate plugin to simulate the GPS-based heading measurement", "markup": "markdown", "html": "<p>Background:</p>\n<ul>\n<li>Forum discussion: <a data-is-external-link=\"true\" href=\"https://robonationforum.vbulletin.net/forum/robotx/virtual-robotx-aa/2021-questions-about-vrx-2019-rules/page2\" rel=\"nofollow\">https://robonationforum.vbulletin.net/forum/robotx/virtual-robotx-aa/2021-questions-about-vrx-2019-rules/page2</a></li>\n</ul>\n<p>Issue:</p>\n<p>At least one team is using a GPS-based heading reference:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"https://www.garmin.co.jp/products/onthewater/gps19x_nmea2000/#featureTab\" rel=\"nofollow\">[https://www.garmin.co.jp/products/on...00/#featureTab](https://www.garmin.co.jp/products/on...00/#featureTab)</a></li>\n<li><a data-is-external-link=\"true\" href=\"https://www.furuno.com/files/Brochur...pload/sc30.pdf\" rel=\"nofollow\">https://www.furuno.com/files/Brochur...pload/sc30.pdf</a></li>\n</ul>\n<p>There is concern that there is significant differences between this GPS-based measurement and the IMU-based measurement simulated by the hector_gazebo_imu plugin currently used by VRX.</p>\n<p>Proposed Action:</p>\n<ul>\n<li>\n<p>Understand the GPS-based heading measurement - how it estimates heading and the associated noise.</p>\n<ul>\n<li>Consider the sensor descriptions above.</li>\n<li>Consider the plugin developed by the OUXT team: <a data-is-external-link=\"true\" href=\"https://github.com/OUXT-Polaris/nmea_gps_plugin\" rel=\"nofollow\">https://github.com/OUXT-Polaris/nmea_gps_plugin</a></li>\n</ul>\n</li>\n<li>\n<p>Describe the sensor model from the hector_gazebo_imu plugin and its use in VRX</p>\n</li>\n<li>Compare the two models </li>\n<li>Consider the cost-benefit of a separate plugin to simulate the GPS-based heading measurement</li>\n</ul>", "type": "rendered"}, "assignee": {"display_name": "Marshall Rawson", "uuid": "{e6f8e5b5-5261-44d3-b2d4-092469c4157a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D"}, "html": {"href": "https://bitbucket.org/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bd54845fa0ad1be5a529eb87d738f221d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMR-4.png"}}, "nickname": "MarshallRawson", "type": "user", "account_id": "5ce2e28709c5fa0fd9fb0c6c"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-07-11T16:49:28.896371+00:00", "milestone": {"name": "1.2", "links": {"self": {"href": "data/repositories/osrf/vrx/milestones/370076.json"}}}, "updated_on": "2019-09-12T15:41:16.251446+00:00", "type": "issue", "id": 137}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/138/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/138.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/138/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/138/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/138/wave-parameters-at-runtime-via-xacro"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/138/vote"}}, "reporter": {"display_name": "Marshall Rawson", "uuid": "{e6f8e5b5-5261-44d3-b2d4-092469c4157a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D"}, "html": {"href": "https://bitbucket.org/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bd54845fa0ad1be5a529eb87d738f221d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMR-4.png"}}, "nickname": "MarshallRawson", "type": "user", "account_id": "5ce2e28709c5fa0fd9fb0c6c"}, "title": "Wave Parameters at Runtime Via Xacro", "component": {"name": "ROS", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519935.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Right now, the waves are completely generated by and erb script at compile time, we want some parameters to be determined at the load time of gazebo.", "markup": "markdown", "html": "<p>Right now, the waves are completely generated by and erb script at compile time, we want some parameters to be determined at the load time of gazebo.</p>", "type": "rendered"}, "assignee": {"display_name": "Marshall Rawson", "uuid": "{e6f8e5b5-5261-44d3-b2d4-092469c4157a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D"}, "html": {"href": "https://bitbucket.org/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bd54845fa0ad1be5a529eb87d738f221d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMR-4.png"}}, "nickname": "MarshallRawson", "type": "user", "account_id": "5ce2e28709c5fa0fd9fb0c6c"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-07-11T23:16:42.309098+00:00", "milestone": null, "updated_on": "2019-07-31T22:58:07.091914+00:00", "type": "issue", "id": 138}, {"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/139/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/139.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/139/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/139/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/139/set-environment-variable-or-parameter-to"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/139/vote"}}, "reporter": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "title": "Set environment variable or parameter to shutdown Gazebo/ROS on task completion", "component": null, "votes": 0, "watches": 1, "content": {"raw": "**Purpose**\r\n\r\nIn order for the competition to be run smoothly, we need an elegant way to shutdown Gazebo/ROS after a trial is completed such that we can record the results and then start the next task.\r\n\r\n**What is currently happening**\r\n\r\nCurrently, while running the competition, the `/vrx/task/info` topic is published, which shows the current status and score. An example is shown below.\r\n\r\n```\r\nname: &amp;#34;scan_dock&amp;#34;\r\nstate: &amp;#34;finished&amp;#34;\r\nready_time: \r\n  secs: 3\r\n  nsecs:         0\r\nrunning_time: \r\n  secs: 6\r\n  nsecs:         0\r\nelapsed_time: \r\n  secs: 10\r\n  nsecs:         0\r\nremaining_time: \r\n  secs: 0\r\n  nsecs:         0\r\ntimed_out: True\r\nscore: 0.0\r\n```\r\n\r\nAfter it is timed\\_out, the simulation continues to run as normal. This is desired behavior for testing, as we may want to still try things out after the competition is over. However, we need the option to end it.\r\n\r\n**Possible Solution**\r\n\r\nAfter looking into ARIAC\u2019s method of ending competition, what they did was:\r\n\r\n1. Set environment variable `ARIAC_EXIT_ON_COMPLETION=1`, then ran their system. This is shown here: [https://github.com/osrf/ariac-docker/blob/master/ariac-server/ariac-server/run\\_ariac\\_task.sh](https://github.com/osrf/ariac-docker/blob/master/ariac-server/ariac-server/run_ariac_task.sh) line 40\r\n2. In their ROS task manager plugin \\([https://bitbucket.org/osrf/ariac/src/master/osrf\\_gear/src/ROSAriacTaskManagerPlugin.cc](https://bitbucket.org/osrf/ariac/src/master/osrf_gear/src/ROSAriacTaskManagerPlugin.cc)\\), they have a Gazebo publisher that publishes to `/gazebo/server/control`, to end the simulation. This is a good reference for what we want.\r\n\r\n**Open Design Decisions**\r\n\r\n* Should this just kill Gazebo or kill all ROS nodes and ROS? ARIAC only kills Gazebo I believe, but I\u2019m not sure if there\u2019s any reason not to kill all.\r\n* Should we use an environment variable, ros parameter, roslaunch arguments? I feel ros parameter might be best because we wouldn\u2019t need to add arguments to all launch files\r\n* Should we implement this in the scoring plugin or somewhere else?\r\n* Should we also add some important competition end functionality in the same place?\r\n\r\n    * Eg. event-driven check for end condition \\(the current publish rate to `/vrx/task/info` is 1Hz, which may be too low to just subscribe to for scoring\\)\r\n    \r\n\r\n```\r\nrostopic hz  /vrx/task/info \r\nsubscribed to [/vrx/task/info]\r\nWARNING: may be using simulated time\r\naverage rate: 0.999\r\n    min: 1.001s max: 1.001s std dev: 0.00000s window: 2\r\naverage rate: 1.000\r\n    min: 0.999s max: 1.001s std dev: 0.00100s window: 3\r\n```\r\n\r\n* Should we output final score to the screen? Put it in the Gazebo or ROS log file \\(probably ROS\\)?", "markup": "markdown", "html": "<p><strong>Purpose</strong></p>\n<p>In order for the competition to be run smoothly, we need an elegant way to shutdown Gazebo/ROS after a trial is completed such that we can record the results and then start the next task.</p>\n<p><strong>What is currently happening</strong></p>\n<p>Currently, while running the competition, the <code>/vrx/task/info</code> topic is published, which shows the current status and score. An example is shown below.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">name</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"nt\">amp</span><span class=\"o\">;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span><span class=\"nt\">scan_dock</span><span class=\"o\">&amp;</span><span class=\"nt\">amp</span><span class=\"o\">;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span>\n<span class=\"nt\">state</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"nt\">amp</span><span class=\"o\">;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span><span class=\"nt\">finished</span><span class=\"o\">&amp;</span><span class=\"nt\">amp</span><span class=\"o\">;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span>\n<span class=\"nt\">ready_time</span><span class=\"o\">:</span> \n  <span class=\"nt\">secs</span><span class=\"o\">:</span> <span class=\"nt\">3</span>\n  <span class=\"nt\">nsecs</span><span class=\"o\">:</span>         <span class=\"nt\">0</span>\n<span class=\"nt\">running_time</span><span class=\"o\">:</span> \n  <span class=\"nt\">secs</span><span class=\"o\">:</span> <span class=\"nt\">6</span>\n  <span class=\"nt\">nsecs</span><span class=\"o\">:</span>         <span class=\"nt\">0</span>\n<span class=\"nt\">elapsed_time</span><span class=\"o\">:</span> \n  <span class=\"nt\">secs</span><span class=\"o\">:</span> <span class=\"nt\">10</span>\n  <span class=\"nt\">nsecs</span><span class=\"o\">:</span>         <span class=\"nt\">0</span>\n<span class=\"nt\">remaining_time</span><span class=\"o\">:</span> \n  <span class=\"nt\">secs</span><span class=\"o\">:</span> <span class=\"nt\">0</span>\n  <span class=\"nt\">nsecs</span><span class=\"o\">:</span>         <span class=\"nt\">0</span>\n<span class=\"nt\">timed_out</span><span class=\"o\">:</span> <span class=\"nt\">True</span>\n<span class=\"nt\">score</span><span class=\"o\">:</span> <span class=\"nt\">0</span><span class=\"p\">.</span><span class=\"nc\">0</span>\n</pre></div>\n\n\n<p>After it is timed_out, the simulation continues to run as normal. This is desired behavior for testing, as we may want to still try things out after the competition is over. However, we need the option to end it.</p>\n<p><strong>Possible Solution</strong></p>\n<p>After looking into ARIAC\u2019s method of ending competition, what they did was:</p>\n<ol>\n<li>Set environment variable <code>ARIAC_EXIT_ON_COMPLETION=1</code>, then ran their system. This is shown here: <a data-is-external-link=\"true\" href=\"https://github.com/osrf/ariac-docker/blob/master/ariac-server/ariac-server/run_ariac_task.sh\" rel=\"nofollow\">https://github.com/osrf/ariac-docker/blob/master/ariac-server/ariac-server/run_ariac_task.sh</a> line 40</li>\n<li>In their ROS task manager plugin (<a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/ariac/src/master/osrf_gear/src/ROSAriacTaskManagerPlugin.cc\" rel=\"nofollow\">https://bitbucket.org/osrf/ariac/src/master/osrf_gear/src/ROSAriacTaskManagerPlugin.cc</a>), they have a Gazebo publisher that publishes to <code>/gazebo/server/control</code>, to end the simulation. This is a good reference for what we want.</li>\n</ol>\n<p><strong>Open Design Decisions</strong></p>\n<ul>\n<li>Should this just kill Gazebo or kill all ROS nodes and ROS? ARIAC only kills Gazebo I believe, but I\u2019m not sure if there\u2019s any reason not to kill all.</li>\n<li>Should we use an environment variable, ros parameter, roslaunch arguments? I feel ros parameter might be best because we wouldn\u2019t need to add arguments to all launch files</li>\n<li>Should we implement this in the scoring plugin or somewhere else?</li>\n<li>\n<p>Should we also add some important competition end functionality in the same place?</p>\n<ul>\n<li>Eg. event-driven check for end condition (the current publish rate to <code>/vrx/task/info</code> is 1Hz, which may be too low to just subscribe to for scoring)</li>\n</ul>\n</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span>rostopic hz  /vrx/task/info \nsubscribed to [/vrx/task/info]\nWARNING: may be using simulated time\naverage rate: 0.999\n    min: 1.001s max: 1.001s std dev: 0.00000s window: 2\naverage rate: 1.000\n    min: 0.999s max: 1.001s std dev: 0.00100s window: 3\n</pre></div>\n\n\n<ul>\n<li>Should we output final score to the screen? Put it in the Gazebo or ROS log file (probably ROS)?</li>\n</ul>", "type": "rendered"}, "assignee": {"display_name": "Marshall Rawson", "uuid": "{e6f8e5b5-5261-44d3-b2d4-092469c4157a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D"}, "html": {"href": "https://bitbucket.org/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bd54845fa0ad1be5a529eb87d738f221d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMR-4.png"}}, "nickname": "MarshallRawson", "type": "user", "account_id": "5ce2e28709c5fa0fd9fb0c6c"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-07-12T20:56:59.042395+00:00", "milestone": {"name": "1.2", "links": {"self": {"href": "data/repositories/osrf/vrx/milestones/370076.json"}}}, "updated_on": "2019-07-31T22:55:02.851655+00:00", "type": "issue", "id": 139}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/140/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/140.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/140/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/140/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/140/there-is-no-camera-optical-link"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/140/vote"}}, "reporter": {"display_name": "Masaya Kataoka", "uuid": "{fd49a92b-7bd6-4ce7-b2c9-3c8d9f9a2835}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bfd49a92b-7bd6-4ce7-b2c9-3c8d9f9a2835%7D"}, "html": {"href": "https://bitbucket.org/%7Bfd49a92b-7bd6-4ce7-b2c9-3c8d9f9a2835%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:7faacef1-5834-4456-8b00-1aff6177afba/5297a07f-7bd3-45f2-8630-29f7bef23516/128"}}, "nickname": "hakuturu583", "type": "user", "account_id": "557058:7faacef1-5834-4456-8b00-1aff6177afba"}, "title": "There is no camera optical link", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I found that there is no camera optical link, and it violates rep 103.\\([https://www.ros.org/reps/rep-0103.html](https://www.ros.org/reps/rep-0103.html)\\)", "markup": "markdown", "html": "<p>I found that there is no camera optical link, and it violates rep 103.(<a data-is-external-link=\"true\" href=\"https://www.ros.org/reps/rep-0103.html\" rel=\"nofollow\">https://www.ros.org/reps/rep-0103.html</a>)</p>", "type": "rendered"}, "assignee": {"display_name": "Marshall Rawson", "uuid": "{e6f8e5b5-5261-44d3-b2d4-092469c4157a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D"}, "html": {"href": "https://bitbucket.org/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bd54845fa0ad1be5a529eb87d738f221d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMR-4.png"}}, "nickname": "MarshallRawson", "type": "user", "account_id": "5ce2e28709c5fa0fd9fb0c6c"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-07-13T08:56:01.038822+00:00", "milestone": {"name": "1.2", "links": {"self": {"href": "data/repositories/osrf/vrx/milestones/370076.json"}}}, "updated_on": "2020-02-25T00:05:52.532637+00:00", "type": "issue", "id": 140}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/141/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/141.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/141/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/141/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/141/event-driven-final-score-keeping-and"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/141/vote"}}, "reporter": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "title": "Event-Driven Final Score Keeping and Logging", "component": null, "votes": 0, "watches": 1, "content": {"raw": "**Overview**\r\n\r\nWe need a way to record the final score accurately and log the results. \r\n\r\n**Currently being done**\r\n\r\nCurrently, we simply publish to `/vrx/task/info` a message that includes the score at 1Hz.\r\n\r\n```\r\nname: &amp;#34;scan_dock&amp;#34;\r\nstate: &amp;#34;finished&amp;#34;\r\nready_time: \r\n  secs: 3\r\n  nsecs:         0\r\nrunning_time: \r\n  secs: 6\r\n  nsecs:         0\r\nelapsed_time: \r\n  secs: 10\r\n  nsecs:         0\r\nremaining_time: \r\n  secs: 0\r\n  nsecs:         0\r\ntimed_out: True\r\nscore: 0.0\r\n```\r\n\r\nHowever, we want to record some key times \\(eg. how long it took the WAM-V to perform a certain task\\) and use that time for more accurate scoring. 1Hz is not enough resolution. We likely need an event-driven check for end conditions \\(both success, failure and time-out\\)\r\n\r\n```\r\nrostopic hz  /vrx/task/info \r\nsubscribed to [/vrx/task/info]\r\nWARNING: may be using simulated time\r\naverage rate: 0.999\r\n    min: 1.001s max: 1.001s std dev: 0.00000s window: 2\r\naverage rate: 1.000\r\n    min: 0.999s max: 1.001s std dev: 0.00100s window: 3\r\n```\r\n\r\n* Should we output final score to the screen? Put it in the Gazebo or ROS log file \\(probably ROS\\)?\r\n\r\n    * Probably ROS log file\r\n    \r\n\r\n**How it was done in ARIAC:**\r\n\r\n```\r\n$ tail logs/example_team/sample/performance.log -n 25\r\n(1518553810 6169392) [Dbg] [ROSAriacTaskManagerPlugin.cc:492] Sim time: 22\r\n(1518553810 675725351) [Dbg] [ROSAriacTaskManagerPlugin.cc:717] Handle end service called\r\n(1518553810 676916277) [Dbg] [ROSAriacTaskManagerPlugin.cc:579] End of trial. Final score: 0\r\nScore breakdown:\r\n<game_score>\r\nTotal game score: [0]\r\nTotal process time: [10.433]\r\nProduct travel time: [0]\r\n<order_score order_0>\r\nTotal order score: [0]\r\nTime taken: [10.432]\r\nComplete: [false]\r\n<shipment_score order_0_shipment_0>\r\nCompletion score: [0]\r\nComplete: [false]\r\nSubmitted: [false]\r\nProduct presence score: [0]\r\nAll products bonus: [0]\r\nProduct pose score: [0]\r\n</shipment_score>\r\n\r\n</order_score>\r\n\r\n</game_score>\r\n```\r\n\r\nSource code: [https://bitbucket.org/osrf/ariac/src/master/osrf\\_gear/include/osrf\\_gear/ARIAC.hh](https://bitbucket.org/osrf/ariac/src/master/osrf_gear/include/osrf_gear/ARIAC.hh)", "markup": "markdown", "html": "<p><strong>Overview</strong></p>\n<p>We need a way to record the final score accurately and log the results. </p>\n<p><strong>Currently being done</strong></p>\n<p>Currently, we simply publish to <code>/vrx/task/info</code> a message that includes the score at 1Hz.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">name</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"nt\">amp</span><span class=\"o\">;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span><span class=\"nt\">scan_dock</span><span class=\"o\">&amp;</span><span class=\"nt\">amp</span><span class=\"o\">;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span>\n<span class=\"nt\">state</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"nt\">amp</span><span class=\"o\">;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span><span class=\"nt\">finished</span><span class=\"o\">&amp;</span><span class=\"nt\">amp</span><span class=\"o\">;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span>\n<span class=\"nt\">ready_time</span><span class=\"o\">:</span> \n  <span class=\"nt\">secs</span><span class=\"o\">:</span> <span class=\"nt\">3</span>\n  <span class=\"nt\">nsecs</span><span class=\"o\">:</span>         <span class=\"nt\">0</span>\n<span class=\"nt\">running_time</span><span class=\"o\">:</span> \n  <span class=\"nt\">secs</span><span class=\"o\">:</span> <span class=\"nt\">6</span>\n  <span class=\"nt\">nsecs</span><span class=\"o\">:</span>         <span class=\"nt\">0</span>\n<span class=\"nt\">elapsed_time</span><span class=\"o\">:</span> \n  <span class=\"nt\">secs</span><span class=\"o\">:</span> <span class=\"nt\">10</span>\n  <span class=\"nt\">nsecs</span><span class=\"o\">:</span>         <span class=\"nt\">0</span>\n<span class=\"nt\">remaining_time</span><span class=\"o\">:</span> \n  <span class=\"nt\">secs</span><span class=\"o\">:</span> <span class=\"nt\">0</span>\n  <span class=\"nt\">nsecs</span><span class=\"o\">:</span>         <span class=\"nt\">0</span>\n<span class=\"nt\">timed_out</span><span class=\"o\">:</span> <span class=\"nt\">True</span>\n<span class=\"nt\">score</span><span class=\"o\">:</span> <span class=\"nt\">0</span><span class=\"p\">.</span><span class=\"nc\">0</span>\n</pre></div>\n\n\n<p>However, we want to record some key times (eg. how long it took the WAM-V to perform a certain task) and use that time for more accurate scoring. 1Hz is not enough resolution. We likely need an event-driven check for end conditions (both success, failure and time-out)</p>\n<div class=\"codehilite\"><pre><span></span>rostopic hz  /vrx/task/info \nsubscribed to [/vrx/task/info]\nWARNING: may be using simulated time\naverage rate: 0.999\n    min: 1.001s max: 1.001s std dev: 0.00000s window: 2\naverage rate: 1.000\n    min: 0.999s max: 1.001s std dev: 0.00100s window: 3\n</pre></div>\n\n\n<ul>\n<li>\n<p>Should we output final score to the screen? Put it in the Gazebo or ROS log file (probably ROS)?</p>\n<ul>\n<li>Probably ROS log file</li>\n</ul>\n</li>\n</ul>\n<p><strong>How it was done in ARIAC:</strong></p>\n<div class=\"codehilite\"><pre><span></span>$ tail logs/example_team/sample/performance.log -n 25\n(1518553810 6169392) [Dbg] [ROSAriacTaskManagerPlugin.cc:492] Sim time: 22\n(1518553810 675725351) [Dbg] [ROSAriacTaskManagerPlugin.cc:717] Handle end service called\n(1518553810 676916277) [Dbg] [ROSAriacTaskManagerPlugin.cc:579] End of trial. Final score: 0\nScore breakdown:\n<span class=\"nt\">&lt;game_score&gt;</span>\nTotal game score: [0]\nTotal process time: [10.433]\nProduct travel time: [0]\n<span class=\"nt\">&lt;order_score</span> <span class=\"err\">order_0</span><span class=\"nt\">&gt;</span>\nTotal order score: [0]\nTime taken: [10.432]\nComplete: [false]\n<span class=\"nt\">&lt;shipment_score</span> <span class=\"err\">order_0_shipment_0</span><span class=\"nt\">&gt;</span>\nCompletion score: [0]\nComplete: [false]\nSubmitted: [false]\nProduct presence score: [0]\nAll products bonus: [0]\nProduct pose score: [0]\n<span class=\"nt\">&lt;/shipment_score&gt;</span>\n\n<span class=\"nt\">&lt;/order_score&gt;</span>\n\n<span class=\"nt\">&lt;/game_score&gt;</span>\n</pre></div>\n\n\n<p>Source code: <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/ariac/src/master/osrf_gear/include/osrf_gear/ARIAC.hh\" rel=\"nofollow\">https://bitbucket.org/osrf/ariac/src/master/osrf_gear/include/osrf_gear/ARIAC.hh</a></p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-07-17T22:53:53.131655+00:00", "milestone": null, "updated_on": "2019-07-31T21:13:44.684282+00:00", "type": "issue", "id": 141}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/142/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/142.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/142/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/142/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/142/perception-plugin-does-not-hold-the-wamv"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/142/vote"}}, "reporter": {"display_name": "Marshall Rawson", "uuid": "{e6f8e5b5-5261-44d3-b2d4-092469c4157a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D"}, "html": {"href": "https://bitbucket.org/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bd54845fa0ad1be5a529eb87d738f221d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMR-4.png"}}, "nickname": "MarshallRawson", "type": "user", "account_id": "5ce2e28709c5fa0fd9fb0c6c"}, "title": "Perception plugin does not hold the wamv still", "component": null, "votes": 0, "watches": 1, "content": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "assignee": {"display_name": "Marshall Rawson", "uuid": "{e6f8e5b5-5261-44d3-b2d4-092469c4157a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D"}, "html": {"href": "https://bitbucket.org/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bd54845fa0ad1be5a529eb87d738f221d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMR-4.png"}}, "nickname": "MarshallRawson", "type": "user", "account_id": "5ce2e28709c5fa0fd9fb0c6c"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-07-23T18:55:38.521917+00:00", "milestone": null, "updated_on": "2019-07-24T01:55:48.181605+00:00", "type": "issue", "id": 142}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/143/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/143.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/143/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/143/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/143/ocean-waves-does-not-change-when-fog"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/143/vote"}}, "reporter": {"display_name": "Marshall Rawson", "uuid": "{e6f8e5b5-5261-44d3-b2d4-092469c4157a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D"}, "html": {"href": "https://bitbucket.org/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bd54845fa0ad1be5a529eb87d738f221d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMR-4.png"}}, "nickname": "MarshallRawson", "type": "user", "account_id": "5ce2e28709c5fa0fd9fb0c6c"}, "title": "Ocean waves does not change when fog present", "component": null, "votes": 0, "watches": 1, "content": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-07-24T00:18:47.401135+00:00", "milestone": null, "updated_on": "2019-08-08T23:25:34.369410+00:00", "type": "issue", "id": 143}, {"priority": "major", "kind": "task", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/144/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/144.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/144/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/144/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/144/release-12-meta-issue"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/144/vote"}}, "reporter": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "title": "Release 1.2 meta issue", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Deadline: August 15.\r\n\r\nRequired:\r\n\r\n* Docker improvements:\r\n\r\n    \u2610 Configure automatic builds. Issue #69\r\n\r\n\r\n\r\n    \u2611 Non-Nvidia image seg faults on Nvidia system. Issue ~~#45~~\r\n\r\n\r\n* Issues:\r\n\r\n    \u2610 Waves not affected by fog. Issue #143\r\n\r\n\r\n\r\n    \u2611 VRX simulation is not deterministic. Issue ~~#92~~\r\n\r\n\r\n\r\n    \u2611 World generation missing some scoring plugins. Issue ~~#145~~, issue ~~#146~~\r\n\r\n\r\n\r\n    \u2610 Missing camera optical link. Issue #140\r\n\r\n\r\n\r\n    \u2611 Perception task can only spawn one object at a time. Issue ~~#127~~\r\n\r\n\r\n* Competition infrastructure:\r\n\r\n    \u2611 Automatic evaluation. Issue ~~#106~~\r\n\r\n\r\n\r\n    \u2611 Prevent unwanted ROS/Ignition topics during competition. Pull request #149.\r\n\r\n\r\n\r\n    \u2611 Release 1.2.X ROS packages\r\n\r\n\r\n\r\n    \u2611 Release 1.2.X Docker images\r\n\r\n\r\n* Refinements:\r\n\r\n    \u2611 Add floating docks. Issue ~~#115~~\r\n\r\n\r\n\r\n    \u2611 Re-organize topics. Issue ~~#107~~\r\n\r\n\r\n\r\n    \u2610 Spring cleaning\r\n\r\n\r\n\r\n    \u2611 Ocean reflections. Issue #122\r\n\r\n\r\n\r\n    \u2610 WAM-V force visualization. Issue #109\r\n\r\n\r\n\r\n    \u2610 rosbag \\+ Gazebo playback in sync.\r\n\r\n\r\n\r\n    Glory:\r\n\r\n\r\n\r\n    \u2611 1.2 video\r\n\r\n\r\n* Discussion:\r\n\r\n    \u2611 How do teams submit solutions \\(sensor config, propulsion config and Docker URI\\)\r\n\r\n\r\n* Documentation and tutorials:\r\n\r\n    \u2611 Review tutorials for 1.2.X release\r\n\r\n\r\n\r\n    \u2610 New tutorial describing how to run a competition locally\r\n\r\n\r\n* Competition Documents for Release to Teams - See shared google drive folder  \r\n  \u2611 Update competition and task descriptions\r\n\r\n    \u2611 Update technical guide", "markup": "markdown", "html": "<p>Deadline: August 15.</p>\n<p>Required:</p>\n<ul>\n<li>\n<p>Docker improvements:</p>\n<p>\u2610 Configure automatic builds. Issue <a href=\"#!/osrf/vrx/issues/69/configure-osrf-vrx-dockerhub-repository\" rel=\"nofollow\" title=\"Configure osrf/vrx Dockerhub repository\" class=\"ap-connect-link\">#69</a></p>\n<p>\u2611 Non-Nvidia image seg faults on Nvidia system. Issue <del><a href=\"#!/osrf/vrx/issues/45/docker-image-non-nvidia-image-seg-faults\" rel=\"nofollow\" title=\"Docker Image: Non-NVIDIA image seg faults on NVIDIA system\" class=\"ap-connect-link\"><s>#45</s></a></del></p>\n</li>\n<li>\n<p>Issues:</p>\n<p>\u2610 Waves not affected by fog. Issue <a href=\"#!/osrf/vrx/issues/143/ocean-waves-does-not-change-when-fog\" rel=\"nofollow\" title=\"Ocean waves does not change when fog present\" class=\"ap-connect-link\">#143</a></p>\n<p>\u2611 VRX simulation is not deterministic. Issue <del><a href=\"#!/osrf/vrx/issues/92/wind-plugin-random-seed-specification\" rel=\"nofollow\" title=\"Wind plugin random seed specification\" class=\"ap-connect-link\"><s>#92</s></a></del></p>\n<p>\u2611 World generation missing some scoring plugins. Issue <del><a href=\"#!/osrf/vrx/issues/145/bug-in-navigation-challenge-world\" rel=\"nofollow\" title=\"Bug in Navigation Challenge World Generation\" class=\"ap-connect-link\"><s>#145</s></a></del>, issue <del><a href=\"#!/osrf/vrx/issues/146/bug-in-dock-challenge-world-generation\" rel=\"nofollow\" title=\"Bug in Dock Challenge World Generation\" class=\"ap-connect-link\"><s>#146</s></a></del></p>\n<p>\u2610 Missing camera optical link. Issue <a href=\"#!/osrf/vrx/issues/140/there-is-no-camera-optical-link\" rel=\"nofollow\" title=\"There is no camera optical link\" class=\"ap-connect-link\"><s>#140</s></a></p>\n<p>\u2611 Perception task can only spawn one object at a time. Issue <del><a href=\"#!/osrf/vrx/issues/127/perception-task-can-only-spawn-one-object\" rel=\"nofollow\" title=\"Perception Task can only spawn one object at a time\" class=\"ap-connect-link\"><s>#127</s></a></del></p>\n</li>\n<li>\n<p>Competition infrastructure:</p>\n<p>\u2611 Automatic evaluation. Issue <del><a href=\"#!/osrf/vrx/issues/106/vrx-automated-evaluation\" rel=\"nofollow\" title=\"VRX automated evaluation\" class=\"ap-connect-link\"><s>#106</s></a></del></p>\n<p>\u2611 Prevent unwanted ROS/Ignition topics during competition. <a href=\"#!/osrf/vrx/pull-requests/149/add-enable_ros_network-argument\" rel=\"nofollow\" class=\"ap-connect-link\">Pull request #149</a>.</p>\n<p>\u2611 Release 1.2.X ROS packages</p>\n<p>\u2611 Release 1.2.X Docker images</p>\n</li>\n<li>\n<p>Refinements:</p>\n<p>\u2611 Add floating docks. Issue <del><a href=\"#!/osrf/vrx/issues/115/add-buoyancy-forces-to-dock-elements\" rel=\"nofollow\" title=\"Add buoyancy forces to dock elements\" class=\"ap-connect-link\"><s>#115</s></a></del></p>\n<p>\u2611 Re-organize topics. Issue <del><a href=\"#!/osrf/vrx/issues/107/use-namespaces-to-organise-topics\" rel=\"nofollow\" title=\"Use namespaces to organise topics\" class=\"ap-connect-link\"><s>#107</s></a></del></p>\n<p>\u2610 Spring cleaning</p>\n<p>\u2611 Ocean reflections. Issue <a href=\"#!/osrf/vrx/issues/122/ocean-reflections\" rel=\"nofollow\" title=\"Ocean reflections\" class=\"ap-connect-link\"><s>#122</s></a></p>\n<p>\u2610 WAM-V force visualization. Issue <a href=\"#!/osrf/vrx/issues/109/wamv-forces-visualization\" rel=\"nofollow\" title=\"WAMV Forces Visualization\" class=\"ap-connect-link\">#109</a></p>\n<p>\u2610 rosbag + Gazebo playback in sync.</p>\n<p>Glory:</p>\n<p>\u2611 1.2 video</p>\n</li>\n<li>\n<p>Discussion:</p>\n<p>\u2611 How do teams submit solutions (sensor config, propulsion config and Docker URI)</p>\n</li>\n<li>\n<p>Documentation and tutorials:</p>\n<p>\u2611 Review tutorials for 1.2.X release</p>\n<p>\u2610 New tutorial describing how to run a competition locally</p>\n</li>\n<li>\n<p>Competition Documents for Release to Teams - See shared google drive folder<br />\n  \u2611 Update competition and task descriptions</p>\n<p>\u2611 Update technical guide</p>\n</li>\n</ul>", "type": "rendered"}, "assignee": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-07-30T17:58:09.348298+00:00", "milestone": {"name": "1.2", "links": {"self": {"href": "data/repositories/osrf/vrx/milestones/370076.json"}}}, "updated_on": "2019-09-05T20:31:24.062554+00:00", "type": "issue", "id": 144}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/145/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/145.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/145/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/145/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/145/bug-in-navigation-challenge-world"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/145/vote"}}, "reporter": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "title": "Bug in Navigation Challenge World Generation", "component": null, "votes": 0, "watches": 1, "content": {"raw": "**Overview**\r\n\r\nWhen running the navigation challenge with a yaml-generated world file, it does not have `/vrx/task/info` topic published. I also do not think that there is a scoring plugin in the generated world.\r\n\r\n**Steps to recreate**\r\n\r\n1. Source vrx-ws and move to vrx\\_gazebo `roscd vrx_gazebo`\r\n2. Run `mkdir -p ~/worlds ~/world_xacros`\r\n3. Run ``roslaunch vrx_gazebo generate_worlds.launch requested:=`pwd`/worlds/yamls/nav_challenge_shallow.yaml world_xacro_target:=&#34;$HOME/world_xacros/&#34; world_target:=&#34;$HOME/worlds/&#34;``\r\n4. Run `roslaunch vrx_gazebo sandisland.launch world:=&#34;$HOME/worlds/nav_challenge_shallow0.world&#34;`\r\n5. In another terminal run `rostopic list` `/vrx/task/info` will not be there\r\n6. Investigate in the yaml and generated world\r\n\r\nFix files nav\\_challenge\\_shallow.yaml and nav\\_challenge\\_deep.yaml", "markup": "markdown", "html": "<p><strong>Overview</strong></p>\n<p>When running the navigation challenge with a yaml-generated world file, it does not have <code>/vrx/task/info</code> topic published. I also do not think that there is a scoring plugin in the generated world.</p>\n<p><strong>Steps to recreate</strong></p>\n<ol>\n<li>Source vrx-ws and move to vrx_gazebo <code>roscd vrx_gazebo</code></li>\n<li>Run <code>mkdir -p ~/worlds ~/world_xacros</code></li>\n<li>Run <code>roslaunch vrx_gazebo generate_worlds.launch requested:=`pwd`/worlds/yamls/nav_challenge_shallow.yaml world_xacro_target:=&amp;#34;$HOME/world_xacros/&amp;#34; world_target:=&amp;#34;$HOME/worlds/&amp;#34;</code></li>\n<li>Run <code>roslaunch vrx_gazebo sandisland.launch world:=&amp;#34;$HOME/worlds/nav_challenge_shallow0.world&amp;#34;</code></li>\n<li>In another terminal run <code>rostopic list</code> <code>/vrx/task/info</code> will not be there</li>\n<li>Investigate in the yaml and generated world</li>\n</ol>\n<p>Fix files nav_challenge_shallow.yaml and nav_challenge_deep.yaml</p>", "type": "rendered"}, "assignee": {"display_name": "Marshall Rawson", "uuid": "{e6f8e5b5-5261-44d3-b2d4-092469c4157a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D"}, "html": {"href": "https://bitbucket.org/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bd54845fa0ad1be5a529eb87d738f221d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMR-4.png"}}, "nickname": "MarshallRawson", "type": "user", "account_id": "5ce2e28709c5fa0fd9fb0c6c"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-07-30T19:36:46.705191+00:00", "milestone": {"name": "1.2", "links": {"self": {"href": "data/repositories/osrf/vrx/milestones/370076.json"}}}, "updated_on": "2019-08-06T22:43:08.914881+00:00", "type": "issue", "id": 145}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/146/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/146.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/146/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/146/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/146/bug-in-dock-challenge-world-generation"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/146/vote"}}, "reporter": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "title": "Bug in Dock Challenge World Generation", "component": null, "votes": 0, "watches": 1, "content": {"raw": "**Overview**\r\n\r\nWhen running the dock challenge with a yaml-generated world file, it does not have `/vrx/task/info` topic published. I also do not think that there is a scoring plugin in the generated world.\r\n\r\n**Steps to recreate**\r\n\r\n1. Source vrx-ws and move to vrx\\_gazebo `roscd vrx_gazebo`\r\n2. Run `mkdir -p ~/worlds ~/world_xacros`\r\n3. Run ``roslaunch vrx_gazebo generate_worlds.launch requested:=`pwd`/worlds/yamls/dock_shallow.yaml world_xacro_target:=\"$HOME/world_xacros/\" world_target:=\"$HOME/worlds/\"``\r\n4. Run `roslaunch vrx_gazebo sandisland.launch world:=\"$HOME/worlds/dock_shallow0.world\"`\r\n5. Read the error message\r\n6. Investigate in the yaml and generated world\r\n\r\nFix the issue in dock\\_shallow.yaml and dock\\_deep.yaml\r\n\r\n```\r\n[ INFO] [1564515562.748912400]: Finished loading Gazebo ROS API Plugin.\r\n[ INFO] [1564515562.750461226]: waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...\r\n[ INFO] [1564515562.826416911]: Finished loading Gazebo ROS API Plugin.\r\n[ INFO] [1564515562.831601765]: waitForService: Service [/gazebo_gui/set_physics_properties] has not been advertised, waiting...\r\nWarning [parser.cc:759] XML Attribute[xmlns:xacro] in element[sdf] not defined in SDF, ignoring.\r\nWarning [parser.cc:759] XML Attribute[xmlns:xacro] in element[world] not defined in SDF, ignoring.\r\nthe rosdep view is empty: call 'sudo rosdep init' and 'rosdep update'\r\nError [Element.cc:702] Missing element description for [symbol_topic]\r\n[ERROR] [1564515565.196772065]: <gates::gate::symbol_topic> missing\r\n[ INFO] [1564515565.419532714, 0.021000000]: waitForService: Service [/gazebo/set_physics_properties] is now available.\r\n[ INFO] [1564515565.467753301, 0.063000000]: Physics dynamic reconfigure ready.\r\n[spawn_model-3] process has finished cleanly\r\nlog file: /home/tylerlum/.ros/log/3b256edc-b2fc-11e9-b196-985fd3e41ed0/spawn_model-3*.log\r\n[ INFO] [1564515567.941737057, 2.453000000]: New symbol is blue circle\r\n[ INFO] [1564515567.949750383, 2.461000000]: New symbol is blue circle\r\n```\r\n\r\nLikely issue: `[ERROR] [1564515565.196772065]: <gates::gate::symbol_topic> missing`", "markup": "markdown", "html": "<p><strong>Overview</strong></p>\n<p>When running the dock challenge with a yaml-generated world file, it does not have <code>/vrx/task/info</code> topic published. I also do not think that there is a scoring plugin in the generated world.</p>\n<p><strong>Steps to recreate</strong></p>\n<ol>\n<li>Source vrx-ws and move to vrx_gazebo <code>roscd vrx_gazebo</code></li>\n<li>Run <code>mkdir -p ~/worlds ~/world_xacros</code></li>\n<li>Run <code>roslaunch vrx_gazebo generate_worlds.launch requested:=`pwd`/worlds/yamls/dock_shallow.yaml world_xacro_target:=\"$HOME/world_xacros/\" world_target:=\"$HOME/worlds/\"</code></li>\n<li>Run <code>roslaunch vrx_gazebo sandisland.launch world:=\"$HOME/worlds/dock_shallow0.world\"</code></li>\n<li>Read the error message</li>\n<li>Investigate in the yaml and generated world</li>\n</ol>\n<p>Fix the issue in dock_shallow.yaml and dock_deep.yaml</p>\n<div class=\"codehilite\"><pre><span></span>[ INFO] [1564515562.748912400]: Finished loading Gazebo ROS API Plugin.\n[ INFO] [1564515562.750461226]: waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...\n[ INFO] [1564515562.826416911]: Finished loading Gazebo ROS API Plugin.\n[ INFO] [1564515562.831601765]: waitForService: Service [/gazebo_gui/set_physics_properties] has not been advertised, waiting...\nWarning [parser.cc:759] XML Attribute[xmlns:xacro] in element[sdf] not defined in SDF, ignoring.\nWarning [parser.cc:759] XML Attribute[xmlns:xacro] in element[world] not defined in SDF, ignoring.\nthe rosdep view is empty: call &#39;sudo rosdep init&#39; and &#39;rosdep update&#39;\nError [Element.cc:702] Missing element description for [symbol_topic]\n[ERROR] [1564515565.196772065]: &lt;gates::gate::symbol_topic&gt; missing\n[ INFO] [1564515565.419532714, 0.021000000]: waitForService: Service [/gazebo/set_physics_properties] is now available.\n[ INFO] [1564515565.467753301, 0.063000000]: Physics dynamic reconfigure ready.\n[spawn_model-3] process has finished cleanly\nlog file: /home/tylerlum/.ros/log/3b256edc-b2fc-11e9-b196-985fd3e41ed0/spawn_model-3*.log\n[ INFO] [1564515567.941737057, 2.453000000]: New symbol is blue circle\n[ INFO] [1564515567.949750383, 2.461000000]: New symbol is blue circle\n</pre></div>\n\n\n<p>Likely issue: <code>[ERROR] [1564515565.196772065]: &lt;gates::gate::symbol_topic&gt; missing</code></p>", "type": "rendered"}, "assignee": {"display_name": "Marshall Rawson", "uuid": "{e6f8e5b5-5261-44d3-b2d4-092469c4157a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D"}, "html": {"href": "https://bitbucket.org/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bd54845fa0ad1be5a529eb87d738f221d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMR-4.png"}}, "nickname": "MarshallRawson", "type": "user", "account_id": "5ce2e28709c5fa0fd9fb0c6c"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-07-30T19:40:02.911151+00:00", "milestone": {"name": "1.2", "links": {"self": {"href": "data/repositories/osrf/vrx/milestones/370076.json"}}}, "updated_on": "2019-08-07T20:42:23.455971+00:00", "type": "issue", "id": 146}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/147/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/147.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/147/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/147/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/147/floating-docks-floats-above-the-water"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/147/vote"}}, "reporter": {"display_name": "Marshall Rawson", "uuid": "{e6f8e5b5-5261-44d3-b2d4-092469c4157a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D"}, "html": {"href": "https://bitbucket.org/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bd54845fa0ad1be5a529eb87d738f221d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMR-4.png"}}, "nickname": "MarshallRawson", "type": "user", "account_id": "5ce2e28709c5fa0fd9fb0c6c"}, "title": "floating docks floats above the water", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Demo:\r\n\r\nhg pull\r\n\r\nhg co floating\\_docks\r\n\r\ncatkin\\_make\r\n\r\nroslaunch vrx\\_gazebo scan\\_and\\_dock.launch\r\n\r\nobserve the dock\u2019s strange behavior", "markup": "markdown", "html": "<p>Demo:</p>\n<p>hg pull</p>\n<p>hg co floating_docks</p>\n<p>catkin_make</p>\n<p>roslaunch vrx_gazebo scan_and_dock.launch</p>\n<p>observe the dock\u2019s strange behavior</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-08-12T22:24:14.818567+00:00", "milestone": null, "updated_on": "2019-09-05T20:32:55.697353+00:00", "type": "issue", "id": 147}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/148/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/148.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/148/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/148/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/148/add-a-vehicle-based-wind-sensor"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/148/vote"}}, "reporter": {"display_name": "Jonathan Wheare", "uuid": "{65043b9b-c505-4efe-852a-3d2393a0ee80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B65043b9b-c505-4efe-852a-3d2393a0ee80%7D"}, "html": {"href": "https://bitbucket.org/%7B65043b9b-c505-4efe-852a-3d2393a0ee80%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/JW-2.png"}}, "nickname": "Jonathan Wheare", "type": "user", "account_id": "5b9791e8a9fd6d2c834b5864"}, "title": "Add a vehicle based wind sensor", "component": {"name": "Plugin", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519936.json"}}}, "votes": 1, "watches": 2, "content": {"raw": "During the 2016 RobotX compettiion, Flinders and Embrey Riddle used on-board wind sensing devices.  Such a device can be used to inform the control of a maritime vehicle.  The usv\\_gazebo\\_wind\\_plugin currently publishes a global wind estimate for debugging purposes, but a body frame estimate that emulates such a sensor is currently not available.  \r\n\r\nUse of such a sensor may be outside the scope of the competition, but it\u2019s addition could be useful for research into maritime control systems.\r\n\r\nRegards,\r\n\r\nJonathan Wheare.", "markup": "markdown", "html": "<p>During the 2016 RobotX compettiion, Flinders and Embrey Riddle used on-board wind sensing devices.  Such a device can be used to inform the control of a maritime vehicle.  The usv_gazebo_wind_plugin currently publishes a global wind estimate for debugging purposes, but a body frame estimate that emulates such a sensor is currently not available.  </p>\n<p>Use of such a sensor may be outside the scope of the competition, but it\u2019s addition could be useful for research into maritime control systems.</p>\n<p>Regards,</p>\n<p>Jonathan Wheare.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-08-13T12:12:27.582717+00:00", "milestone": null, "updated_on": "2019-08-13T12:12:27.582717+00:00", "type": "issue", "id": 148}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/149/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/149.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/149/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/149/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/149/robot-localization-example-broken"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/149/vote"}}, "reporter": {"display_name": "Rumman Waqar", "uuid": "{375366ee-150c-4843-9449-cbec61c538ca}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B375366ee-150c-4843-9449-cbec61c538ca%7D"}, "html": {"href": "https://bitbucket.org/%7B375366ee-150c-4843-9449-cbec61c538ca%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5a8b94bb21870439aa9167ef/026c5cb4-b99d-4aad-90d7-62d45fe41395/128"}}, "nickname": "rumman05", "type": "user", "account_id": "5a8b94bb21870439aa9167ef"}, "title": "Robot localization example broken", "component": {"name": "Model", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519934.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "After PR #[143](#!/osrf/vrx/pull-requests/143) topic namespace generation, robot\\_localization example is not working for me. \r\n\r\nThe sensors in my workspace are under `/sensors/...` namespace for the default vehicle whereas the localization\\_example expects them to be under `/wamv/sensor/...`", "markup": "markdown", "html": "<p>After PR #<a data-is-external-link=\"true\" href=\"#!/osrf/vrx/pull-requests/143\" rel=\"nofollow\">143</a> topic namespace generation, robot_localization example is not working for me. </p>\n<p>The sensors in my workspace are under <code>/sensors/...</code> namespace for the default vehicle whereas the localization_example expects them to be under <code>/wamv/sensor/...</code></p>", "type": "rendered"}, "assignee": {"display_name": "Rumman Waqar", "uuid": "{375366ee-150c-4843-9449-cbec61c538ca}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B375366ee-150c-4843-9449-cbec61c538ca%7D"}, "html": {"href": "https://bitbucket.org/%7B375366ee-150c-4843-9449-cbec61c538ca%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5a8b94bb21870439aa9167ef/026c5cb4-b99d-4aad-90d7-62d45fe41395/128"}}, "nickname": "rumman05", "type": "user", "account_id": "5a8b94bb21870439aa9167ef"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-08-20T17:44:40.037820+00:00", "milestone": null, "updated_on": "2020-04-10T04:07:19.990960+00:00", "type": "issue", "id": 149}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/150/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/150.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/150/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/150/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/150/vrx-events-repo-structure"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/150/vote"}}, "reporter": {"display_name": "Michael McCarrin", "uuid": "{3c3f500d-bbf6-472c-b8f7-627e5eabc226}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D"}, "html": {"href": "https://bitbucket.org/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a50abc93a3175f92c79e7521dfe089c0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "m1chaelm", "type": "user", "account_id": "5b2a9176467c9a09caa71ab1"}, "title": "vrx-events repo structure", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Now that we are planning to use this repository for all submissions, including the hello world, it would be nice to update the tutorial to focus on the first phase as an example \\(currently it uses phase 2\\). At the same time, we should add a directory for each of the three phases in the vrx-events repo. I suggest naming them:\r\n\r\n* phase1\\_hello\\_world\r\n* phase2\\_dress\\_rehearsal \\(currently this is \u201crehearsal\u201d and it\u2019s the only directory\\)\r\n* phase3\\_vrx\\_challenge\r\n\r\nSince I don\u2019t have write access to vrx-repo and need to test the submission process anyway, I\u2019m submitting the above suggestion as a pull request from my private fork.\r\n\r\nAlso, I put the issue here so as not to fragment our issue tracking \\(not sure who is watching the issues on vrx-events\\) but I\u2019m not sure how we\u2019re planning to handle this.", "markup": "markdown", "html": "<p>Now that we are planning to use this repository for all submissions, including the hello world, it would be nice to update the tutorial to focus on the first phase as an example (currently it uses phase 2). At the same time, we should add a directory for each of the three phases in the vrx-events repo. I suggest naming them:</p>\n<ul>\n<li>phase1_hello_world</li>\n<li>phase2_dress_rehearsal (currently this is \u201crehearsal\u201d and it\u2019s the only directory)</li>\n<li>phase3_vrx_challenge</li>\n</ul>\n<p>Since I don\u2019t have write access to vrx-repo and need to test the submission process anyway, I\u2019m submitting the above suggestion as a pull request from my private fork.</p>\n<p>Also, I put the issue here so as not to fragment our issue tracking (not sure who is watching the issues on vrx-events) but I\u2019m not sure how we\u2019re planning to handle this.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-08-22T19:26:52.288698+00:00", "milestone": null, "updated_on": "2019-11-05T18:10:32.115338+00:00", "type": "issue", "id": 150}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/151/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/151.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/151/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/151/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/151/investigate-oyaml-dependency"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/151/vote"}}, "reporter": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "title": "Investigate oyaml dependency", "component": null, "votes": 0, "watches": 1, "content": {"raw": "**Description**\r\n\r\nCurrently, we are using oyaml for generating custom worlds and wamvs \\(generate\\_wamv.launch and generate\\_worlds.launch\\). This requires users to run `pip install oyaml` as per [https://pypi.org/project/oyaml/](https://pypi.org/project/oyaml). However, `pip` can lead to headaches. We should investigate if this is needed or not, and perhaps just use pyyaml.\r\n\r\n**Where this is used**\r\n\r\n```\r\n\u279c  vrx_gazebo grep -r \"yaml\" | grep import\r\nsrc/vrx_gazebo_python/generator_scripts/utils.py:import yaml\r\nsrc/vrx_gazebo_python/generator_scripts/world_generator/generate_worlds.py:import oyaml as yaml\r\nsrc/vrx_gazebo_python/generator_scripts/wamv_config/compliance.py:import yaml\r\n```", "markup": "markdown", "html": "<p><strong>Description</strong></p>\n<p>Currently, we are using oyaml for generating custom worlds and wamvs (generate_wamv.launch and generate_worlds.launch). This requires users to run <code>pip install oyaml</code> as per <a data-is-external-link=\"true\" href=\"https://pypi.org/project/oyaml\" rel=\"nofollow\">https://pypi.org/project/oyaml/</a>. However, <code>pip</code> can lead to headaches. We should investigate if this is needed or not, and perhaps just use pyyaml.</p>\n<p><strong>Where this is used</strong></p>\n<div class=\"codehilite\"><pre><span></span><span class=\"err\">\u279c</span>  <span class=\"n\">vrx_gazebo</span> <span class=\"n\">grep</span> <span class=\"o\">-</span><span class=\"n\">r</span> <span class=\"s2\">&quot;yaml&quot;</span> <span class=\"o\">|</span> <span class=\"n\">grep</span> <span class=\"kn\">import</span>\n<span class=\"nn\">src</span><span class=\"o\">/</span><span class=\"n\">vrx_gazebo_python</span><span class=\"o\">/</span><span class=\"n\">generator_scripts</span><span class=\"o\">/</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">py</span><span class=\"p\">:</span><span class=\"kn\">import</span> <span class=\"nn\">yaml</span>\n<span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">vrx_gazebo_python</span><span class=\"o\">/</span><span class=\"n\">generator_scripts</span><span class=\"o\">/</span><span class=\"n\">world_generator</span><span class=\"o\">/</span><span class=\"n\">generate_worlds</span><span class=\"o\">.</span><span class=\"n\">py</span><span class=\"p\">:</span><span class=\"kn\">import</span> <span class=\"nn\">oyaml</span> <span class=\"kn\">as</span> <span class=\"nn\">yaml</span>\n<span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">vrx_gazebo_python</span><span class=\"o\">/</span><span class=\"n\">generator_scripts</span><span class=\"o\">/</span><span class=\"n\">wamv_config</span><span class=\"o\">/</span><span class=\"n\">compliance</span><span class=\"o\">.</span><span class=\"n\">py</span><span class=\"p\">:</span><span class=\"kn\">import</span> <span class=\"nn\">yaml</span>\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-08-22T21:34:01.719526+00:00", "milestone": null, "updated_on": "2019-08-22T21:36:46.120470+00:00", "type": "issue", "id": 151}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/152/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/152.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/152/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/152/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/152/runtime-error-during-world-generation"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/152/vote"}}, "reporter": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "title": "Runtime Error During World Generation", "component": null, "votes": 0, "watches": 1, "content": {"raw": "**Description**\r\n\r\nCurrently, running the world generation script leads to errors that prevent it from running. This relates to not being able to find files.\r\n\r\n**Reproduce**\r\n\r\n1. `mkdir -p ~/my_worlds/world_xacros` `mkdir -p ~/my_worlds/worlds`\r\n2. `roslaunch vrx_gazebo generate_worlds.launch requested:=$HOME/vrx_ws/src/vrx/vrx_gazebo/worlds/yamls/dock_shallow.yaml world_xacro_target:=$HOME/my_worlds/world_xacros/ world_target:=$HOME/my_worlds/worlds/`\r\n\r\n**Error**\r\n\r\n```\r\nxacro: in-order processing became default in ROS Melodic. You can drop the option.\r\nNo such file or directory: /home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/worlds/xacros/light_buoy.xacro\r\nwhen instantiating macro: include_all_xacros (/home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/worlds/xacros/include_all_xacros.xacro)\r\nin file: /home/tylerlum/my_worlds/world_xacros/worlds0.world.xacro\r\nxacro: in-order processing became default in ROS Melodic. You can drop the option.\r\nNo such file or directory: /home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/worlds/xacros/light_buoy.xacro\r\nwhen instantiating macro: include_all_xacros (/home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/worlds/xacros/include_all_xacros.xacro)\r\nin file: /home/tylerlum/my_worlds/world_xacros/worlds1.world.xacro\r\n```\r\n\r\n```\r\n\u279c  vrx_gazebo ls worlds/xacros \r\ndock.xacro                nav_challenge.xacro  sandisland_minus_scene.xacro  scene.xacro           usv_wind_plugin.xacro\r\ninclude_all_xacros.xacro  perception.xacro     scan_and_dock.xacro           stationkeeping.xacro  wayfinding.xacro\r\n```\r\n\r\nExpected files\r\n\r\n```\r\n&lt;?xml version=&#34;1.0&#34;?&gt;\r\n&lt;world xmlns:xacro=&#34;http://ros.org/wiki/xacro&#34;&gt;\r\n  &lt;xacro:macro name=&#34;include_all_xacros&#34;&gt;\r\n    &lt;xacro:include filename=&#34;$(find vrx_gazebo)/worlds/sandisland.xacro&#34; /&gt;\r\n    &lt;xacro:include filename=&#34;$(find vrx_gazebo)/worlds/xacros/sandisland_minus_scene.xacro&#34; /&gt;\r\n    &lt;xacro:include filename=&#34;$(find vrx_gazebo)/worlds/xacros/scene.xacro&#34; /&gt;\r\n    &lt;xacro:include filename=&#34;$(find vrx_gazebo)/worlds/xacros/nav_challenge.xacro&#34; /&gt;\r\n    &lt;xacro:include filename=&#34;$(find vrx_gazebo)/worlds/xacros/light_buoy.xacro&#34; /&gt;\r\n    &lt;xacro:include filename=&#34;$(find vrx_gazebo)/worlds/xacros/qualifying_pinger_transit_2016.xacro&#34; /&gt;\r\n    &lt;xacro:include filename=&#34;$(find vrx_gazebo)/worlds/xacros/dock_2016.xacro&#34; /&gt;\r\n    &lt;xacro:include filename=&#34;$(find vrx_gazebo)/worlds/xacros/dock_2018.xacro&#34; /&gt;\r\n    &lt;xacro:include filename=&#34;$(find vrx_gazebo)/worlds/xacros/scene_macro.xacro&#34; /&gt;\r\n    &lt;xacro:include filename=&#34;$(find vrx_gazebo)/worlds/xacros/usv_wind_plugin.xacro&#34; /&gt;\r\n    &lt;xacro:include filename=&#34;$(find wave_gazebo)/world_models/ocean_waves/model.xacro&#34;/&gt;\r\n    &lt;xacro:include filename=&#34;$(find vrx_gazebo)/worlds/xacros/perception.xacro&#34; /&gt;\r\n    &lt;xacro:include filename=&#34;$(find vrx_gazebo)/worlds/xacros/stationkeeping.xacro&#34; /&gt;\r\n    &lt;xacro:include filename=&#34;$(find vrx_gazebo)/worlds/xacros/dock.xacro&#34; /&gt;\r\n    &lt;xacro:include filename=&#34;$(find vrx_gazebo)/worlds/xacros/scan_and_dock.xacro&#34; /&gt;\r\n    &lt;xacro:include filename=&#34;$(find vrx_gazebo)/worlds/xacros/wayfinding.xacro&#34; /&gt;\r\n  &lt;/xacro:macro&gt;\r\n&lt;/world&gt;\r\n```\r\n\r\n**Workaround**\r\n\r\n```\r\ndiff -r 6a3fbf97e42a vrx_gazebo/worlds/xacros/include_all_xacros.xacro\r\n--- a/vrx_gazebo/worlds/xacros/include_all_xacros.xacro Wed Aug 21 13:49:58 2019 -0600\r\n+++ b/vrx_gazebo/worlds/xacros/include_all_xacros.xacro Wed Aug 21 14:25:51 2019 -0700\r\n@@ -5,11 +5,11 @@\r\n     &lt;xacro:include filename=&#34;$(find vrx_gazebo)/worlds/xacros/sandisland_minus_scene.xacro&#34; /&gt;\r\n     &lt;xacro:include filename=&#34;$(find vrx_gazebo)/worlds/xacros/scene.xacro&#34; /&gt;\r\n     &lt;xacro:include filename=&#34;$(find vrx_gazebo)/worlds/xacros/nav_challenge.xacro&#34; /&gt;\r\n-    &lt;xacro:include filename=&#34;$(find vrx_gazebo)/worlds/xacros/light_buoy.xacro&#34; /&gt;\r\n+    &lt;!-- &lt;xacro:include filename=&#34;$(find vrx_gazebo)/worlds/xacros/light_buoy.xacro&#34; /&gt;\r\n     &lt;xacro:include filename=&#34;$(find vrx_gazebo)/worlds/xacros/qualifying_pinger_transit_2016.xacro&#34; /&gt;\r\n     &lt;xacro:include filename=&#34;$(find vrx_gazebo)/worlds/xacros/dock_2016.xacro&#34; /&gt;\r\n     &lt;xacro:include filename=&#34;$(find vrx_gazebo)/worlds/xacros/dock_2018.xacro&#34; /&gt;\r\n-    &lt;xacro:include filename=&#34;$(find vrx_gazebo)/worlds/xacros/scene_macro.xacro&#34; /&gt;\r\n+    &lt;xacro:include filename=&#34;$(find vrx_gazebo)/worlds/xacros/scene_macro.xacro&#34; /&gt; --&gt;\r\n     &lt;xacro:include filename=&#34;$(find vrx_gazebo)/worlds/xacros/usv_wind_plugin.xacro&#34; /&gt;\r\n     &lt;xacro:include filename=&#34;$(find wave_gazebo)/world_models/ocean_waves/model.xacro&#34;/&gt;\r\n     &lt;xacro:include filename=&#34;$(find vrx_gazebo)/worlds/xacros/perception.xacro&#34; /&gt;\r\n```", "markup": "markdown", "html": "<p><strong>Description</strong></p>\n<p>Currently, running the world generation script leads to errors that prevent it from running. This relates to not being able to find files.</p>\n<p><strong>Reproduce</strong></p>\n<ol>\n<li><code>mkdir -p ~/my_worlds/world_xacros</code> <code>mkdir -p ~/my_worlds/worlds</code></li>\n<li><code>roslaunch vrx_gazebo generate_worlds.launch requested:=$HOME/vrx_ws/src/vrx/vrx_gazebo/worlds/yamls/dock_shallow.yaml world_xacro_target:=$HOME/my_worlds/world_xacros/ world_target:=$HOME/my_worlds/worlds/</code></li>\n</ol>\n<p><strong>Error</strong></p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">xacro</span><span class=\"o\">:</span> <span class=\"k\">in</span><span class=\"o\">-</span><span class=\"n\">order</span> <span class=\"n\">processing</span> <span class=\"n\">became</span> <span class=\"k\">default</span> <span class=\"k\">in</span> <span class=\"n\">ROS</span> <span class=\"n\">Melodic</span><span class=\"o\">.</span> <span class=\"n\">You</span> <span class=\"n\">can</span> <span class=\"n\">drop</span> <span class=\"n\">the</span> <span class=\"n\">option</span><span class=\"o\">.</span>\n<span class=\"n\">No</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span><span class=\"o\">:</span> <span class=\"sr\">/home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/worlds/xacros/</span><span class=\"n\">light_buoy</span><span class=\"o\">.</span><span class=\"na\">xacro</span>\n<span class=\"n\">when</span> <span class=\"n\">instantiating</span> <span class=\"n\">macro</span><span class=\"o\">:</span> <span class=\"n\">include_all_xacros</span> <span class=\"o\">(/</span><span class=\"n\">home</span><span class=\"sr\">/tylerlum/vrx_ws/src/vrx/vrx_gazebo/worlds/xacros/i</span><span class=\"n\">nclude_all_xacros</span><span class=\"o\">.</span><span class=\"na\">xacro</span><span class=\"o\">)</span>\n<span class=\"k\">in</span> <span class=\"n\">file</span><span class=\"o\">:</span> <span class=\"sr\">/home/tylerlum/my_worlds/world_xacros/</span><span class=\"n\">worlds0</span><span class=\"o\">.</span><span class=\"na\">world</span><span class=\"o\">.</span><span class=\"na\">xacro</span>\n<span class=\"n\">xacro</span><span class=\"o\">:</span> <span class=\"k\">in</span><span class=\"o\">-</span><span class=\"n\">order</span> <span class=\"n\">processing</span> <span class=\"n\">became</span> <span class=\"k\">default</span> <span class=\"k\">in</span> <span class=\"n\">ROS</span> <span class=\"n\">Melodic</span><span class=\"o\">.</span> <span class=\"n\">You</span> <span class=\"n\">can</span> <span class=\"n\">drop</span> <span class=\"n\">the</span> <span class=\"n\">option</span><span class=\"o\">.</span>\n<span class=\"n\">No</span> <span class=\"n\">such</span> <span class=\"n\">file</span> <span class=\"n\">or</span> <span class=\"n\">directory</span><span class=\"o\">:</span> <span class=\"sr\">/home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/worlds/xacros/</span><span class=\"n\">light_buoy</span><span class=\"o\">.</span><span class=\"na\">xacro</span>\n<span class=\"n\">when</span> <span class=\"n\">instantiating</span> <span class=\"n\">macro</span><span class=\"o\">:</span> <span class=\"n\">include_all_xacros</span> <span class=\"o\">(/</span><span class=\"n\">home</span><span class=\"sr\">/tylerlum/vrx_ws/src/vrx/vrx_gazebo/worlds/xacros/i</span><span class=\"n\">nclude_all_xacros</span><span class=\"o\">.</span><span class=\"na\">xacro</span><span class=\"o\">)</span>\n<span class=\"k\">in</span> <span class=\"n\">file</span><span class=\"o\">:</span> <span class=\"sr\">/home/tylerlum/my_worlds/world_xacros/</span><span class=\"n\">worlds1</span><span class=\"o\">.</span><span class=\"na\">world</span><span class=\"o\">.</span><span class=\"na\">xacro</span>\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>\u279c  vrx_gazebo ls worlds/xacros \ndock.xacro                nav_challenge.xacro  sandisland_minus_scene.xacro  scene.xacro           usv_wind_plugin.xacro\ninclude_all_xacros.xacro  perception.xacro     scan_and_dock.xacro           stationkeeping.xacro  wayfinding.xacro\n</pre></div>\n\n\n<p>Expected files</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">&amp;</span><span class=\"nt\">lt</span><span class=\"o\">;?</span><span class=\"nt\">xml</span> <span class=\"nt\">version</span><span class=\"o\">=&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span><span class=\"nt\">1</span><span class=\"p\">.</span><span class=\"nc\">0</span><span class=\"o\">&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;?&amp;</span><span class=\"nt\">gt</span><span class=\"o\">;</span>\n<span class=\"o\">&amp;</span><span class=\"nt\">lt</span><span class=\"o\">;</span><span class=\"nt\">world</span> <span class=\"nt\">xmlns</span><span class=\"p\">:</span><span class=\"nd\">xacro</span><span class=\"o\">=&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span><span class=\"nt\">http</span><span class=\"o\">://</span><span class=\"nt\">ros</span><span class=\"p\">.</span><span class=\"nc\">org</span><span class=\"o\">/</span><span class=\"nt\">wiki</span><span class=\"o\">/</span><span class=\"nt\">xacro</span><span class=\"o\">&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;&amp;</span><span class=\"nt\">gt</span><span class=\"o\">;</span>\n  <span class=\"o\">&amp;</span><span class=\"nt\">lt</span><span class=\"o\">;</span><span class=\"nt\">xacro</span><span class=\"p\">:</span><span class=\"nd\">macro</span> <span class=\"nt\">name</span><span class=\"o\">=&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span><span class=\"nt\">include_all_xacros</span><span class=\"o\">&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;&amp;</span><span class=\"nt\">gt</span><span class=\"o\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"nt\">lt</span><span class=\"o\">;</span><span class=\"nt\">xacro</span><span class=\"p\">:</span><span class=\"nd\">include</span> <span class=\"nt\">filename</span><span class=\"o\">=&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;$(</span><span class=\"nt\">find</span> <span class=\"nt\">vrx_gazebo</span><span class=\"o\">)/</span><span class=\"nt\">worlds</span><span class=\"o\">/</span><span class=\"nt\">sandisland</span><span class=\"p\">.</span><span class=\"nc\">xacro</span><span class=\"o\">&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span> <span class=\"o\">/&amp;</span><span class=\"nt\">gt</span><span class=\"o\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"nt\">lt</span><span class=\"o\">;</span><span class=\"nt\">xacro</span><span class=\"p\">:</span><span class=\"nd\">include</span> <span class=\"nt\">filename</span><span class=\"o\">=&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;$(</span><span class=\"nt\">find</span> <span class=\"nt\">vrx_gazebo</span><span class=\"o\">)/</span><span class=\"nt\">worlds</span><span class=\"o\">/</span><span class=\"nt\">xacros</span><span class=\"o\">/</span><span class=\"nt\">sandisland_minus_scene</span><span class=\"p\">.</span><span class=\"nc\">xacro</span><span class=\"o\">&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span> <span class=\"o\">/&amp;</span><span class=\"nt\">gt</span><span class=\"o\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"nt\">lt</span><span class=\"o\">;</span><span class=\"nt\">xacro</span><span class=\"p\">:</span><span class=\"nd\">include</span> <span class=\"nt\">filename</span><span class=\"o\">=&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;$(</span><span class=\"nt\">find</span> <span class=\"nt\">vrx_gazebo</span><span class=\"o\">)/</span><span class=\"nt\">worlds</span><span class=\"o\">/</span><span class=\"nt\">xacros</span><span class=\"o\">/</span><span class=\"nt\">scene</span><span class=\"p\">.</span><span class=\"nc\">xacro</span><span class=\"o\">&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span> <span class=\"o\">/&amp;</span><span class=\"nt\">gt</span><span class=\"o\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"nt\">lt</span><span class=\"o\">;</span><span class=\"nt\">xacro</span><span class=\"p\">:</span><span class=\"nd\">include</span> <span class=\"nt\">filename</span><span class=\"o\">=&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;$(</span><span class=\"nt\">find</span> <span class=\"nt\">vrx_gazebo</span><span class=\"o\">)/</span><span class=\"nt\">worlds</span><span class=\"o\">/</span><span class=\"nt\">xacros</span><span class=\"o\">/</span><span class=\"nt\">nav_challenge</span><span class=\"p\">.</span><span class=\"nc\">xacro</span><span class=\"o\">&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span> <span class=\"o\">/&amp;</span><span class=\"nt\">gt</span><span class=\"o\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"nt\">lt</span><span class=\"o\">;</span><span class=\"nt\">xacro</span><span class=\"p\">:</span><span class=\"nd\">include</span> <span class=\"nt\">filename</span><span class=\"o\">=&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;$(</span><span class=\"nt\">find</span> <span class=\"nt\">vrx_gazebo</span><span class=\"o\">)/</span><span class=\"nt\">worlds</span><span class=\"o\">/</span><span class=\"nt\">xacros</span><span class=\"o\">/</span><span class=\"nt\">light_buoy</span><span class=\"p\">.</span><span class=\"nc\">xacro</span><span class=\"o\">&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span> <span class=\"o\">/&amp;</span><span class=\"nt\">gt</span><span class=\"o\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"nt\">lt</span><span class=\"o\">;</span><span class=\"nt\">xacro</span><span class=\"p\">:</span><span class=\"nd\">include</span> <span class=\"nt\">filename</span><span class=\"o\">=&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;$(</span><span class=\"nt\">find</span> <span class=\"nt\">vrx_gazebo</span><span class=\"o\">)/</span><span class=\"nt\">worlds</span><span class=\"o\">/</span><span class=\"nt\">xacros</span><span class=\"o\">/</span><span class=\"nt\">qualifying_pinger_transit_2016</span><span class=\"p\">.</span><span class=\"nc\">xacro</span><span class=\"o\">&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span> <span class=\"o\">/&amp;</span><span class=\"nt\">gt</span><span class=\"o\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"nt\">lt</span><span class=\"o\">;</span><span class=\"nt\">xacro</span><span class=\"p\">:</span><span class=\"nd\">include</span> <span class=\"nt\">filename</span><span class=\"o\">=&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;$(</span><span class=\"nt\">find</span> <span class=\"nt\">vrx_gazebo</span><span class=\"o\">)/</span><span class=\"nt\">worlds</span><span class=\"o\">/</span><span class=\"nt\">xacros</span><span class=\"o\">/</span><span class=\"nt\">dock_2016</span><span class=\"p\">.</span><span class=\"nc\">xacro</span><span class=\"o\">&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span> <span class=\"o\">/&amp;</span><span class=\"nt\">gt</span><span class=\"o\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"nt\">lt</span><span class=\"o\">;</span><span class=\"nt\">xacro</span><span class=\"p\">:</span><span class=\"nd\">include</span> <span class=\"nt\">filename</span><span class=\"o\">=&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;$(</span><span class=\"nt\">find</span> <span class=\"nt\">vrx_gazebo</span><span class=\"o\">)/</span><span class=\"nt\">worlds</span><span class=\"o\">/</span><span class=\"nt\">xacros</span><span class=\"o\">/</span><span class=\"nt\">dock_2018</span><span class=\"p\">.</span><span class=\"nc\">xacro</span><span class=\"o\">&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span> <span class=\"o\">/&amp;</span><span class=\"nt\">gt</span><span class=\"o\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"nt\">lt</span><span class=\"o\">;</span><span class=\"nt\">xacro</span><span class=\"p\">:</span><span class=\"nd\">include</span> <span class=\"nt\">filename</span><span class=\"o\">=&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;$(</span><span class=\"nt\">find</span> <span class=\"nt\">vrx_gazebo</span><span class=\"o\">)/</span><span class=\"nt\">worlds</span><span class=\"o\">/</span><span class=\"nt\">xacros</span><span class=\"o\">/</span><span class=\"nt\">scene_macro</span><span class=\"p\">.</span><span class=\"nc\">xacro</span><span class=\"o\">&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span> <span class=\"o\">/&amp;</span><span class=\"nt\">gt</span><span class=\"o\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"nt\">lt</span><span class=\"o\">;</span><span class=\"nt\">xacro</span><span class=\"p\">:</span><span class=\"nd\">include</span> <span class=\"nt\">filename</span><span class=\"o\">=&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;$(</span><span class=\"nt\">find</span> <span class=\"nt\">vrx_gazebo</span><span class=\"o\">)/</span><span class=\"nt\">worlds</span><span class=\"o\">/</span><span class=\"nt\">xacros</span><span class=\"o\">/</span><span class=\"nt\">usv_wind_plugin</span><span class=\"p\">.</span><span class=\"nc\">xacro</span><span class=\"o\">&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span> <span class=\"o\">/&amp;</span><span class=\"nt\">gt</span><span class=\"o\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"nt\">lt</span><span class=\"o\">;</span><span class=\"nt\">xacro</span><span class=\"p\">:</span><span class=\"nd\">include</span> <span class=\"nt\">filename</span><span class=\"o\">=&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;$(</span><span class=\"nt\">find</span> <span class=\"nt\">wave_gazebo</span><span class=\"o\">)/</span><span class=\"nt\">world_models</span><span class=\"o\">/</span><span class=\"nt\">ocean_waves</span><span class=\"o\">/</span><span class=\"nt\">model</span><span class=\"p\">.</span><span class=\"nc\">xacro</span><span class=\"o\">&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;/&amp;</span><span class=\"nt\">gt</span><span class=\"o\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"nt\">lt</span><span class=\"o\">;</span><span class=\"nt\">xacro</span><span class=\"p\">:</span><span class=\"nd\">include</span> <span class=\"nt\">filename</span><span class=\"o\">=&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;$(</span><span class=\"nt\">find</span> <span class=\"nt\">vrx_gazebo</span><span class=\"o\">)/</span><span class=\"nt\">worlds</span><span class=\"o\">/</span><span class=\"nt\">xacros</span><span class=\"o\">/</span><span class=\"nt\">perception</span><span class=\"p\">.</span><span class=\"nc\">xacro</span><span class=\"o\">&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span> <span class=\"o\">/&amp;</span><span class=\"nt\">gt</span><span class=\"o\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"nt\">lt</span><span class=\"o\">;</span><span class=\"nt\">xacro</span><span class=\"p\">:</span><span class=\"nd\">include</span> <span class=\"nt\">filename</span><span class=\"o\">=&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;$(</span><span class=\"nt\">find</span> <span class=\"nt\">vrx_gazebo</span><span class=\"o\">)/</span><span class=\"nt\">worlds</span><span class=\"o\">/</span><span class=\"nt\">xacros</span><span class=\"o\">/</span><span class=\"nt\">stationkeeping</span><span class=\"p\">.</span><span class=\"nc\">xacro</span><span class=\"o\">&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span> <span class=\"o\">/&amp;</span><span class=\"nt\">gt</span><span class=\"o\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"nt\">lt</span><span class=\"o\">;</span><span class=\"nt\">xacro</span><span class=\"p\">:</span><span class=\"nd\">include</span> <span class=\"nt\">filename</span><span class=\"o\">=&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;$(</span><span class=\"nt\">find</span> <span class=\"nt\">vrx_gazebo</span><span class=\"o\">)/</span><span class=\"nt\">worlds</span><span class=\"o\">/</span><span class=\"nt\">xacros</span><span class=\"o\">/</span><span class=\"nt\">dock</span><span class=\"p\">.</span><span class=\"nc\">xacro</span><span class=\"o\">&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span> <span class=\"o\">/&amp;</span><span class=\"nt\">gt</span><span class=\"o\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"nt\">lt</span><span class=\"o\">;</span><span class=\"nt\">xacro</span><span class=\"p\">:</span><span class=\"nd\">include</span> <span class=\"nt\">filename</span><span class=\"o\">=&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;$(</span><span class=\"nt\">find</span> <span class=\"nt\">vrx_gazebo</span><span class=\"o\">)/</span><span class=\"nt\">worlds</span><span class=\"o\">/</span><span class=\"nt\">xacros</span><span class=\"o\">/</span><span class=\"nt\">scan_and_dock</span><span class=\"p\">.</span><span class=\"nc\">xacro</span><span class=\"o\">&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span> <span class=\"o\">/&amp;</span><span class=\"nt\">gt</span><span class=\"o\">;</span>\n    <span class=\"o\">&amp;</span><span class=\"nt\">lt</span><span class=\"o\">;</span><span class=\"nt\">xacro</span><span class=\"p\">:</span><span class=\"nd\">include</span> <span class=\"nt\">filename</span><span class=\"o\">=&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;$(</span><span class=\"nt\">find</span> <span class=\"nt\">vrx_gazebo</span><span class=\"o\">)/</span><span class=\"nt\">worlds</span><span class=\"o\">/</span><span class=\"nt\">xacros</span><span class=\"o\">/</span><span class=\"nt\">wayfinding</span><span class=\"p\">.</span><span class=\"nc\">xacro</span><span class=\"o\">&amp;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span> <span class=\"o\">/&amp;</span><span class=\"nt\">gt</span><span class=\"o\">;</span>\n  <span class=\"o\">&amp;</span><span class=\"nt\">lt</span><span class=\"o\">;/</span><span class=\"nt\">xacro</span><span class=\"p\">:</span><span class=\"nd\">macro</span><span class=\"o\">&amp;</span><span class=\"nt\">gt</span><span class=\"o\">;</span>\n<span class=\"o\">&amp;</span><span class=\"nt\">lt</span><span class=\"o\">;/</span><span class=\"nt\">world</span><span class=\"o\">&amp;</span><span class=\"nt\">gt</span><span class=\"o\">;</span>\n</pre></div>\n\n\n<p><strong>Workaround</strong></p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r 6a3fbf97e42a vrx_gazebo/worlds/xacros/include_all_xacros.xacro</span>\n<span class=\"gd\">--- a/vrx_gazebo/worlds/xacros/include_all_xacros.xacro Wed Aug 21 13:49:58 2019 -0600</span>\n<span class=\"gi\">+++ b/vrx_gazebo/worlds/xacros/include_all_xacros.xacro Wed Aug 21 14:25:51 2019 -0700</span>\n<span class=\"gu\">@@ -5,11 +5,11 @@</span>\n     &amp;lt;xacro:include filename=&amp;#34;$(find vrx_gazebo)/worlds/xacros/sandisland_minus_scene.xacro&amp;#34; /&amp;gt;\n     &amp;lt;xacro:include filename=&amp;#34;$(find vrx_gazebo)/worlds/xacros/scene.xacro&amp;#34; /&amp;gt;\n     &amp;lt;xacro:include filename=&amp;#34;$(find vrx_gazebo)/worlds/xacros/nav_challenge.xacro&amp;#34; /&amp;gt;\n<span class=\"gd\">-    &amp;lt;xacro:include filename=&amp;#34;$(find vrx_gazebo)/worlds/xacros/light_buoy.xacro&amp;#34; /&amp;gt;</span>\n<span class=\"gi\">+    &amp;lt;!-- &amp;lt;xacro:include filename=&amp;#34;$(find vrx_gazebo)/worlds/xacros/light_buoy.xacro&amp;#34; /&amp;gt;</span>\n     &amp;lt;xacro:include filename=&amp;#34;$(find vrx_gazebo)/worlds/xacros/qualifying_pinger_transit_2016.xacro&amp;#34; /&amp;gt;\n     &amp;lt;xacro:include filename=&amp;#34;$(find vrx_gazebo)/worlds/xacros/dock_2016.xacro&amp;#34; /&amp;gt;\n     &amp;lt;xacro:include filename=&amp;#34;$(find vrx_gazebo)/worlds/xacros/dock_2018.xacro&amp;#34; /&amp;gt;\n<span class=\"gd\">-    &amp;lt;xacro:include filename=&amp;#34;$(find vrx_gazebo)/worlds/xacros/scene_macro.xacro&amp;#34; /&amp;gt;</span>\n<span class=\"gi\">+    &amp;lt;xacro:include filename=&amp;#34;$(find vrx_gazebo)/worlds/xacros/scene_macro.xacro&amp;#34; /&amp;gt; --&amp;gt;</span>\n     &amp;lt;xacro:include filename=&amp;#34;$(find vrx_gazebo)/worlds/xacros/usv_wind_plugin.xacro&amp;#34; /&amp;gt;\n     &amp;lt;xacro:include filename=&amp;#34;$(find wave_gazebo)/world_models/ocean_waves/model.xacro&amp;#34;/&amp;gt;\n     &amp;lt;xacro:include filename=&amp;#34;$(find vrx_gazebo)/worlds/xacros/perception.xacro&amp;#34; /&amp;gt;\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-08-22T22:03:36.316643+00:00", "milestone": null, "updated_on": "2020-04-10T04:04:10.263472+00:00", "type": "issue", "id": 152}, {"priority": "major", "kind": "task", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/153/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/153.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/153/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/153/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/153/phase1-pre-phase2-meta-issue"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/153/vote"}}, "reporter": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "title": "Phase1/Pre-phase2 meta issue", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Deadline: September 13.\r\n\r\n* Phase 1:  \r\n  \u2611 Prepare for tech support weekend prior to deadline \\(23rd is a Monday\\)\r\n\r\n    \u2611 Review video submissions\r\n\r\n\r\n\r\n    \u2611 Publish results and make announcement, provided some fun/creative prizes, post/embedded videos   \r\n    \u2611 Press release\r\n\r\n\r\n* Pre-phase 2:\r\n\r\n    \u2611 Create .yaml file for task 1 - Michael\r\n\r\n\r\n\r\n    \u2611 Create .yaml file for task 2 - Michael\r\n\r\n\r\n\r\n    \u2611 Create .yaml file for task 3 - Carlos\r\n\r\n\r\n\r\n    \u2611 Create .yaml file for task 4 - Carlos\r\n\r\n\r\n\r\n    \u2611 Create .yaml file for task 5 - Brian\r\n\r\n\r\n\r\n    \u2611 Create .yaml file for task 6 - Brian\r\n\r\n\r\n\r\n    \u2611 Dry-run of the automated evaluation with our own two solutions \\(Tyler and Rumman\\)\r\n\r\n\r\n\r\n    * \u2611 WAM-V generation\r\n    * \u2611 Task generation\r\n    * \u2611 Running competition\r\n    * \u2611 Upload logs to S3\r\n    * \u2611 Optional: Generate some videos\r\n    \r\n\r\n    \u2611 Explore running the automated evaluation on AWS - Carlos\r\n\r\n\r\n\r\n\u200c", "markup": "markdown", "html": "<p>Deadline: September 13.</p>\n<ul>\n<li>\n<p>Phase 1:<br />\n  \u2611 Prepare for tech support weekend prior to deadline (23rd is a Monday)</p>\n<p>\u2611 Review video submissions</p>\n<p>\u2611 Publish results and make announcement, provided some fun/creative prizes, post/embedded videos <br />\n\u2611 Press release</p>\n</li>\n<li>\n<p>Pre-phase 2:</p>\n<p>\u2611 Create .yaml file for task 1 - Michael</p>\n<p>\u2611 Create .yaml file for task 2 - Michael</p>\n<p>\u2611 Create .yaml file for task 3 - Carlos</p>\n<p>\u2611 Create .yaml file for task 4 - Carlos</p>\n<p>\u2611 Create .yaml file for task 5 - Brian</p>\n<p>\u2611 Create .yaml file for task 6 - Brian</p>\n<p>\u2611 Dry-run of the automated evaluation with our own two solutions (Tyler and Rumman)</p>\n<ul>\n<li>\u2611 WAM-V generation</li>\n<li>\u2611 Task generation</li>\n<li>\u2611 Running competition</li>\n<li>\u2611 Upload logs to S3</li>\n<li>\u2611 Optional: Generate some videos</li>\n</ul>\n<p>\u2611 Explore running the automated evaluation on AWS - Carlos</p>\n</li>\n</ul>\n<p>\u200c</p>", "type": "rendered"}, "assignee": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-08-28T01:06:47.123069+00:00", "milestone": null, "updated_on": "2019-11-04T18:56:23.314622+00:00", "type": "issue", "id": 153}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/154/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/154.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/154/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/154/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/154/getting-error-while-launching-roslaunch"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/154/vote"}}, "reporter": null, "title": "Getting error while launching  roslaunch vrx_gazebo vrx.launch", "component": {"name": "ROS", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519935.json"}}}, "votes": 0, "watches": 3, "content": {"raw": "Unable to find uri[model://ocean_waves].\r\nI am using ros melodic gazebo 9", "markup": "markdown", "html": "<p>Unable to find uri[model://ocean_waves].\nI am using ros melodic gazebo 9</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-08-30T11:39:16.786824+00:00", "milestone": null, "updated_on": "2019-09-17T21:37:50.216536+00:00", "type": "issue", "id": 154}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/155/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/155.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/155/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/155/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/155/building-vrx-from-source"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/155/vote"}}, "reporter": {"display_name": "SaailN", "uuid": "{73eb19f8-43a7-41f2-940a-48e1668a5d67}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B73eb19f8-43a7-41f2-940a-48e1668a5d67%7D"}, "html": {"href": "https://bitbucket.org/%7B73eb19f8-43a7-41f2-940a-48e1668a5d67%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4cb030ccb692ba3174e22b039878ba89d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsS-0.png"}}, "nickname": "SaailN", "type": "user", "account_id": "5d69eab2a46a5b0bd7fa3f93"}, "title": "Building vrx from source", "component": {"name": "ROS", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519935.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "I tried building vrx from source by following steps from [#!/osrf/vrx/wiki/tutorials/SystemSetupInstall](#!/osrf/vrx/wiki/tutorials/SystemSetupInstall).\r\n\r\nBy typing : roslaunch vrx\\_gazebo sandisland.launch \r\n\r\nI am getting following warnings and gazebo is not loading. I am using ros melodic gazebon 9.0\r\n\r\n\u200c\r\n\r\nWarning \\[[parser.cc:759](http://parser.cc:759)\\] XML Attribute\\[xmlns:xacro\\] in element\\[sdf\\] not defined in SDF, ignoring.  \r\nWarning \\[[parser.cc:759](http://parser.cc:759)\\] XML Attribute\\[xmlns:xacro\\] in element\\[world\\] not defined in SDF, ignoring.  \r\n\\[ INFO\\] \\[1567228563.020945111\\]: Finished loading Gazebo ROS API Plugin.  \r\n\\[ INFO\\] \\[1567228563.023336032\\]: waitForService: Service \\[/gazebo\\_gui/set\\_physics\\_properties\\] has not been advertised, waiting...  \r\nWarning \\[[parser.cc:950](http://parser.cc:950)\\] XML Element\\[selfCollide\\], child of element\\[model\\] not defined in SDF. Ignoring\\[selfCollide\\]. You may have an incorrect SDF file, or an sdformat version that doesn't support this element.  \r\nWarning \\[[parser.cc:950](http://parser.cc:950)\\] XML Element\\[static\\], child of element\\[link\\] not defined in SDF. Ignoring\\[static\\]. You may have an incorrect SDF file, or an sdformat version that doesn't support this element.  \r\nWarning \\[[parser.cc:950](http://parser.cc:950)\\] XML Element\\[static\\], child of element\\[link\\] not defined in SDF. Ignoring\\[static\\]. You may have an incorrect SDF file, or an sdformat version that doesn't support this element.  \r\nWarning \\[[parser.cc:950](http://parser.cc:950)\\] XML Element\\[static\\], child of element\\[link\\] not defined in SDF. Ignoring\\[static\\]. You may have an incorrect SDF file, or an sdformat version that doesn't support this element.  \r\n\\[ INFO\\] \\[1567228568.034051437, 0.001000000\\]: Thruster namespace <wamv/>  \r\n\\[ INFO\\] \\[1567228568.097589335, 0.023000000\\]: waitForService: Service \\[/gazebo/set\\_physics\\_properties\\] is now available.  \r\n\\[ INFO\\] \\[1567228568.180111650, 0.073000000\\]: Physics dynamic reconfigure ready.  \r\n\\[spawn\\_model-4\\] process has finished cleanly  \r\nlog file: /home/saail/.ros/log/6b8147f2-cbae-11e9-82c0-b0104156c943/spawn\\_model-4\\*.log", "markup": "markdown", "html": "<p>I tried building vrx from source by following steps from <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/wiki/tutorials/SystemSetupInstall\" rel=\"nofollow\">#!/osrf/vrx/wiki/tutorials/SystemSetupInstall</a>.</p>\n<p>By typing : roslaunch vrx_gazebo sandisland.launch </p>\n<p>I am getting following warnings and gazebo is not loading. I am using ros melodic gazebon 9.0</p>\n<p>\u200c</p>\n<p>Warning [<a data-is-external-link=\"true\" href=\"http://parser.cc:759\" rel=\"nofollow\">parser.cc:759</a>] XML Attribute[xmlns:xacro] in element[sdf] not defined in SDF, ignoring.<br />\nWarning [<a data-is-external-link=\"true\" href=\"http://parser.cc:759\" rel=\"nofollow\">parser.cc:759</a>] XML Attribute[xmlns:xacro] in element[world] not defined in SDF, ignoring.<br />\n[ INFO] [<a href=\"#!/osrf/vrx/commits/1567228563\" rel=\"nofollow\" class=\"ap-connect-link\">1567228563</a>.<a href=\"#!/osrf/vrx/commits/020945111\" rel=\"nofollow\" class=\"ap-connect-link\">020945111</a>]: Finished loading Gazebo ROS API Plugin.<br />\n[ INFO] [<a href=\"#!/osrf/vrx/commits/1567228563\" rel=\"nofollow\" class=\"ap-connect-link\">1567228563</a>.<a href=\"#!/osrf/vrx/commits/023336032\" rel=\"nofollow\" class=\"ap-connect-link\">023336032</a>]: waitForService: Service [/gazebo_gui/set_physics_properties] has not been advertised, waiting...<br />\nWarning [<a data-is-external-link=\"true\" href=\"http://parser.cc:950\" rel=\"nofollow\">parser.cc:950</a>] XML Element[selfCollide], child of element[model] not defined in SDF. Ignoring[selfCollide]. You may have an incorrect SDF file, or an sdformat version that doesn't support this element.<br />\nWarning [<a data-is-external-link=\"true\" href=\"http://parser.cc:950\" rel=\"nofollow\">parser.cc:950</a>] XML Element[static], child of element[link] not defined in SDF. Ignoring[static]. You may have an incorrect SDF file, or an sdformat version that doesn't support this element.<br />\nWarning [<a data-is-external-link=\"true\" href=\"http://parser.cc:950\" rel=\"nofollow\">parser.cc:950</a>] XML Element[static], child of element[link] not defined in SDF. Ignoring[static]. You may have an incorrect SDF file, or an sdformat version that doesn't support this element.<br />\nWarning [<a data-is-external-link=\"true\" href=\"http://parser.cc:950\" rel=\"nofollow\">parser.cc:950</a>] XML Element[static], child of element[link] not defined in SDF. Ignoring[static]. You may have an incorrect SDF file, or an sdformat version that doesn't support this element.<br />\n[ INFO] [<a href=\"#!/osrf/vrx/commits/1567228568\" rel=\"nofollow\" class=\"ap-connect-link\">1567228568</a>.<a href=\"#!/osrf/vrx/commits/034051437\" rel=\"nofollow\" class=\"ap-connect-link\">034051437</a>, 0.<a href=\"#!/osrf/vrx/commits/001000000\" rel=\"nofollow\" class=\"ap-connect-link\">001000000</a>]: Thruster namespace &lt;wamv/&gt;<br />\n[ INFO] [<a href=\"#!/osrf/vrx/commits/1567228568\" rel=\"nofollow\" class=\"ap-connect-link\">1567228568</a>.<a href=\"#!/osrf/vrx/commits/097589335\" rel=\"nofollow\" class=\"ap-connect-link\">097589335</a>, 0.<a href=\"#!/osrf/vrx/commits/023000000\" rel=\"nofollow\" class=\"ap-connect-link\">023000000</a>]: waitForService: Service [/gazebo/set_physics_properties] is now available.<br />\n[ INFO] [<a href=\"#!/osrf/vrx/commits/1567228568\" rel=\"nofollow\" class=\"ap-connect-link\">1567228568</a>.<a href=\"#!/osrf/vrx/commits/180111650\" rel=\"nofollow\" class=\"ap-connect-link\">180111650</a>, 0.<a href=\"#!/osrf/vrx/commits/073000000\" rel=\"nofollow\" class=\"ap-connect-link\">073000000</a>]: Physics dynamic reconfigure ready.<br />\n[spawn_model-4] process has finished cleanly<br />\nlog file: /home/saail/.ros/log/6b8147f2-cbae-11e9-82c0-b0104156c943/spawn_model-4*.log</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-08-31T05:26:05.147033+00:00", "milestone": null, "updated_on": "2019-10-04T20:05:54.955307+00:00", "type": "issue", "id": 155}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/156/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/156.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/156/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/156/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/156/tutorial-on-wave-plugin-out-of-date"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/156/vote"}}, "reporter": {"display_name": "Coline Ramee", "uuid": "{cb901d74-cf3c-4449-87cd-540bec8d3bf9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcb901d74-cf3c-4449-87cd-540bec8d3bf9%7D"}, "html": {"href": "https://bitbucket.org/%7Bcb901d74-cf3c-4449-87cd-540bec8d3bf9%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7db065445c12ad58c321101bad53506fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCR-4.png"}}, "nickname": "Coline Ramee", "type": "user", "account_id": "5d6fc502522f790d9c772865"}, "title": "Tutorial on wave plugin out of date", "component": {"name": "Plugin", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519936.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "I was trying to figure out how to get rid of the waves in the simulation to tune a controller. The tutorial at [#!/osrf/vrx/wiki/tutorials/ChangingPluginParameters](#!/osrf/vrx/wiki/tutorials/ChangingPluginParameters), seems to be out of date. The .xacro file for the dynamics now uses `<wave_model>ocean_waves</wave_model>` instead of what is stated in the tutorial. I was wondering what was the best way to change the wave field now. Should I change the parameters of the macro ocean\\_waves that can be found in [vrx](#!/osrf/vrx/src/0b2689612602ef82e5dc3e5ddfea430861beb1bf)/[wave\\_gazebo](#!/osrf/vrx/src/0b2689612602ef82e5dc3e5ddfea430861beb1bf/wave_gazebo)/[world\\_models](#!/osrf/vrx/src/0b2689612602ef82e5dc3e5ddfea430861beb1bf/wave_gazebo/world_models)/[ocean\\_waves](#!/osrf/vrx/src/0b2689612602ef82e5dc3e5ddfea430861beb1bf/wave_gazebo/world_models/ocean_waves)/model.xacro? Would setting the gain to 0 remove the waves?\r\n\r\nThanks for the help", "markup": "markdown", "html": "<p>I was trying to figure out how to get rid of the waves in the simulation to tune a controller. The tutorial at <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/wiki/tutorials/ChangingPluginParameters\" rel=\"nofollow\">#!/osrf/vrx/wiki/tutorials/ChangingPluginParameters</a>, seems to be out of date. The .xacro file for the dynamics now uses <code>&lt;wave_model&gt;ocean_waves&lt;/wave_model&gt;</code> instead of what is stated in the tutorial. I was wondering what was the best way to change the wave field now. Should I change the parameters of the macro ocean_waves that can be found in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/src/0b2689612602ef82e5dc3e5ddfea430861beb1bf\" rel=\"nofollow\">vrx</a>/<a data-is-external-link=\"true\" href=\"#!/osrf/vrx/src/0b2689612602ef82e5dc3e5ddfea430861beb1bf/wave_gazebo\" rel=\"nofollow\">wave_gazebo</a>/<a data-is-external-link=\"true\" href=\"#!/osrf/vrx/src/0b2689612602ef82e5dc3e5ddfea430861beb1bf/wave_gazebo/world_models\" rel=\"nofollow\">world_models</a>/<a data-is-external-link=\"true\" href=\"#!/osrf/vrx/src/0b2689612602ef82e5dc3e5ddfea430861beb1bf/wave_gazebo/world_models/ocean_waves\" rel=\"nofollow\">ocean_waves</a>/model.xacro? Would setting the gain to 0 remove the waves?</p>\n<p>Thanks for the help</p>", "type": "rendered"}, "assignee": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-09-04T14:43:32.397963+00:00", "milestone": null, "updated_on": "2019-09-05T20:33:38.134711+00:00", "type": "issue", "id": 156}, {"priority": "critical", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/157/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/157.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/157/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/157/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/157/error-while-launching-package"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/157/vote"}}, "reporter": {"display_name": "SaailN", "uuid": "{73eb19f8-43a7-41f2-940a-48e1668a5d67}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B73eb19f8-43a7-41f2-940a-48e1668a5d67%7D"}, "html": {"href": "https://bitbucket.org/%7B73eb19f8-43a7-41f2-940a-48e1668a5d67%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4cb030ccb692ba3174e22b039878ba89d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsS-0.png"}}, "nickname": "SaailN", "type": "user", "account_id": "5d69eab2a46a5b0bd7fa3f93"}, "title": "Error while launching Package.", "component": {"name": "ROS", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519935.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "I have followed all steps for installing vrx package by 1 st method as given. \r\n\r\nWhen i try to launch package by:\r\n\r\nroslaunch vrx\\_gazebo sandisland.launch\r\n\r\nError finding file \\[/opt/ros/melodic/share/wave\\_gazebo/world\\_models/ocean\\_waves/model.sdf\\].  \r\nError Code 1 Msg: Unable to read file\\[/opt/ros/melodic/share/wave\\_gazebo/world\\_models/ocean\\_waves/model.sdf\\].", "markup": "markdown", "html": "<p>I have followed all steps for installing vrx package by 1 st method as given. </p>\n<p>When i try to launch package by:</p>\n<p>roslaunch vrx_gazebo sandisland.launch</p>\n<p>Error finding file [/opt/ros/melodic/share/wave_gazebo/world_models/ocean_waves/model.sdf].<br />\nError Code 1 Msg: Unable to read file[/opt/ros/melodic/share/wave_gazebo/world_models/ocean_waves/model.sdf].</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-09-06T05:38:40.972541+00:00", "milestone": null, "updated_on": "2019-09-10T06:24:19.342264+00:00", "type": "issue", "id": 157}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/158/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/158.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/158/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/158/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/158/usv_dynamics_plugin-segfaults"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/158/vote"}}, "reporter": null, "title": "usv_dynamics_plugin segfaults", "component": null, "votes": 0, "watches": null, "content": {"raw": "I am trying to integrate vrx simulation in to a [PX4 software in the loop simulation(SITL)](https://dev.px4.io/v1.9.0/en/simulation/gazebo.html)\r\n\r\nI have written a sdf file which contains the `usv_gazebo_dynamics_plugin` with a mavlink plugin in order to be able to run it with the PX4 rover firmware.\r\n\r\nHowever, it segfaults when being launched. The line where it segfaults seems to be this line: #!/osrf/vrx/src/18d0d4a67be09297366d667b52c20fa57e767d83/usv_gazebo_plugins/src/usv_gazebo_dynamics_plugin.cc#lines-320\r\n\r\nI added the following lines in my sdf file for the boat.\r\n```\r\n      <plugin name=\"usv_dynamics\" filename=\"libusv_gazebo_dynamics_plugin.so\">\r\n        <bodyName>base_link</bodyName>\r\n        <!-- Length discretization, AKA, \"N\" -->\r\n        <length_n>2</length_n>\r\n        <!-- Wave model -->\r\n        <wave_model>ocean_waves</wave_model>\r\n      </plugin>\r\n```\r\nIs there some other plugin that needs to be launched prior to launching the dyanamics plugin?", "markup": "markdown", "html": "<p>I am trying to integrate vrx simulation in to a <a data-is-external-link=\"true\" href=\"https://dev.px4.io/v1.9.0/en/simulation/gazebo.html\" rel=\"nofollow\">PX4 software in the loop simulation(SITL)</a></p>\n<p>I have written a sdf file which contains the <code>usv_gazebo_dynamics_plugin</code> with a mavlink plugin in order to be able to run it with the PX4 rover firmware.</p>\n<p>However, it segfaults when being launched. The line where it segfaults seems to be this line: <a href=\"#!/osrf/vrx/src/18d0d4a67be09297366d667b52c20fa57e767d83/usv_gazebo_plugins/src/usv_gazebo_dynamics_plugin.cc#lines-320\" rel=\"nofollow\" class=\"ap-connect-link\">#!/osrf/vrx/src/18d0d4a67be09297366d667b52c20fa57e767d83/usv_gazebo_plugins/src/usv_gazebo_dynamics_plugin.cc#lines-320</a></p>\n<p>I added the following lines in my sdf file for the boat.</p>\n<div class=\"codehilite\"><pre><span></span>      <span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&quot;usv_dynamics&quot;</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;libusv_gazebo_dynamics_plugin.so&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;bodyName&gt;</span>base_link<span class=\"nt\">&lt;/bodyName&gt;</span>\n        <span class=\"c\">&lt;!-- Length discretization, AKA, &quot;N&quot; --&gt;</span>\n        <span class=\"nt\">&lt;length_n&gt;</span>2<span class=\"nt\">&lt;/length_n&gt;</span>\n        <span class=\"c\">&lt;!-- Wave model --&gt;</span>\n        <span class=\"nt\">&lt;wave_model&gt;</span>ocean_waves<span class=\"nt\">&lt;/wave_model&gt;</span>\n      <span class=\"nt\">&lt;/plugin&gt;</span>\n</pre></div>\n\n\n<p>Is there some other plugin that needs to be launched prior to launching the dyanamics plugin?</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-09-06T07:44:46.905028+00:00", "milestone": null, "updated_on": "2019-10-04T20:06:39.582646+00:00", "type": "issue", "id": 158}, {"priority": "major", "kind": "task", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/159/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/159.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/159/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/159/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/159/how-to-write-the-code-to-drive-the-boat-go"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/159/vote"}}, "reporter": null, "title": "how to write the code to drive the boat go ahead?", "component": {"name": "ROS", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519935.json"}}}, "votes": 0, "watches": null, "content": {"raw": "can anyone show me the sample code(c++)? the vrx tutorial about driving seems it's of little practical use", "markup": "markdown", "html": "<p>can anyone show me the sample code(c++)? the vrx tutorial about driving seems it's of little practical use</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-09-11T14:03:08.014610+00:00", "milestone": null, "updated_on": "2019-09-19T18:19:31.065857+00:00", "type": "issue", "id": 159}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/160/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/160.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/160/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/160/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/160/3d-lidar-sensor-no-longer-working"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/160/vote"}}, "reporter": {"display_name": "John Sumskas", "uuid": "{4cf44000-1bc9-4958-b2f0-ebf4a0ec34bb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4cf44000-1bc9-4958-b2f0-ebf4a0ec34bb%7D"}, "html": {"href": "https://bitbucket.org/%7B4cf44000-1bc9-4958-b2f0-ebf4a0ec34bb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d3f979962a8d9d9eb4c505633931bdd5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJS-6.png"}}, "nickname": "johnsumskas", "type": "user", "account_id": "557058:335cae63-ffdf-48a7-8317-496d75bc8f52"}, "title": "3d Lidar sensor no longer working.", "component": null, "votes": 1, "watches": 1, "content": {"raw": "After updating vrx to the latest code, the 3d lidar is no longer works as expected. See image below to see the flat wall on gazebo appear curved and distorted on rviz.\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/4093808602-image.png)\r\n\u200c\r\n\r\nAfter downgrading to update 1722 using `hg up 1722` This fixed the issue. See image below:\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/1568678626-image.png)\r\nIt appears the implementation of the ocean reflections in ~~#122~~ causes this issue.", "markup": "markdown", "html": "<p>After updating vrx to the latest code, the 3d lidar is no longer works as expected. See image below to see the flat wall on gazebo appear curved and distorted on rviz.</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/4093808602-image.png\" />\n\u200c</p>\n<p>After downgrading to update 1722 using <code>hg up 1722</code> This fixed the issue. See image below:</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1568678626-image.png\" />\nIt appears the implementation of the ocean reflections in <del><a href=\"#!/osrf/vrx/issues/122/ocean-reflections\" rel=\"nofollow\" title=\"Ocean reflections\" class=\"ap-connect-link\"><s>#122</s></a></del> causes this issue.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-09-16T15:57:07.805416+00:00", "milestone": null, "updated_on": "2019-09-16T22:20:49.144449+00:00", "type": "issue", "id": 160}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/161/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/161.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/161/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/161/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/161/gazebo-is-publishing-wrong-camera-images"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/161/vote"}}, "reporter": {"display_name": "Jo HyunKuen", "uuid": "{a4fd3163-36ec-426c-afab-3b19f4f42db5}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Ba4fd3163-36ec-426c-afab-3b19f4f42db5%7D"}, "html": {"href": "https://bitbucket.org/%7Ba4fd3163-36ec-426c-afab-3b19f4f42db5%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/836d07ff2ab08b31463abf3e0af660d7d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJH-4.png"}}, "nickname": "Jo HyunKuen", "type": "user", "account_id": "5d81a0aec91f190c360b118e"}, "title": "Gazebo is publishing wrong camera images", "component": {"name": "ROS", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519935.json"}}}, "votes": 0, "watches": 0, "content": {"raw": "I cloned and built latest version of vrx and ran it with \u201croslaunch vrx\\_gazebo navigation\\_task.launch\u201d\r\n\r\nGazebo showed the world with ocean reflection well, but published wrong image for each camera topics.\r\n\r\nMy Gazebo is latest version\\(9.11.0\\) and previous version of vrx publishes camera image normally in same environment.\r\n\r\n\u200c\r\n\r\nprevious version :\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/2979576510-previous_ver.png)\r\n\u200c\r\n\r\nlatest version :\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/2510761269-update_ver.png)\r\n\u200c", "markup": "markdown", "html": "<p>I cloned and built latest version of vrx and ran it with \u201croslaunch vrx_gazebo navigation_task.launch\u201d</p>\n<p>Gazebo showed the world with ocean reflection well, but published wrong image for each camera topics.</p>\n<p>My Gazebo is latest version(9.11.0) and previous version of vrx publishes camera image normally in same environment.</p>\n<p>\u200c</p>\n<p>previous version :</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/2979576510-previous_ver.png\" />\n\u200c</p>\n<p>latest version :</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/2510761269-update_ver.png\" />\n\u200c</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-09-18T03:37:14.837366+00:00", "milestone": null, "updated_on": "2019-09-18T04:43:12.501896+00:00", "type": "issue", "id": 161}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/162/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/162.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/162/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/162/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/162/view-of-dock-symbols-in-fog-shows-all"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/162/vote"}}, "reporter": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "title": "View of dock symbols in fog shows all symbols superimposed", "component": {"name": "Rendering", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519938.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "When adding fog to the scene, the dock symbols have a ghosting artifact evident .\r\n\r\nHow to reproduce:\r\n\r\n1. In default branch run  `roslaunch vrx_gazebo dock.launch verbose:=true`\r\n\r\n    1. Should show a god\u2019s eye view that looks as expected  \r\n    \r\n        ![](data/bitbucket.org/repo/BgXLzgM/images/2201238068-Screenshot_from_2019-09-19_09-59-33.png)\r\n    \r\n        \r\n\r\n    \r\n    \r\n2. Switch to `sandisland_add_fog` branch which just adds fog to the sand island scene \\([#!/osrf/vrx/commits/98149819c5d3f42ac87ba2f4e92cace4d61d53df?at=sandisland\\_add\\_fog](#!/osrf/vrx/commits/98149819c5d3f42ac87ba2f4e92cace4d61d53df?at=sandisland_add_fog)\\)\r\n\r\n    1. re-make and re-run and now the GUI view looks like this..  \r\n    \r\n        ![](data/bitbucket.org/repo/BgXLzgM/images/4042719981-Screenshot_from_2019-09-19_10-01-49.png)\r\n    \r\n        \r\n\r\n    \r\n    2. I also verified that this superposition of the symbols shows up  in the camera perspective  \r\n    \r\n        ![](data/bitbucket.org/repo/BgXLzgM/images/202421732-Screenshot_from_2019-09-19_10-10-39.png)\r\n    \r\n\r\n\u200c\r\n\r\nFor the purposes of the VRX competition we could use simpler dock models that don\u2019t have all the placard symbols to see if that alleviates the problem.", "markup": "markdown", "html": "<p>When adding fog to the scene, the dock symbols have a ghosting artifact evident .</p>\n<p>How to reproduce:</p>\n<ol>\n<li>\n<p>In default branch run  <code>roslaunch vrx_gazebo dock.launch verbose:=true</code></p>\n<ol>\n<li>\n<p>Should show a god\u2019s eye view that looks as expected  </p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/2201238068-Screenshot_from_2019-09-19_09-59-33.png\" /></p>\n</li>\n</ol>\n</li>\n<li>\n<p>Switch to <code>sandisland_add_fog</code> branch which just adds fog to the sand island scene (<a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/98149819c5d3f42ac87ba2f4e92cace4d61d53df?at=sandisland_add_fog\" rel=\"nofollow\">#!/osrf/vrx/commits/98149819c5d3f42ac87ba2f4e92cace4d61d53df?at=sandisland_add_fog</a>)</p>\n<ol>\n<li>\n<p>re-make and re-run and now the GUI view looks like this..  </p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/4042719981-Screenshot_from_2019-09-19_10-01-49.png\" /></p>\n</li>\n<li>\n<p>I also verified that this superposition of the symbols shows up  in the camera perspective  </p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/202421732-Screenshot_from_2019-09-19_10-10-39.png\" /></p>\n</li>\n</ol>\n</li>\n</ol>\n<p>\u200c</p>\n<p>For the purposes of the VRX competition we could use simpler dock models that don\u2019t have all the placard symbols to see if that alleviates the problem.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-09-19T17:19:02.713477+00:00", "milestone": null, "updated_on": "2019-09-19T17:19:02.713477+00:00", "type": "issue", "id": 162}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/163/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/163.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/163/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/163/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/163/inconsistent-visual-placard-symbols"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/163/vote"}}, "reporter": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "title": "Inconsistent visual placard symbols.", "component": {"name": "Plugin", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519936.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Running the 2018 dock example: `roslaunch vrx_gazebo dock.launch verbose:=true`\r\n\r\nThe `vrx_gazebo/worlds/dock.world.xacro` specifies red\\_circle for bay1 and red\\_cross for bay2, but the dock shows up with blue\\_circle on both placards.\r\n\r\n* The world uses the static dock\\_2018 model. Changing the <color> and <shape> tags in the model.sdf.erb file can set the initial symbol values.\r\n* The shuffling functionality seems to work `rostopic pub /vrx/dock_2018_placard1/shuffle std_msgs/Empty \"{}\"`\r\n* Tried going back to [this commit](#!/osrf/vrx/commits/a29694cd3be48c771e59fbc5c30b9db8bd2a2e12) before reflections/refractions and recent dock tweaks, same behavior.\r\n* In the dock\\_2018/model.sdf.erb file, I set the PlacardPlugin <shuffle> tag to false.    Same behavior.\r\n\r\nMy understanding was that the ScanDockScoringPlugin::DockChecker objects should publish to the PlacardPlugin objects via Gazebo transport to be able to set the symbol \\(color\\+shape\\) to be consistent with the <symbol> tags in the <bay> elements - true?\r\n\r\n\u200c", "markup": "markdown", "html": "<p>Running the 2018 dock example: <code>roslaunch vrx_gazebo dock.launch verbose:=true</code></p>\n<p>The <code>vrx_gazebo/worlds/dock.world.xacro</code> specifies red_circle for bay1 and red_cross for bay2, but the dock shows up with blue_circle on both placards.</p>\n<ul>\n<li>The world uses the static dock_2018 model. Changing the &lt;color&gt; and &lt;shape&gt; tags in the model.sdf.erb file can set the initial symbol values.</li>\n<li>The shuffling functionality seems to work <code>rostopic pub /vrx/dock_2018_placard1/shuffle std_msgs/Empty \"{}\"</code></li>\n<li>Tried going back to <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/a29694cd3be48c771e59fbc5c30b9db8bd2a2e12\" rel=\"nofollow\">this commit</a> before reflections/refractions and recent dock tweaks, same behavior.</li>\n<li>In the dock_2018/model.sdf.erb file, I set the PlacardPlugin &lt;shuffle&gt; tag to false.    Same behavior.</li>\n</ul>\n<p>My understanding was that the ScanDockScoringPlugin::DockChecker objects should publish to the PlacardPlugin objects via Gazebo transport to be able to set the symbol (color+shape) to be consistent with the &lt;symbol&gt; tags in the &lt;bay&gt; elements - true?</p>\n<p>\u200c</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-09-19T18:10:29.583524+00:00", "milestone": null, "updated_on": "2019-09-19T18:25:24.716570+00:00", "type": "issue", "id": 163}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/164/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/164.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/164/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/164/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/164/dock-scoring-not-incrementing"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/164/vote"}}, "reporter": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "title": "Dock scoring not incrementing", "component": {"name": "Plugin", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519936.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Setup a simpler docking test in the `easier_dock_ex` branch.  The active/correct bay is the one right in front of the wamv.  Used teleop to drive wamv into the correct bay.\r\n\r\nScenario\r\n\r\n* roslaunch vrx\\_gazebo dock.launch verbose:=true\r\n* rostopic echo /vrx/task/info\r\n* roslaunch vrx\\_gazebo usv\\_joydrive.launch\r\n\r\n    * Use gamepad to drive wamv into bay\r\n    \r\n\r\nThe ScanDockPlugin detects that the wamv docks,  detects that it is the correct bay, and transitions the plugin to Finished state.\r\n\r\nThe published score does not appear to increment.  Default values for dockBonusPoints and correctDockBonusPoints \\([#!/osrf/vrx/src/default/vrx\\_gazebo/include/vrx\\_gazebo/scan\\_dock\\_scoring\\_plugin.hh](#!/osrf/vrx/src/default/vrx_gazebo/include/vrx_gazebo/scan_dock_scoring_plugin.hh)\\) are 10 points each, so expected that the last published score should be 20 points.\r\n\r\n\u200c\r\n\r\n\u200c", "markup": "markdown", "html": "<p>Setup a simpler docking test in the <code>easier_dock_ex</code> branch.  The active/correct bay is the one right in front of the wamv.  Used teleop to drive wamv into the correct bay.</p>\n<p>Scenario</p>\n<ul>\n<li>roslaunch vrx_gazebo dock.launch verbose:=true</li>\n<li>rostopic echo /vrx/task/info</li>\n<li>\n<p>roslaunch vrx_gazebo usv_joydrive.launch</p>\n<ul>\n<li>Use gamepad to drive wamv into bay</li>\n</ul>\n</li>\n</ul>\n<p>The ScanDockPlugin detects that the wamv docks,  detects that it is the correct bay, and transitions the plugin to Finished state.</p>\n<p>The published score does not appear to increment.  Default values for dockBonusPoints and correctDockBonusPoints (<a data-is-external-link=\"true\" href=\"#!/osrf/vrx/src/default/vrx_gazebo/include/vrx_gazebo/scan_dock_scoring_plugin.hh\" rel=\"nofollow\">#!/osrf/vrx/src/default/vrx_gazebo/include/vrx_gazebo/scan_dock_scoring_plugin.hh</a>) are 10 points each, so expected that the last published score should be 20 points.</p>\n<p>\u200c</p>\n<p>\u200c</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-09-19T19:55:59.179632+00:00", "milestone": null, "updated_on": "2019-10-04T05:28:11.819146+00:00", "type": "issue", "id": 164}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/165/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/165.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/165/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/165/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/165/scan-and-dock-example-announces-the"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/165/vote"}}, "reporter": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "title": "Scan and Dock Example Announces the Correct Docking Bay", "component": {"name": "Plugin", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519936.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "When running the example [Scan-and-Dock: Correct Dock Specified via Scan-the-Code](#!/osrf/vrx/wiki/tutorials/vrx_tasks_2019#markdown-header-6-scan-and-dock-correct-dock-specified-via-scan-the-code), the correct docking bay is published as a ROS topic `rostopic echo /vrx/scan_dock/placard_symbol`\r\n\r\nFor the competition, the task requires inferring the correct docking bay placard based on the light buoy sequence.  How do we plan to prevent the ROS publication?", "markup": "markdown", "html": "<p>When running the example <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/wiki/tutorials/vrx_tasks_2019#markdown-header-6-scan-and-dock-correct-dock-specified-via-scan-the-code\" rel=\"nofollow\">Scan-and-Dock: Correct Dock Specified via Scan-the-Code</a>, the correct docking bay is published as a ROS topic <code>rostopic echo /vrx/scan_dock/placard_symbol</code></p>\n<p>For the competition, the task requires inferring the correct docking bay placard based on the light buoy sequence.  How do we plan to prevent the ROS publication?</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-09-21T00:45:08.650962+00:00", "milestone": null, "updated_on": "2020-04-10T04:02:14.891776+00:00", "type": "issue", "id": 165}, {"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/166/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/166.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/166/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/166/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/166/first-sequence-of-light-buoy-is-not-synced"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/166/vote"}}, "reporter": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "title": "First sequence of light buoy is not synced with scan_dock_scoring plugin", "component": {"name": "Plugin", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519936.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Within the scan\\_dock\\_scoring plugin includes ability to set light buoy color sequence by specifying color\\_1, color\\_2 and color\\_3 parameters.  The expected sequence is published to the light\\_buoy plugin via gazebo transport - see the OnRunning\\(\\) function in scan\\_dock\\_scoring\\_plugin.cc.  \r\n\r\nBecause the correct color sequence isn\u2019t published until the transition to OnRunning, the sequence defined the the model is used until then.  This will be confusing for teams since they will see one sequence during initialization and ready phases and then the sequence will change.\r\n\r\nHow to reproduce:\r\n\r\n`roslaunch vrx_gazebo scan_and_dock.launch verbose:=true extra_gazebo_args:=\"--pause\"`\r\n\r\nYou will see that the initial sequence is R-G-B as defined in models/robotx\\_light\\_buoy/model.sdf.  When the scoring plugin transitions to Ready, then the sequence switches to B-G-R as defined in  worlds/scan\\_and\\_docl.world.xacro\r\n\r\nOptions include\r\n\r\n1. Do nothing and expect the teams to monitor the state information in the ROS API.  \r\n2. Have the scan\\_dock\\_scoring\\_plugin push the correct sequence to the light buoy on initialization.  Teams still wouldn\u2019t be able to score anything, but would avoid changing the sequence.\r\n3. Change the default sequence defined in the robotx\\_light\\_buoy model.sdf \\(and modify the light\\_buoy\\_plugin\\) so that the buoy is \u201coff\u201d until the correct sequence is published.\r\n\r\n\u200c", "markup": "markdown", "html": "<p>Within the scan_dock_scoring plugin includes ability to set light buoy color sequence by specifying color_1, color_2 and color_3 parameters.  The expected sequence is published to the light_buoy plugin via gazebo transport - see the OnRunning() function in scan_dock_scoring_plugin.cc.  </p>\n<p>Because the correct color sequence isn\u2019t published until the transition to OnRunning, the sequence defined the the model is used until then.  This will be confusing for teams since they will see one sequence during initialization and ready phases and then the sequence will change.</p>\n<p>How to reproduce:</p>\n<p><code>roslaunch vrx_gazebo scan_and_dock.launch verbose:=true extra_gazebo_args:=\"--pause\"</code></p>\n<p>You will see that the initial sequence is R-G-B as defined in models/robotx_light_buoy/model.sdf.  When the scoring plugin transitions to Ready, then the sequence switches to B-G-R as defined in  worlds/scan_and_docl.world.xacro</p>\n<p>Options include</p>\n<ol>\n<li>Do nothing and expect the teams to monitor the state information in the ROS API.  </li>\n<li>Have the scan_dock_scoring_plugin push the correct sequence to the light buoy on initialization.  Teams still wouldn\u2019t be able to score anything, but would avoid changing the sequence.</li>\n<li>Change the default sequence defined in the robotx_light_buoy model.sdf (and modify the light_buoy_plugin) so that the buoy is \u201coff\u201d until the correct sequence is published.</li>\n</ol>\n<p>\u200c</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-09-21T02:38:37.493774+00:00", "milestone": null, "updated_on": "2019-09-28T00:35:59.832880+00:00", "type": "issue", "id": 166}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/167/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/167.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/167/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/167/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/167/refining-usv_gazebo_dynamics_plugin-model"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/167/vote"}}, "reporter": null, "title": "Refining usv_gazebo_dynamics_plugin model", "component": null, "votes": 0, "watches": null, "content": {"raw": "Hi, \r\n\r\nI noticed in the calculation of the buoyancy force in usv_gazebo_dynamics that the force saturates when deltaZ = hullRadius. \r\n\r\nHowever, in the wamv model, the pontoons are simulated as cylinders instead of half cylinders. Hence, would the calculation of buoyancy force saturate when the entire cylinder is submerged, instead of when half the cylinder is submerged? \r\n\r\nSeparately, could I check what the parameter hullRadius refers to specifically? (i.e. radius of each pontoon)? \r\n\r\nThis is because I noticed also that the buoyancy force calculates the upthrust for a single pontoon instead of 2 pontoons, as shown in the wamv model", "markup": "markdown", "html": "<p>Hi, </p>\n<p>I noticed in the calculation of the buoyancy force in usv_gazebo_dynamics that the force saturates when deltaZ = hullRadius. </p>\n<p>However, in the wamv model, the pontoons are simulated as cylinders instead of half cylinders. Hence, would the calculation of buoyancy force saturate when the entire cylinder is submerged, instead of when half the cylinder is submerged? </p>\n<p>Separately, could I check what the parameter hullRadius refers to specifically? (i.e. radius of each pontoon)? </p>\n<p>This is because I noticed also that the buoyancy force calculates the upthrust for a single pontoon instead of 2 pontoons, as shown in the wamv model</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-09-22T06:18:52.818934+00:00", "milestone": null, "updated_on": "2019-09-25T05:31:56.937791+00:00", "type": "issue", "id": 167}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/168/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/168.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/168/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/168/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/168/usv-dynamic-plugin-buoyancy-calculation"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/168/vote"}}, "reporter": null, "title": "USV Dynamic plugin buoyancy calculation", "component": {"name": "Plugin", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519936.json"}}}, "votes": 0, "watches": null, "content": {"raw": "Hi, \r\n\r\nCurrently I have 2 links in the WAMV model - base_link, and a buoyancy_link. the buoyancy_link is aligned with the z axis of the skis, while base_link is an arbitrary reference. None of the frames are located at the center of mass. After varying the bodyName from base_link to buoyancy_link in the usv_gazebo_dynamics plugin, I noticed that this does not change the equilibrium position of the WAMV. Could I check if the position of the WAMV used to calculate the upthrust depends on the position of the these links? \r\n\r\nOtherwise, which frame is being passed to the usv_gazebo_plugin to calculate the upthrust?", "markup": "markdown", "html": "<p>Hi, </p>\n<p>Currently I have 2 links in the WAMV model - base_link, and a buoyancy_link. the buoyancy_link is aligned with the z axis of the skis, while base_link is an arbitrary reference. None of the frames are located at the center of mass. After varying the bodyName from base_link to buoyancy_link in the usv_gazebo_dynamics plugin, I noticed that this does not change the equilibrium position of the WAMV. Could I check if the position of the WAMV used to calculate the upthrust depends on the position of the these links? </p>\n<p>Otherwise, which frame is being passed to the usv_gazebo_plugin to calculate the upthrust?</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-09-22T09:09:02.563233+00:00", "milestone": null, "updated_on": "2019-09-22T09:09:02.563233+00:00", "type": "issue", "id": 168}, {"priority": "major", "kind": "task", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/169/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/169.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/169/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/169/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/169/uploading-txt-file-for-phase-1"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/169/vote"}}, "reporter": {"display_name": "Jordan", "uuid": "{bfdac9c9-5c45-4a84-ba05-5330dcd386ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbfdac9c9-5c45-4a84-ba05-5330dcd386ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bbfdac9c9-5c45-4a84-ba05-5330dcd386ef%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/74d1d61bab6b67518350edd5b31a4290d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJ-6.png"}}, "nickname": "Jordan", "type": "user", "account_id": "5d84414e01e2cb0c301ffa85"}, "title": "Uploading .txt file for Phase 1", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I do not know how to create the .txt file required for the Phase 1 hello world submission. I had followed the submission process on the wiki [#!/osrf/vrx/wiki/submission\\_process](#!/osrf/vrx/wiki/submission_process) but what I uploaded was a .mp4 file. Is there an in between step for creating the .txt file that I missed? Could someone please point me in the right direction? Thank you.", "markup": "markdown", "html": "<p>I do not know how to create the .txt file required for the Phase 1 hello world submission. I had followed the submission process on the wiki <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/wiki/submission_process\" rel=\"nofollow\">#!/osrf/vrx/wiki/submission_process</a> but what I uploaded was a .mp4 file. Is there an in between step for creating the .txt file that I missed? Could someone please point me in the right direction? Thank you.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-09-22T23:30:03.847854+00:00", "milestone": null, "updated_on": "2019-09-25T05:22:29.494321+00:00", "type": "issue", "id": 169}, {"priority": "minor", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/170/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/170.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/170/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/170/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/170/automated-evaluation-parameters-that-can"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/170/vote"}}, "reporter": {"display_name": "Hashir Zahir", "uuid": "{0033cdb9-ea6e-4c6a-a9ad-d462a485643d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0033cdb9-ea6e-4c6a-a9ad-d462a485643d%7D"}, "html": {"href": "https://bitbucket.org/%7B0033cdb9-ea6e-4c6a-a9ad-d462a485643d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/3c71628af17207fad1dd0ea6280b41f1d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsHZ-5.png"}}, "nickname": "hzahir", "type": "user", "account_id": "557058:6b6463b7-2835-47c7-8c22-fdef36e9e325"}, "title": "Automated Evaluation Parameters that can be changed", "component": {"name": "Docker", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519937.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "I have been reading the automated evaluation submission guide on [#!/osrf/vrx-docker/src/default/](#!/osrf/vrx-docker/src/default/). It mentions that 3 files need to be submitted for it to be considered for automatic evaluation; `sensor_config.yaml`, `thruster_config.yaml` and `dockerhub_image.txt`. The generate\\_wamv script is used to automatically build the wamv urdf from `sensor_config.yaml` and`thruster_config.yaml`. However, can the generate\\_wamv launch file and all other urdf generating xacro files be modified and submitted for submission? Since things like thruster forces in Newton, TF frame name for sensors and camera topic for images are all given default values in the urdf; files other than the `sensor_config.yaml` and`thruster_config.yaml` have to be modified so that the thruster forces and respective topic names are compatible to work with our codebase. Is this something we are allowed to do for the submission? Thanks.", "markup": "markdown", "html": "<p>I have been reading the automated evaluation submission guide on <a data-is-external-link=\"true\" href=\"#!/osrf/vrx-docker/src/default/\" rel=\"nofollow\">#!/osrf/vrx-docker/src/default/</a>. It mentions that 3 files need to be submitted for it to be considered for automatic evaluation; <code>sensor_config.yaml</code>, <code>thruster_config.yaml</code> and <code>dockerhub_image.txt</code>. The generate_wamv script is used to automatically build the wamv urdf from <code>sensor_config.yaml</code> and<code>thruster_config.yaml</code>. However, can the generate_wamv launch file and all other urdf generating xacro files be modified and submitted for submission? Since things like thruster forces in Newton, TF frame name for sensors and camera topic for images are all given default values in the urdf; files other than the <code>sensor_config.yaml</code> and<code>thruster_config.yaml</code> have to be modified so that the thruster forces and respective topic names are compatible to work with our codebase. Is this something we are allowed to do for the submission? Thanks.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-09-24T03:06:15.776890+00:00", "milestone": null, "updated_on": "2019-09-25T16:15:52.510701+00:00", "type": "issue", "id": 170}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/171/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/171.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/171/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/171/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/171/docking-activation-zone-improvement"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/171/vote"}}, "reporter": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "title": "Docking activation zone improvement", "component": {"name": "Plugin", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519936.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Currently in vrx\\_gazebo/worlds/dock.world.xacro the activiation zone visualization is done by hand in gazebo coordinates.\r\n\r\n* Make visuals linked to docks so they are specified in dock coordinates\r\n* Create xacro parameters to to specify size of activation zones for both the visualization and the plugin parameters in the same place.\r\n\r\n\u200c", "markup": "markdown", "html": "<p>Currently in vrx_gazebo/worlds/dock.world.xacro the activiation zone visualization is done by hand in gazebo coordinates.</p>\n<ul>\n<li>Make visuals linked to docks so they are specified in dock coordinates</li>\n<li>Create xacro parameters to to specify size of activation zones for both the visualization and the plugin parameters in the same place.</li>\n</ul>\n<p>\u200c</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-09-28T00:39:13.100841+00:00", "milestone": null, "updated_on": "2019-10-04T05:26:37.511368+00:00", "type": "issue", "id": 171}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/172/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/172.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/172/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/172/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/172/phase-2-deliverable"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/172/vote"}}, "reporter": {"display_name": "Hashir Zahir", "uuid": "{0033cdb9-ea6e-4c6a-a9ad-d462a485643d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0033cdb9-ea6e-4c6a-a9ad-d462a485643d%7D"}, "html": {"href": "https://bitbucket.org/%7B0033cdb9-ea6e-4c6a-a9ad-d462a485643d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/3c71628af17207fad1dd0ea6280b41f1d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsHZ-5.png"}}, "nickname": "hzahir", "type": "user", "account_id": "557058:6b6463b7-2835-47c7-8c22-fdef36e9e325"}, "title": "Phase 2 Deliverable", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Hi, just wanted to check. What is the exact deliverable for phase 2 and will all teams make it for the final phase 3? I checked the [#!/osrf/vrx/wiki/events/19/dress\\_rehearsal](#!/osrf/vrx/wiki/events/19/dress_rehearsal) but it only says to submit the dockerfile and the 2 yaml files. Is there any scoring that takes place in phase 2 that will be counted for the final score too? Thanks for the help!", "markup": "markdown", "html": "<p>Hi, just wanted to check. What is the exact deliverable for phase 2 and will all teams make it for the final phase 3? I checked the <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/wiki/events/19/dress_rehearsal\" rel=\"nofollow\">#!/osrf/vrx/wiki/events/19/dress_rehearsal</a> but it only says to submit the dockerfile and the 2 yaml files. Is there any scoring that takes place in phase 2 that will be counted for the final score too? Thanks for the help!</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-10-02T09:16:13.205599+00:00", "milestone": null, "updated_on": "2019-10-04T20:03:17.717587+00:00", "type": "issue", "id": 172}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/173/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/173.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/173/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/173/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/173/enu-to-ned-issues"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/173/vote"}}, "reporter": {"display_name": "Hashir Zahir", "uuid": "{0033cdb9-ea6e-4c6a-a9ad-d462a485643d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0033cdb9-ea6e-4c6a-a9ad-d462a485643d%7D"}, "html": {"href": "https://bitbucket.org/%7B0033cdb9-ea6e-4c6a-a9ad-d462a485643d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/3c71628af17207fad1dd0ea6280b41f1d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsHZ-5.png"}}, "nickname": "hzahir", "type": "user", "account_id": "557058:6b6463b7-2835-47c7-8c22-fdef36e9e325"}, "title": "ENU to NED Issues", "component": {"name": "Plugin", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519936.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Hi, I understand that the IMU sensor plugin outputs in ENU format. Internally, our codebase uses NED format so we have tried to invert the IMU plugin by inverting the quaternion \\(w \\*= -1\\). While this seemed to work for the controls module \\(moving the vehicle around from waypoint to waypoint\\), it seems to mess with other parts with our codebase such as the costmap we generate for obstacle avoidance. Moving the wamv forward seems to move the costmap and vehicle to the left while visualizing in RVIZ. The same behavior occurs even when utilizing the open source cost map solution \u201ccostmap\\_2d\u201d. I suspect it has to do with the transforms in which x and y are swapped from base\\_link due to ENU convention. Is there any clean way to interface with the VRX plugin such that internally our codebase can maintain the NED convention? Any help is appreciated.", "markup": "markdown", "html": "<p>Hi, I understand that the IMU sensor plugin outputs in ENU format. Internally, our codebase uses NED format so we have tried to invert the IMU plugin by inverting the quaternion (w *= -1). While this seemed to work for the controls module (moving the vehicle around from waypoint to waypoint), it seems to mess with other parts with our codebase such as the costmap we generate for obstacle avoidance. Moving the wamv forward seems to move the costmap and vehicle to the left while visualizing in RVIZ. The same behavior occurs even when utilizing the open source cost map solution \u201ccostmap_2d\u201d. I suspect it has to do with the transforms in which x and y are swapped from base_link due to ENU convention. Is there any clean way to interface with the VRX plugin such that internally our codebase can maintain the NED convention? Any help is appreciated.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-10-06T11:20:54.520994+00:00", "milestone": null, "updated_on": "2019-10-17T18:43:34.821452+00:00", "type": "issue", "id": 173}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/174/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/174.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/174/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/174/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/174/wayfinding-scoring-plugin-misses-first"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/174/vote"}}, "reporter": {"display_name": "Hashir Zahir", "uuid": "{0033cdb9-ea6e-4c6a-a9ad-d462a485643d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0033cdb9-ea6e-4c6a-a9ad-d462a485643d%7D"}, "html": {"href": "https://bitbucket.org/%7B0033cdb9-ea6e-4c6a-a9ad-d462a485643d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/3c71628af17207fad1dd0ea6280b41f1d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsHZ-5.png"}}, "nickname": "hzahir", "type": "user", "account_id": "557058:6b6463b7-2835-47c7-8c22-fdef36e9e325"}, "title": "Wayfinding Scoring Plugin Misses First Waypoint", "component": {"name": "Plugin", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519936.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Hi, I was trying out the wayfinding\\_task world under vrx\\_gazebo which has 3 waypoints, with the first one being very close to the starting position of the WAMV. Once the waypoints arrive, my code executes and reaches the first waypoint in a very short amount of time \\(less than 10 seconds\\). However, checking the /vrx/wayfinding/min\\_errors and mean\\_error topic shows that no score has been computed yet. Immediately after achieving the first goal, my code targets the second waypoint and approaches it. While continuing to monitor the /vrx/wayfinding/min\\_errors topic, I notice that it only starts publishing data once the WAMV has travelled more than 10 meters away from the first waypoint as the min\\_error now reads : \\[10,160, 160\\]. After completion of the entire task, the min error reads something like \\[10,2,2\\]. This leads me to conclude that the scoring plugin only starts some time after the waypoints are provided. I have only tested against the wayfinding\\_task world but have not yet tried the new automated testing worlds that you guys have put up for phase 2. But I guess it is unlikely that this will affect anything for phase 2 if the first waypoint is not very near the start position of the WAMV. Just something to note.", "markup": "markdown", "html": "<p>Hi, I was trying out the wayfinding_task world under vrx_gazebo which has 3 waypoints, with the first one being very close to the starting position of the WAMV. Once the waypoints arrive, my code executes and reaches the first waypoint in a very short amount of time (less than 10 seconds). However, checking the /vrx/wayfinding/min_errors and mean_error topic shows that no score has been computed yet. Immediately after achieving the first goal, my code targets the second waypoint and approaches it. While continuing to monitor the /vrx/wayfinding/min_errors topic, I notice that it only starts publishing data once the WAMV has travelled more than 10 meters away from the first waypoint as the min_error now reads : [10,160, 160]. After completion of the entire task, the min error reads something like [10,2,2]. This leads me to conclude that the scoring plugin only starts some time after the waypoints are provided. I have only tested against the wayfinding_task world but have not yet tried the new automated testing worlds that you guys have put up for phase 2. But I guess it is unlikely that this will affect anything for phase 2 if the first waypoint is not very near the start position of the WAMV. Just something to note.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-10-06T18:34:11.385782+00:00", "milestone": null, "updated_on": "2019-10-08T18:48:05.532890+00:00", "type": "issue", "id": 174}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/175/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/175.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/175/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/175/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/175/maxcmd-not-remapping-causing-vehicle-to"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/175/vote"}}, "reporter": null, "title": "maxCmd not remapping causing vehicle to flail", "component": {"name": "Plugin", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519936.json"}}}, "votes": 0, "watches": null, "content": {"raw": "Hi, I noticed that my parameter <maxCmd> did not remap in the thruster model, as even at 10% thrust (max cmd = 1000, cmd = 100), the thruster started to spin about the main axis. I then noticed this was due to this line in SpinPropeller in usv_gazebo_thrust_plugin.cc: \r\neffort = (this->thrusters[_i].currCmd / kMaxInput) * kMaxEffort;\r\n\r\nkMaxInput was set to 1.0 and was thus constant regardless of maxCmd.", "markup": "markdown", "html": "<p>Hi, I noticed that my parameter &lt;maxCmd&gt; did not remap in the thruster model, as even at 10% thrust (max cmd = 1000, cmd = 100), the thruster started to spin about the main axis. I then noticed this was due to this line in SpinPropeller in usv_gazebo_thrust_plugin.cc: \neffort = (this-&gt;thrusters[_i].currCmd / kMaxInput) * kMaxEffort;</p>\n<p>kMaxInput was set to 1.0 and was thus constant regardless of maxCmd.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-10-12T10:12:55.159258+00:00", "milestone": null, "updated_on": "2019-10-30T05:18:47.981295+00:00", "type": "issue", "id": 175}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/176/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/176.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/176/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/176/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/176/dockerhub-osrf-vrx-image-not-able-to-pull"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/176/vote"}}, "reporter": {"display_name": "Jordan", "uuid": "{bfdac9c9-5c45-4a84-ba05-5330dcd386ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbfdac9c9-5c45-4a84-ba05-5330dcd386ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bbfdac9c9-5c45-4a84-ba05-5330dcd386ef%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/74d1d61bab6b67518350edd5b31a4290d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJ-6.png"}}, "nickname": "Jordan", "type": "user", "account_id": "5d84414e01e2cb0c301ffa85"}, "title": "DockerHub osrf/vrx image not able to pull", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I am trying to pull the base docker image from [https://hub.docker.com/r/osrf/vrx](https://hub.docker.com/r/osrf/vrx) with the terminal command:\r\n\r\n\u201cdocker pull osrf/vrx\u201d \r\n\r\nBut I am getting the error:\r\n\r\n\u201cError response from daemon: manifest for osrf/vrx:latest not found: manifest unknown: manifest unknown\u201d\r\n\r\nIs there something I am missing?", "markup": "markdown", "html": "<p>I am trying to pull the base docker image from <a data-is-external-link=\"true\" href=\"https://hub.docker.com/r/osrf/vrx\" rel=\"nofollow\">https://hub.docker.com/r/osrf/vrx</a> with the terminal command:</p>\n<p>\u201cdocker pull <a href=\"#!/osrf/vrx\" rel=\"nofollow\" class=\"ap-connect-link\">osrf/vrx</a>\u201d </p>\n<p>But I am getting the error:</p>\n<p>\u201cError response from daemon: manifest for <a href=\"#!/osrf/vrx\" rel=\"nofollow\" class=\"ap-connect-link\">osrf/vrx</a>:latest not found: manifest unknown: manifest unknown\u201d</p>\n<p>Is there something I am missing?</p>", "type": "rendered"}, "assignee": null, "state": "invalid", "version": null, "edited_on": null, "created_on": "2019-10-16T00:08:31.882218+00:00", "milestone": null, "updated_on": "2019-10-18T20:00:20.665079+00:00", "type": "issue", "id": 176}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/177/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/177.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/177/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/177/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/177/holonomic-configuration-unable-to-control"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/177/vote"}}, "reporter": {"display_name": "Jordan", "uuid": "{bfdac9c9-5c45-4a84-ba05-5330dcd386ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbfdac9c9-5c45-4a84-ba05-5330dcd386ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bbfdac9c9-5c45-4a84-ba05-5330dcd386ef%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/74d1d61bab6b67518350edd5b31a4290d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJ-6.png"}}, "nickname": "Jordan", "type": "user", "account_id": "5d84414e01e2cb0c301ffa85"}, "title": "Holonomic configuration unable to control using keyboard", "component": null, "votes": 0, "watches": 1, "content": {"raw": "I plan to use a holonomic configuration for the competition but am unable to control it with the keyboard commands from `roslaunch vrx_gazebo usv_keydrive.launch`\r\n\r\nI have also tried running the existing holonomic config  `roslaunch vrx_gazebo sandisland.launch thrust_config:=X`  with the usv keyboard command but with no luck.", "markup": "markdown", "html": "<p>I plan to use a holonomic configuration for the competition but am unable to control it with the keyboard commands from <code>roslaunch vrx_gazebo usv_keydrive.launch</code></p>\n<p>I have also tried running the existing holonomic config  <code>roslaunch vrx_gazebo sandisland.launch thrust_config:=X</code>  with the usv keyboard command but with no luck.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-10-19T03:37:19.866090+00:00", "milestone": null, "updated_on": "2019-10-30T05:18:15.211074+00:00", "type": "issue", "id": 177}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/178/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/178.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/178/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/178/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/178/consider-offering-optional-docker-command"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/178/vote"}}, "reporter": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "title": "Consider offering optional docker command line arguments to teams", "component": {"name": "Docker", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519937.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "See this [vrx-events PR](#!/osrf/vrx-events/pull-requests/36/2019-rehearsal-team_nirom/diff).\r\n\r\nFor Phase 3 should we create functionality for VRX teams to specify optional docker command line arguments when running their solutions?", "markup": "markdown", "html": "<p>See this <a data-is-external-link=\"true\" href=\"#!/osrf/vrx-events/pull-requests/36/2019-rehearsal-team_nirom/diff\" rel=\"nofollow\">vrx-events PR</a>.</p>\n<p>For Phase 3 should we create functionality for VRX teams to specify optional docker command line arguments when running their solutions?</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-10-22T16:16:12.324859+00:00", "milestone": null, "updated_on": "2019-10-24T16:18:34.363161+00:00", "type": "issue", "id": 178}, {"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/179/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/179.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/179/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/179/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/179/use-of-p3d-plugin-in-competition"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/179/vote"}}, "reporter": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "title": "Use of P3D plugin in competition", "component": {"name": "Plugin", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519936.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Going through the submissions for Phase 2, I noticed that the teams include the P3D plugin in their sensor\\_config.yaml file. The P3D plugin provides a ROS published ground truth - true, noiseless pose information from Gazebo.\r\n\r\nThis \"sensor\" is not included in the Technical Guide, but in [Sensor Configuration Wiki](#!/osrf/vrx/wiki/tutorials/Creating%20a%20custom%20WAM-V%20Thruster%20and%20Sensor%20Configuration%20For%20Competition) it points to the [numeric.yaml](#!/osrf/vrx/src/default/vrx_gazebo/src/vrx_gazebo_python/generator_scripts/wamv_config/sensor_compliance/numeric.yaml) file which could be interpreted to suggest that a sensor configuration that includes one p3d sensor is compliant.\r\n\r\nDuring scoring evaluation do we prevent the P3D publications from Gazebo from making it to the team's container - or are they currently allowed to subscribe to ground truth?", "markup": "markdown", "html": "<p>Going through the submissions for Phase 2, I noticed that the teams include the P3D plugin in their sensor_config.yaml file. The P3D plugin provides a ROS published ground truth - true, noiseless pose information from Gazebo.</p>\n<p>This \"sensor\" is not included in the Technical Guide, but in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/wiki/tutorials/Creating%20a%20custom%20WAM-V%20Thruster%20and%20Sensor%20Configuration%20For%20Competition\" rel=\"nofollow\">Sensor Configuration Wiki</a> it points to the <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/src/default/vrx_gazebo/src/vrx_gazebo_python/generator_scripts/wamv_config/sensor_compliance/numeric.yaml\" rel=\"nofollow\">numeric.yaml</a> file which could be interpreted to suggest that a sensor configuration that includes one p3d sensor is compliant.</p>\n<p>During scoring evaluation do we prevent the P3D publications from Gazebo from making it to the team's container - or are they currently allowed to subscribe to ground truth?</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-10-22T18:15:03.422243+00:00", "milestone": null, "updated_on": "2019-10-24T15:57:10.392824+00:00", "type": "issue", "id": 179}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/180/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/180.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/180/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/180/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/180/task-3-object-localization"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/180/vote"}}, "reporter": {"display_name": "Jordan", "uuid": "{bfdac9c9-5c45-4a84-ba05-5330dcd386ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbfdac9c9-5c45-4a84-ba05-5330dcd386ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bbfdac9c9-5c45-4a84-ba05-5330dcd386ef%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/74d1d61bab6b67518350edd5b31a4290d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJ-6.png"}}, "nickname": "Jordan", "type": "user", "account_id": "5d84414e01e2cb0c301ffa85"}, "title": "Task 3 Object localization", "component": null, "votes": 0, "watches": 0, "content": {"raw": "In the task description pdf, task 3 says \u201cTeams report their estimated location \\(latitude and longitude\\) of a detected object.\u201d \r\n\r\nDoes this mean we are publishing the coordinates of the bounding boxes that identify the object or do we need to publish the location of the object in terms of where it is in the environment?", "markup": "markdown", "html": "<p>In the task description pdf, task 3 says \u201cTeams report their estimated location (latitude and longitude) of a detected object.\u201d </p>\n<p>Does this mean we are publishing the coordinates of the bounding boxes that identify the object or do we need to publish the location of the object in terms of where it is in the environment?</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-10-24T07:34:43.051309+00:00", "milestone": null, "updated_on": "2019-10-26T08:47:03.832359+00:00", "type": "issue", "id": 180}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/181/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/181.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/181/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/181/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/181/docker-container-failed-to-launch"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/181/vote"}}, "reporter": {"display_name": "Jordan", "uuid": "{bfdac9c9-5c45-4a84-ba05-5330dcd386ef}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbfdac9c9-5c45-4a84-ba05-5330dcd386ef%7D"}, "html": {"href": "https://bitbucket.org/%7Bbfdac9c9-5c45-4a84-ba05-5330dcd386ef%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/74d1d61bab6b67518350edd5b31a4290d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJ-6.png"}}, "nickname": "Jordan", "type": "user", "account_id": "5d84414e01e2cb0c301ffa85"}, "title": "Docker container failed to launch sandisland.launch file", "component": {"name": "Docker", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519937.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "When I run `roslaunch vrx_gazebo sandisland.launch` inside of the osrf/vrx docker container I get an error saying \u201cFailed to connect to master\u2026\u201d.\r\n\r\n\\[Msg\\] Waiting for master.  \r\n\\[ INFO\\] \\[1572050666.288746128\\]: waitForService: Service \\[/gazebo\\_gui/set\\_physics\\_properties\\] has not been advertised, waiting...  \r\n\\[gazebo-2\\] process has died \\[pid 707, exit code 134, cmd /opt/ros/melodic/lib/gazebo\\_ros/gzserver --verbose -e ode /home/developer/vrx\\_ws/devel/share/vrx\\_gazebo/worlds/stationkeeping\\_task.world \\_\\_name:=gazebo \\_\\_log:=/home/developer/.ros/log/c0bc0cf0-f789-11e9-ba39-0242ac110002/gazebo-2.log\\].  \r\nlog file: /home/developer/.ros/log/c0bc0cf0-f789-11e9-ba39-0242ac110002/gazebo-2\\*.log  \r\nprocess\\[spawn\\_model-4\\]: started with pid \\[776\\]  \r\nthe rosdep view is empty: call 'sudo rosdep init' and 'rosdep update'  \r\n\\[Err\\] \\[[ConnectionManager.cc:119](http://ConnectionManager.cc:119)\\] Failed to connect to master in 30 seconds.  \r\n\\[Err\\] \\[gazebo\\_shared.cc:83\\] Unable to initialize transport.  \r\n\\[Err\\] \\[gazebo\\_client.cc:62\\] Unable to setup Gazebo", "markup": "markdown", "html": "<p>When I run <code>roslaunch vrx_gazebo sandisland.launch</code> inside of the <a href=\"#!/osrf/vrx\" rel=\"nofollow\" class=\"ap-connect-link\">osrf/vrx</a> docker container I get an error saying \u201cFailed to connect to master\u2026\u201d.</p>\n<p>[Msg] Waiting for master.<br />\n[ INFO] [<a href=\"#!/osrf/vrx/commits/1572050666\" rel=\"nofollow\" class=\"ap-connect-link\">1572050666</a>.<a href=\"#!/osrf/vrx/commits/288746128\" rel=\"nofollow\" class=\"ap-connect-link\">288746128</a>]: waitForService: Service [/gazebo_gui/set_physics_properties] has not been advertised, waiting...<br />\n[gazebo-2] process has died [pid 707, exit code 134, cmd /opt/ros/melodic/lib/gazebo_ros/gzserver --verbose -e ode /home/developer/vrx_ws/devel/share/vrx_gazebo/worlds/stationkeeping_task.world __name:=gazebo __log:=/home/developer/.ros/log/c0bc0cf0-f789-11e9-ba39-0242ac110002/gazebo-2.log].<br />\nlog file: /home/developer/.ros/log/c0bc0cf0-f789-11e9-ba39-0242ac110002/gazebo-2*.log<br />\nprocess[spawn_model-4]: started with pid [776]<br />\nthe rosdep view is empty: call 'sudo rosdep init' and 'rosdep update'<br />\n[Err] [<a data-is-external-link=\"true\" href=\"http://ConnectionManager.cc:119\" rel=\"nofollow\">ConnectionManager.cc:119</a>] Failed to connect to master in 30 seconds.<br />\n[Err] [gazebo_shared.cc:83] Unable to initialize transport.<br />\n[Err] [gazebo_client.cc:62] Unable to setup Gazebo</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-10-26T01:00:43.413343+00:00", "milestone": null, "updated_on": "2020-04-10T07:19:04.210535+00:00", "type": "issue", "id": 181}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/182/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/182.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/182/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/182/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/182/stationkeeping-score-is-nan"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/182/vote"}}, "reporter": {"display_name": "Coline Ramee", "uuid": "{cb901d74-cf3c-4449-87cd-540bec8d3bf9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcb901d74-cf3c-4449-87cd-540bec8d3bf9%7D"}, "html": {"href": "https://bitbucket.org/%7Bcb901d74-cf3c-4449-87cd-540bec8d3bf9%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7db065445c12ad58c321101bad53506fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCR-4.png"}}, "nickname": "Coline Ramee", "type": "user", "account_id": "5d6fc502522f790d9c772865"}, "title": "Stationkeeping score is nan", "component": null, "votes": 0, "watches": 1, "content": {"raw": "We launch the stationkeeping task using `roslaunch vrx_gazebo vrx.launch verbose:=true paused:=false wamv_locked:=true world:=${HOME}/vrx_ws/src/vrx/vrx_gazebo/worlds/${WORLD}`. Once in running mode the score is nan in vrx/task/info, so is /vrx/station\\_keeping/rms\\_error. Everything else appears to be working, including  /vrx/station\\_keeping/pose\\_error.", "markup": "markdown", "html": "<p>We launch the stationkeeping task using <code>roslaunch vrx_gazebo vrx.launch verbose:=true paused:=false wamv_locked:=true world:=${HOME}/vrx_ws/src/vrx/vrx_gazebo/worlds/${WORLD}</code>. Once in running mode the score is nan in vrx/task/info, so is /vrx/station_keeping/rms_error. Everything else appears to be working, including  /vrx/station_keeping/pose_error.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-10-29T20:30:31.703730+00:00", "milestone": null, "updated_on": "2019-11-05T17:44:55.689173+00:00", "type": "issue", "id": 182}, {"priority": "critical", "kind": "task", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/183/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/183.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/183/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/183/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/183/wamv-inertia"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/183/vote"}}, "reporter": {"display_name": "Paul Dhillon", "uuid": "{050ec8bc-dc56-4758-a4ec-b1b96325b077}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B050ec8bc-dc56-4758-a4ec-b1b96325b077%7D"}, "html": {"href": "https://bitbucket.org/%7B050ec8bc-dc56-4758-a4ec-b1b96325b077%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d2bfd5c1762ea3ab00e9da2e7ee4218ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsPD-0.png"}}, "nickname": "Paul Dhillon", "type": "user", "account_id": "5d936eeb0c2a5d0dd87b02d0"}, "title": "Wamv Inertia", "component": {"name": "Model", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519934.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "Hi, is there another way to dynamically change the properties of the boat in Gazebo? I tried using \u2018rosservice call set\\_link\\_parameters\u2019 and it updates the parameter field in Gazebo but the effect doesn\u2019t actually take place in the simulation. Is this a plugin issue? Please give some advice on this. Thanks in advance.", "markup": "markdown", "html": "<p>Hi, is there another way to dynamically change the properties of the boat in Gazebo? I tried using \u2018rosservice call set_link_parameters\u2019 and it updates the parameter field in Gazebo but the effect doesn\u2019t actually take place in the simulation. Is this a plugin issue? Please give some advice on this. Thanks in advance.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-10-30T18:48:26.010453+00:00", "milestone": null, "updated_on": "2019-11-04T04:24:19.548707+00:00", "type": "issue", "id": 183}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/184/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/184.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/184/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/184/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/184/vrx-docker-trial-videos-generation-issue"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/184/vote"}}, "reporter": {"display_name": "Yang Zi Yun", "uuid": "{ff12dc1e-5c41-428f-8b8a-f4dd38083a1d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bff12dc1e-5c41-428f-8b8a-f4dd38083a1d%7D"}, "html": {"href": "https://bitbucket.org/%7Bff12dc1e-5c41-428f-8b8a-f4dd38083a1d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bb59fb554279adbd420da9b1e94fd322d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsYY-3.png"}}, "nickname": "Yang Zi Yun", "type": "user", "account_id": "5dade733bb59d80d88eae167"}, "title": "vrx-docker trial videos generation issue", "component": null, "votes": 0, "watches": 1, "content": {"raw": "[#!/osrf/vrx-docker/issues/15/gazebo-playback-hanging](#!/osrf/vrx-docker/issues/15/gazebo-playback-hanging)", "markup": "markdown", "html": "<p><a data-is-external-link=\"true\" href=\"#!/osrf/vrx-docker/issues/15/gazebo-playback-hanging\" rel=\"nofollow\">#!/osrf/vrx-docker/issues/15/gazebo-playback-hanging</a></p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-10-31T09:02:45.700616+00:00", "milestone": null, "updated_on": "2019-10-31T12:35:35.760059+00:00", "type": "issue", "id": 184}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/185/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/185.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/185/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/185/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/185/vrx-docker-trial-videos-generation-issue"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/185/vote"}}, "reporter": {"display_name": "Yang Zi Yun", "uuid": "{ff12dc1e-5c41-428f-8b8a-f4dd38083a1d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bff12dc1e-5c41-428f-8b8a-f4dd38083a1d%7D"}, "html": {"href": "https://bitbucket.org/%7Bff12dc1e-5c41-428f-8b8a-f4dd38083a1d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bb59fb554279adbd420da9b1e94fd322d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsYY-3.png"}}, "nickname": "Yang Zi Yun", "type": "user", "account_id": "5dade733bb59d80d88eae167"}, "title": "vrx-docker trial videos generation issue", "component": {"name": "Docker", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519937.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "Hi I have been encountering problem generating videos from the vrx-docker. I\u2019m not sure whether this issue is being tracked since there is no reply under this issue: [#!/osrf/vrx-docker/issues/15/gazebo-playback-hanging](#!/osrf/vrx-docker/issues/15/gazebo-playback-hanging)", "markup": "markdown", "html": "<p>Hi I have been encountering problem generating videos from the vrx-docker. I\u2019m not sure whether this issue is being tracked since there is no reply under this issue: <a data-is-external-link=\"true\" href=\"#!/osrf/vrx-docker/issues/15/gazebo-playback-hanging\" rel=\"nofollow\">#!/osrf/vrx-docker/issues/15/gazebo-playback-hanging</a></p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-10-31T09:04:40.105603+00:00", "milestone": null, "updated_on": "2020-04-10T08:21:39.082544+00:00", "type": "issue", "id": 185}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/186/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/186.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/186/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/186/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/186/color-checker-enabled-in-dock-task-worlds"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/186/vote"}}, "reporter": {"display_name": "Michael McCarrin", "uuid": "{3c3f500d-bbf6-472c-b8f7-627e5eabc226}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D"}, "html": {"href": "https://bitbucket.org/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a50abc93a3175f92c79e7521dfe089c0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "m1chaelm", "type": "user", "account_id": "5b2a9176467c9a09caa71ab1"}, "title": "color checker enabled in dock task worlds", "component": null, "votes": 0, "watches": 1, "content": {"raw": "As mentioned in [this forum thread](https://robonationforum.vbulletin.net/node/2718), it appears that we left the color checker on in our dock tasks, which allowed Georgia tech to score 10 points in the dress rehearsal by sending the default color sequence even though no light buoy was displayed. The fix is to make sure we set enable\\_color\\_checker to false in our dock \\(\u201cscan\u201d\\) task worlds. We may also want to fix it in the worlds we\u2019ve already released and in the yaml that generates them.", "markup": "markdown", "html": "<p>As mentioned in <a data-is-external-link=\"true\" href=\"https://robonationforum.vbulletin.net/node/2718\" rel=\"nofollow\">this forum thread</a>, it appears that we left the color checker on in our dock tasks, which allowed Georgia tech to score 10 points in the dress rehearsal by sending the default color sequence even though no light buoy was displayed. The fix is to make sure we set enable_color_checker to false in our dock (\u201cscan\u201d) task worlds. We may also want to fix it in the worlds we\u2019ve already released and in the yaml that generates them.</p>", "type": "rendered"}, "assignee": {"display_name": "Michael McCarrin", "uuid": "{3c3f500d-bbf6-472c-b8f7-627e5eabc226}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D"}, "html": {"href": "https://bitbucket.org/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a50abc93a3175f92c79e7521dfe089c0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "m1chaelm", "type": "user", "account_id": "5b2a9176467c9a09caa71ab1"}, "state": "new", "version": null, "edited_on": null, "created_on": "2019-11-06T20:07:10.599735+00:00", "milestone": null, "updated_on": "2019-11-06T20:07:36.488084+00:00", "type": "issue", "id": 186}, {"priority": "minor", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/187/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/187.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/187/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/187/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/187/missing-phase2_nav_challenge-and"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/187/vote"}}, "reporter": {"display_name": "Coline Ramee", "uuid": "{cb901d74-cf3c-4449-87cd-540bec8d3bf9}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bcb901d74-cf3c-4449-87cd-540bec8d3bf9%7D"}, "html": {"href": "https://bitbucket.org/%7Bcb901d74-cf3c-4449-87cd-540bec8d3bf9%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7db065445c12ad58c321101bad53506fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCR-4.png"}}, "nickname": "Coline Ramee", "type": "user", "account_id": "5d6fc502522f790d9c772865"}, "title": "Missing phase2_nav_challenge and phase2_perception worlds", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Hi,\r\n\r\nIn vrx\\_gazebo/worlds all 6 test cases from phase 2 can be found for task1,2,5 and 6, but I can\u2019t find the new test cases for task3 \\(perception\\) and task4 \\(nav\\_challenge\\).  \r\n  \r\nThanks,\r\n\r\n\u200c", "markup": "markdown", "html": "<p>Hi,</p>\n<p>In vrx_gazebo/worlds all 6 test cases from phase 2 can be found for task1,2,5 and 6, but I can\u2019t find the new test cases for task3 (perception) and task4 (nav_challenge).  </p>\n<p>Thanks,</p>\n<p>\u200c</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-11-12T16:26:43.756760+00:00", "milestone": null, "updated_on": "2019-11-22T16:59:32.931413+00:00", "type": "issue", "id": 187}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/188/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/188.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/188/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/188/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/188/gps-imu-are-measured-from-the-wrong-pose"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/188/vote"}}, "reporter": {"display_name": "Kevin Allen", "uuid": "{29f672ad-72f4-434e-bb0e-c6f2f69974f2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B29f672ad-72f4-434e-bb0e-c6f2f69974f2%7D"}, "html": {"href": "https://bitbucket.org/%7B29f672ad-72f4-434e-bb0e-c6f2f69974f2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355d0415f6040ffb168f44275ac2ee2fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsKA-1.png"}}, "nickname": "kev-the-dev", "type": "user", "account_id": "5b04a6cf8a69f52b3ba2e5db"}, "title": "GPS/IMU are measured from the wrong pose", "component": null, "votes": 1, "watches": 1, "content": {"raw": "Team UF has spent about two weeks investigating instability in our control / state estimation systems. After much debugging, the problem has been identified as a bug upstream in VRX. There is some possibility that this is caused by a difference in dependency versions \\(we use a modified container\\), so I encourage the maintainers to attempt to reproduce the issue independently.\r\n\r\n\u200c\r\n\r\n**Summary**\r\n\r\nThe IMU and GPS report \\(in their header messages\\) that they are being measured relative to the link at the pose teams specify in their sensor\\_config.yaml. However, these measurements are actually at base\\_link.  AFAIK, this is not a documented behavior. These discrepancies will obviously throw off state estimation significantly.\r\n\r\n\u200c\r\n\r\n**How to reproduce**\r\n\r\n* Create a wamv with a gps at a some pose nearby to base link. Launch vrx, echo out the gps fix topic, and note the lat / long\r\n* Create a second wamv with a gps at some absurdly far away pose \\(x=10000\\). \r\n* Launch vrx, echo out the gps fix, and note the lat / long\r\n* In both cases, the lat / long is reported as the same. The analogous experiment is true of the IMU. The pose specified in sensor\\_config.yaml does not affect the pose the plugin measures relative to.\r\n\r\n\u200c\r\n\r\n**Analysis**\r\n\r\nAfter the URDF is generated, everything seems okay. Links exist at the correct poses and the hector\\_gazebo plugins have these links specified \r\n\r\n```xml\r\n  <gazebo>\r\n    <plugin filename=\"libhector_gazebo_ros_imu.so\" name=\"imu_plugin_imu_wamv\">\r\n     ...\r\n      <bodyName>imu_wamv_link</bodyName>\r\n      ...\r\n      <!-- Manually prepend namespace to tf frame. -->\r\n      <frameId>wamv/imu_wamv_link</frameId>\r\n     ...\r\n    </plugin>\r\n  </gazebo>\r\n```\r\n\r\nHowever, if you add some debug lines to hector\\_gazebo, you will see that at some point during the URDF->SDF process this tag seems to be changed.\r\n\r\n```c++\r\ndiff --git a/hector_gazebo_plugins/src/gazebo_ros_gps.cpp b/hector_gazebo_plugins/src/gazebo_ros_gps.cpp\r\nindex 79d860b..b27becf 100644\r\n--- a/hector_gazebo_plugins/src/gazebo_ros_gps.cpp\r\n+++ b/hector_gazebo_plugins/src/gazebo_ros_gps.cpp\r\n@@ -74,20 +74,34 @@ void GazeboRosGps::Load(physics::ModelPtr _model, sdf::ElementPtr _sdf)\r\n \r\n   if (!_sdf->HasElement(\"bodyName\"))\r\n   {\r\n+    ROS_ERROR(\"No body name flag, defaulting to base_link\");\r\n+\r\n     link = _model->GetLink();\r\n     link_name_ = link->GetName();\r\n   }\r\n   else {\r\n+\r\n     link_name_ = _sdf->GetElement(\"bodyName\")->GetValue()->GetAsString();\r\n+    ROS_ERROR_STREAM(\"Measuring GPS relative to \" << link_name_);\r\n+\r\n     link = _model->GetLink(link_name_);\r\n   }\r\n \r\n+\r\n   if (!link)\r\n   {\r\n     ROS_FATAL(\"GazeboRosGps plugin error: bodyName: %s does not exist\\n\", link_name_.c_str());\r\n     return;\r\n   }\r\n \r\n+\r\n+    for(auto link : _model->GetLinks())\r\n+    {\r\n+      ROS_ERROR_STREAM(\"Link \" << link->GetName() << \" Pose \" << link->RelativePose());\r\n+    }\r\n+\r\n+\r\n+\r\n   // default parameters\r\n   frame_id_ = \"/world\";\r\n   fix_topic_ = \"fix\";\r\n```\r\n\r\nThis produces:\r\n\r\n```\r\n[ERROR] [1573845827.616271176, 0.001000000]: Measuring GPS relative to base_link\r\n[ERROR] [1573845827.616431306, 0.001000000]: Link base_link Pose 0 0 0 0 -0 0\r\n```\r\n\r\nIndicating that hector\\_gazebo actually processes the sensors relative to base\\_link, but reports them at the sensor link.\r\n\r\n\u200c\r\n\r\n**Mitigiation**\r\n\r\nAs a hack, Team UF runs our URDF through a script to set the gps / imu links to have a pose of zero so transforms work correctly when published by robot\\_state\\_publisher. Others will have to change the hard coded joint names to their own.\r\n\r\n```\r\n#!/usr/bin/python2\r\n'''\r\nFixes an URDF file which uses hector_gazebo_plugins for gps/imu.\r\nBeacause gazebo_ros's URDF->SDF blindly replaces link name strings with base_link, thus\r\nmaking the imu/gps plugins measure from base_link but report a different link.\r\nThis fixes the urdf to have these sensors also be at baselink so transforms work correctly.\r\nNote: currently hardcoded for VRX purposes. Simply change the strings to work more genericly.\r\n'''\r\nfrom __future__ import print_function\r\nimport xml.etree.ElementTree as ET\r\nimport sys\r\n\r\n\r\ndef set_joint_origin_to_zero(root, name):\r\n    tag = root.find(\"*[@name='{}']\".format(name))\r\n    origin = tag.find(\"origin\")\r\n    origin.set('rpy', '0 0 0')\r\n    origin.set('xyz', '0 0 0')\r\n\r\n\r\ndef fix_gps(root):\r\n    set_joint_origin_to_zero(root, 'gps_wamv_joint')\r\n\r\n\r\ndef fix_imu(root):\r\n    set_joint_origin_to_zero(root, 'imu_wamv_joint')\r\n\r\n\r\ndef fix_file(filename):\r\n    tree = ET.parse(filename)\r\n    root = tree.getroot()\r\n    fix_gps(root)\r\n    fix_imu(root)\r\n    print(ET.tostring(root))\r\n\r\n\r\nif __name__ == '__main__':\r\n    fix_file(sys.argv[1])                             \r\n```\r\n\r\n\u200c", "markup": "markdown", "html": "<p>Team UF has spent about two weeks investigating instability in our control / state estimation systems. After much debugging, the problem has been identified as a bug upstream in VRX. There is some possibility that this is caused by a difference in dependency versions (we use a modified container), so I encourage the maintainers to attempt to reproduce the issue independently.</p>\n<p>\u200c</p>\n<p><strong>Summary</strong></p>\n<p>The IMU and GPS report (in their header messages) that they are being measured relative to the link at the pose teams specify in their sensor_config.yaml. However, these measurements are actually at base_link.  AFAIK, this is not a documented behavior. These discrepancies will obviously throw off state estimation significantly.</p>\n<p>\u200c</p>\n<p><strong>How to reproduce</strong></p>\n<ul>\n<li>Create a wamv with a gps at a some pose nearby to base link. Launch vrx, echo out the gps fix topic, and note the lat / long</li>\n<li>Create a second wamv with a gps at some absurdly far away pose (x=10000). </li>\n<li>Launch vrx, echo out the gps fix, and note the lat / long</li>\n<li>In both cases, the lat / long is reported as the same. The analogous experiment is true of the IMU. The pose specified in sensor_config.yaml does not affect the pose the plugin measures relative to.</li>\n</ul>\n<p>\u200c</p>\n<p><strong>Analysis</strong></p>\n<p>After the URDF is generated, everything seems okay. Links exist at the correct poses and the hector_gazebo plugins have these links specified </p>\n<div class=\"codehilite language-xml\"><pre><span></span>  <span class=\"nt\">&lt;gazebo&gt;</span>\n    <span class=\"nt\">&lt;plugin</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;libhector_gazebo_ros_imu.so&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;imu_plugin_imu_wamv&quot;</span><span class=\"nt\">&gt;</span>\n     ...\n      <span class=\"nt\">&lt;bodyName&gt;</span>imu_wamv_link<span class=\"nt\">&lt;/bodyName&gt;</span>\n      ...\n      <span class=\"c\">&lt;!-- Manually prepend namespace to tf frame. --&gt;</span>\n      <span class=\"nt\">&lt;frameId&gt;</span>wamv/imu_wamv_link<span class=\"nt\">&lt;/frameId&gt;</span>\n     ...\n    <span class=\"nt\">&lt;/plugin&gt;</span>\n  <span class=\"nt\">&lt;/gazebo&gt;</span>\n</pre></div>\n\n\n<p>However, if you add some debug lines to hector_gazebo, you will see that at some point during the URDF-&gt;SDF process this tag seems to be changed.</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">diff</span> <span class=\"o\">--</span><span class=\"n\">git</span> <span class=\"n\">a</span><span class=\"o\">/</span><span class=\"n\">hector_gazebo_plugins</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">gazebo_ros_gps</span><span class=\"p\">.</span><span class=\"n\">cpp</span> <span class=\"n\">b</span><span class=\"o\">/</span><span class=\"n\">hector_gazebo_plugins</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">gazebo_ros_gps</span><span class=\"p\">.</span><span class=\"n\">cpp</span>\n<span class=\"n\">index</span> <span class=\"mi\">79</span><span class=\"n\">d860b</span><span class=\"p\">..</span><span class=\"n\">b27becf</span> <span class=\"mi\">100644</span>\n<span class=\"o\">---</span> <span class=\"n\">a</span><span class=\"o\">/</span><span class=\"n\">hector_gazebo_plugins</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">gazebo_ros_gps</span><span class=\"p\">.</span><span class=\"n\">cpp</span>\n<span class=\"o\">+++</span> <span class=\"n\">b</span><span class=\"o\">/</span><span class=\"n\">hector_gazebo_plugins</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">gazebo_ros_gps</span><span class=\"p\">.</span><span class=\"n\">cpp</span>\n<span class=\"err\">@@</span> <span class=\"o\">-</span><span class=\"mi\">74</span><span class=\"p\">,</span><span class=\"mi\">20</span> <span class=\"o\">+</span><span class=\"mi\">74</span><span class=\"p\">,</span><span class=\"mi\">34</span> <span class=\"err\">@@</span> <span class=\"kt\">void</span> <span class=\"n\">GazeboRosGps</span><span class=\"o\">::</span><span class=\"n\">Load</span><span class=\"p\">(</span><span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">ModelPtr</span> <span class=\"n\">_model</span><span class=\"p\">,</span> <span class=\"n\">sdf</span><span class=\"o\">::</span><span class=\"n\">ElementPtr</span> <span class=\"n\">_sdf</span><span class=\"p\">)</span>\n\n   <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">_sdf</span><span class=\"o\">-&gt;</span><span class=\"n\">HasElement</span><span class=\"p\">(</span><span class=\"s\">&quot;bodyName&quot;</span><span class=\"p\">))</span>\n   <span class=\"p\">{</span>\n<span class=\"o\">+</span>    <span class=\"n\">ROS_ERROR</span><span class=\"p\">(</span><span class=\"s\">&quot;No body name flag, defaulting to base_link&quot;</span><span class=\"p\">);</span>\n<span class=\"o\">+</span>\n     <span class=\"n\">link</span> <span class=\"o\">=</span> <span class=\"n\">_model</span><span class=\"o\">-&gt;</span><span class=\"n\">GetLink</span><span class=\"p\">();</span>\n     <span class=\"n\">link_name_</span> <span class=\"o\">=</span> <span class=\"n\">link</span><span class=\"o\">-&gt;</span><span class=\"n\">GetName</span><span class=\"p\">();</span>\n   <span class=\"p\">}</span>\n   <span class=\"k\">else</span> <span class=\"p\">{</span>\n<span class=\"o\">+</span>\n     <span class=\"n\">link_name_</span> <span class=\"o\">=</span> <span class=\"n\">_sdf</span><span class=\"o\">-&gt;</span><span class=\"n\">GetElement</span><span class=\"p\">(</span><span class=\"s\">&quot;bodyName&quot;</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">GetValue</span><span class=\"p\">()</span><span class=\"o\">-&gt;</span><span class=\"n\">GetAsString</span><span class=\"p\">();</span>\n<span class=\"o\">+</span>    <span class=\"n\">ROS_ERROR_STREAM</span><span class=\"p\">(</span><span class=\"s\">&quot;Measuring GPS relative to &quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">link_name_</span><span class=\"p\">);</span>\n<span class=\"o\">+</span>\n     <span class=\"n\">link</span> <span class=\"o\">=</span> <span class=\"n\">_model</span><span class=\"o\">-&gt;</span><span class=\"n\">GetLink</span><span class=\"p\">(</span><span class=\"n\">link_name_</span><span class=\"p\">);</span>\n   <span class=\"p\">}</span>\n\n<span class=\"o\">+</span>\n   <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">link</span><span class=\"p\">)</span>\n   <span class=\"p\">{</span>\n     <span class=\"n\">ROS_FATAL</span><span class=\"p\">(</span><span class=\"s\">&quot;GazeboRosGps plugin error: bodyName: %s does not exist</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">link_name_</span><span class=\"p\">.</span><span class=\"n\">c_str</span><span class=\"p\">());</span>\n     <span class=\"k\">return</span><span class=\"p\">;</span>\n   <span class=\"p\">}</span>\n\n<span class=\"o\">+</span>\n<span class=\"o\">+</span>    <span class=\"k\">for</span><span class=\"p\">(</span><span class=\"k\">auto</span> <span class=\"nl\">link</span> <span class=\"p\">:</span> <span class=\"n\">_model</span><span class=\"o\">-&gt;</span><span class=\"n\">GetLinks</span><span class=\"p\">())</span>\n<span class=\"o\">+</span>    <span class=\"p\">{</span>\n<span class=\"o\">+</span>      <span class=\"n\">ROS_ERROR_STREAM</span><span class=\"p\">(</span><span class=\"s\">&quot;Link &quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">link</span><span class=\"o\">-&gt;</span><span class=\"n\">GetName</span><span class=\"p\">()</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot; Pose &quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">link</span><span class=\"o\">-&gt;</span><span class=\"n\">RelativePose</span><span class=\"p\">());</span>\n<span class=\"o\">+</span>    <span class=\"p\">}</span>\n<span class=\"o\">+</span>\n<span class=\"o\">+</span>\n<span class=\"o\">+</span>\n   <span class=\"c1\">// default parameters</span>\n   <span class=\"n\">frame_id_</span> <span class=\"o\">=</span> <span class=\"s\">&quot;/world&quot;</span><span class=\"p\">;</span>\n   <span class=\"n\">fix_topic_</span> <span class=\"o\">=</span> <span class=\"s\">&quot;fix&quot;</span><span class=\"p\">;</span>\n</pre></div>\n\n\n<p>This produces:</p>\n<div class=\"codehilite\"><pre><span></span>[ERROR] [1573845827.616271176, 0.001000000]: Measuring GPS relative to base_link\n[ERROR] [1573845827.616431306, 0.001000000]: Link base_link Pose 0 0 0 0 -0 0\n</pre></div>\n\n\n<p>Indicating that hector_gazebo actually processes the sensors relative to base_link, but reports them at the sensor link.</p>\n<p>\u200c</p>\n<p><strong>Mitigiation</strong></p>\n<p>As a hack, Team UF runs our URDF through a script to set the gps / imu links to have a pose of zero so transforms work correctly when published by robot_state_publisher. Others will have to change the hard coded joint names to their own.</p>\n<div class=\"codehilite language-python2\"><pre><span></span><span class=\"ch\">#!/usr/bin/python2</span>\n<span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">Fixes an URDF file which uses hector_gazebo_plugins for gps/imu.</span>\n<span class=\"sd\">Beacause gazebo_ros&#39;s URDF-&gt;SDF blindly replaces link name strings with base_link, thus</span>\n<span class=\"sd\">making the imu/gps plugins measure from base_link but report a different link.</span>\n<span class=\"sd\">This fixes the urdf to have these sensors also be at baselink so transforms work correctly.</span>\n<span class=\"sd\">Note: currently hardcoded for VRX purposes. Simply change the strings to work more genericly.</span>\n<span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">print_function</span>\n<span class=\"kn\">import</span> <span class=\"nn\">xml.etree.ElementTree</span> <span class=\"kn\">as</span> <span class=\"nn\">ET</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">set_joint_origin_to_zero</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n    <span class=\"n\">tag</span> <span class=\"o\">=</span> <span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;*[@name=&#39;{}&#39;]&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">))</span>\n    <span class=\"n\">origin</span> <span class=\"o\">=</span> <span class=\"n\">tag</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;origin&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">origin</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">&#39;rpy&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;0 0 0&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">origin</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">&#39;xyz&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;0 0 0&#39;</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">fix_gps</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">):</span>\n    <span class=\"n\">set_joint_origin_to_zero</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"s1\">&#39;gps_wamv_joint&#39;</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">fix_imu</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">):</span>\n    <span class=\"n\">set_joint_origin_to_zero</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"s1\">&#39;imu_wamv_joint&#39;</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">fix_file</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">):</span>\n    <span class=\"n\">tree</span> <span class=\"o\">=</span> <span class=\"n\">ET</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">)</span>\n    <span class=\"n\">root</span> <span class=\"o\">=</span> <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">getroot</span><span class=\"p\">()</span>\n    <span class=\"n\">fix_gps</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">)</span>\n    <span class=\"n\">fix_imu</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">)</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">ET</span><span class=\"o\">.</span><span class=\"n\">tostring</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">))</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"n\">fix_file</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>                             \n</pre></div>\n\n\n<p>\u200c</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-11-15T19:26:57.325801+00:00", "milestone": null, "updated_on": "2020-04-10T03:10:20.287361+00:00", "type": "issue", "id": 188}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/189/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/189.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/189/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/189/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/189/perception-buoy-naming-inconsistency"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/189/vote"}}, "reporter": {"display_name": "John Sumskas", "uuid": "{4cf44000-1bc9-4958-b2f0-ebf4a0ec34bb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B4cf44000-1bc9-4958-b2f0-ebf4a0ec34bb%7D"}, "html": {"href": "https://bitbucket.org/%7B4cf44000-1bc9-4958-b2f0-ebf4a0ec34bb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d3f979962a8d9d9eb4c505633931bdd5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJS-6.png"}}, "nickname": "johnsumskas", "type": "user", "account_id": "557058:335cae63-ffdf-48a7-8317-496d75bc8f52"}, "title": "Perception Buoy Naming inconsistency.", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The naming of the surmark perception buoys appear to be inconsistent with the documentation. In the example test world the names of the surmark green and red buoys are : surmark\\_950410 and surmark\\_950400 with underscores. In the documentation of VRX2019\\_Task\\_Descriptions\\_v1.4.pdf they are called; surmark950410 surmark950400;  without the underscores. \r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/622440148-image.png)\r\n![](data/bitbucket.org/repo/BgXLzgM/images/4279689887-image.png)\r\n\u200c", "markup": "markdown", "html": "<p>The naming of the surmark perception buoys appear to be inconsistent with the documentation. In the example test world the names of the surmark green and red buoys are : surmark_950410 and surmark_950400 with underscores. In the documentation of VRX2019_Task_Descriptions_v1.4.pdf they are called; surmark950410 surmark950400;  without the underscores. </p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/622440148-image.png\" />\n<img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/4279689887-image.png\" />\n\u200c</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-11-16T16:26:57.440343+00:00", "milestone": null, "updated_on": "2019-11-21T15:17:22.537076+00:00", "type": "issue", "id": 189}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/190/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/190.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/190/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/190/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/190/difference-in-scoring-for-different-docks"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/190/vote"}}, "reporter": {"display_name": "Hashir Zahir", "uuid": "{0033cdb9-ea6e-4c6a-a9ad-d462a485643d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0033cdb9-ea6e-4c6a-a9ad-d462a485643d%7D"}, "html": {"href": "https://bitbucket.org/%7B0033cdb9-ea6e-4c6a-a9ad-d462a485643d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/3c71628af17207fad1dd0ea6280b41f1d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsHZ-5.png"}}, "nickname": "hzahir", "type": "user", "account_id": "557058:6b6463b7-2835-47c7-8c22-fdef36e9e325"}, "title": "Difference in scoring for different Docks", "component": {"name": "Plugin", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519936.json"}}}, "votes": 0, "watches": 2, "content": {"raw": "When driving the WAMV into docks \\(on both bays\\) in `dock0` and `dock1`, all is well in score updating. However, when docking in `dock3` world, we notice there is a slight difference in the scoring and the docking action is not captured. Looking at the verbose logs, it claims that it was phasing between entering and exiting the internal activation zone, hence making the docking state not activate resulting in no points. I understand from the [ Docking Wiki](#!/osrf/vrx/wiki/tutorials/docking_details), it does mention that going too far forward will result in non-dock events sometimes. This is acceptable, however, the same docking position \\(with the front of the WAMV hitting the dock in the top right corner\\) does not score the same way in the different worlds and even different bays. If there was a uniform scoring in the docking it would be fine but I believe there is an inconsistency here. Could someone help to check this out? I have added images of various docking positions in different worlds with different verbose outputs from the `scan_dock_scoring_plugin`\r\n\r\n\u200c\r\n\r\nFor comparison, driving here in `dock0 bay2`:  \r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/4039807801-image.png)\r\n![](data/bitbucket.org/repo/BgXLzgM/images/1223435705-image.png)\r\n  \r\nFor comparison, driving into `dock3 bay1`,\r\n\r\nInitially driving into the bay:\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/3878731170-image.png)\r\n![](data/bitbucket.org/repo/BgXLzgM/images/1859546126-image.png)\r\nStopped driving:\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/1705463603-image.png)\r\n![](data/bitbucket.org/repo/BgXLzgM/images/3170063983-image.png)\r\nDriving out of the dock:\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/2322490665-image.png)\r\n![](data/bitbucket.org/repo/BgXLzgM/images/1815789548-image.png)\r\nTrying the another docking location in `dock3 bay1` that works for other worlds but not this world:  \r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/1318693891-image.png)\r\n![](data/bitbucket.org/repo/BgXLzgM/images/1917402114-image.png)\r\nThe same docking style but using `dock3 bay2` world:  \r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/3298345280-image.png)\r\n![](data/bitbucket.org/repo/BgXLzgM/images/1323473985-image.png)\r\nWould appreciate if you could look into this. Thank you!", "markup": "markdown", "html": "<p>When driving the WAMV into docks (on both bays) in <code>dock0</code> and <code>dock1</code>, all is well in score updating. However, when docking in <code>dock3</code> world, we notice there is a slight difference in the scoring and the docking action is not captured. Looking at the verbose logs, it claims that it was phasing between entering and exiting the internal activation zone, hence making the docking state not activate resulting in no points. I understand from the <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/wiki/tutorials/docking_details\" rel=\"nofollow\"> Docking Wiki</a>, it does mention that going too far forward will result in non-dock events sometimes. This is acceptable, however, the same docking position (with the front of the WAMV hitting the dock in the top right corner) does not score the same way in the different worlds and even different bays. If there was a uniform scoring in the docking it would be fine but I believe there is an inconsistency here. Could someone help to check this out? I have added images of various docking positions in different worlds with different verbose outputs from the <code>scan_dock_scoring_plugin</code></p>\n<p>\u200c</p>\n<p>For comparison, driving here in <code>dock0 bay2</code>:  </p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/4039807801-image.png\" />\n<img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1223435705-image.png\" /></p>\n<p>For comparison, driving into <code>dock3 bay1</code>,</p>\n<p>Initially driving into the bay:</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3878731170-image.png\" />\n<img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1859546126-image.png\" />\nStopped driving:</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1705463603-image.png\" />\n<img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3170063983-image.png\" />\nDriving out of the dock:</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/2322490665-image.png\" />\n<img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1815789548-image.png\" />\nTrying the another docking location in <code>dock3 bay1</code> that works for other worlds but not this world:  </p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1318693891-image.png\" />\n<img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1917402114-image.png\" />\nThe same docking style but using <code>dock3 bay2</code> world:  </p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3298345280-image.png\" />\n<img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1323473985-image.png\" />\nWould appreciate if you could look into this. Thank you!</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-11-20T03:52:45.399898+00:00", "milestone": null, "updated_on": "2019-12-26T17:16:58.428248+00:00", "type": "issue", "id": 190}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/191/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/191.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/191/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/191/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/191/dock-activation-not-working-in"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/191/vote"}}, "reporter": {"display_name": "Anthony Velte", "uuid": "{92db5a4c-d556-4c1e-bf20-60a24b4607bb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B92db5a4c-d556-4c1e-bf20-60a24b4607bb%7D"}, "html": {"href": "https://bitbucket.org/%7B92db5a4c-d556-4c1e-bf20-60a24b4607bb%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ca7535badc187fbaa6dbc13d5158c1d9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAV-5.png"}}, "nickname": "Anthony Velte", "type": "user", "account_id": "5d5c514dc812c40d27bfe5e1"}, "title": "Dock activation not working in scan_and_dock1.world", "component": {"name": "Plugin", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519936.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "The scan\\_and\\_dock1.world doesn\u2019t seem to be detecting docking events. Neither the external nor internal activation zones seem to be detecting the boat crossing into them. I have attached a video showing the issue occurring. video:  [vrx\\_docking\\_error](https://drive.google.com/file/d/11taM0TelHNzX71gIUdDBctii9UqwTKPq/view?usp=sharing)\r\n\r\nThis is the only world were we have noticed this issue.", "markup": "markdown", "html": "<p>The scan_and_dock1.world doesn\u2019t seem to be detecting docking events. Neither the external nor internal activation zones seem to be detecting the boat crossing into them. I have attached a video showing the issue occurring. video:  <a data-is-external-link=\"true\" href=\"https://drive.google.com/file/d/11taM0TelHNzX71gIUdDBctii9UqwTKPq/view?usp=sharing\" rel=\"nofollow\">vrx_docking_error</a></p>\n<p>This is the only world were we have noticed this issue.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-11-22T20:38:22.063531+00:00", "milestone": null, "updated_on": "2019-11-22T21:57:51.405012+00:00", "type": "issue", "id": 191}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/192/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/192.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/192/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/192/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/192/investigate-object-dependent-lidar"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/192/vote"}}, "reporter": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "title": "Investigate object dependent lidar reflectivity", "component": {"name": "Model", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519934.json"}}}, "votes": 1, "watches": 2, "content": {"raw": "Based on discussion at RXI, one feature request is to improve lidar intensity modeling.  Teams report that different objects/materials produce significantly different lidar intensity returns \\(the color of a buoy can be determined by the lidar returns!\\).  Also, the lidar interaction with the water surface could be improved.\r\n\r\nOne possible source of information is ERAU student modelling the performance of a velodyne HDL-32: [https://commons.erau.edu/edt/161/](https://commons.erau.edu/edt/161/)", "markup": "markdown", "html": "<p>Based on discussion at RXI, one feature request is to improve lidar intensity modeling.  Teams report that different objects/materials produce significantly different lidar intensity returns (the color of a buoy can be determined by the lidar returns!).  Also, the lidar interaction with the water surface could be improved.</p>\n<p>One possible source of information is ERAU student modelling the performance of a velodyne HDL-32: <a data-is-external-link=\"true\" href=\"https://commons.erau.edu/edt/161/\" rel=\"nofollow\">https://commons.erau.edu/edt/161/</a></p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-12-10T18:32:36.613786+00:00", "milestone": null, "updated_on": "2019-12-10T18:32:36.613786+00:00", "type": "issue", "id": 192}, {"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/193/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/193.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/193/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/193/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/193/improve-wam-v-model-fidelity"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/193/vote"}}, "reporter": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "title": "Improve WAM-V model fidelity", "component": null, "votes": 0, "watches": 1, "content": {"raw": "At RXI there was talk of better model characterization of the WAM-V and propulsion.  Need to followup with teams to see if any of the teams have more data.  I followed up with Manhar from FAU on their bollard test of the torquedo thrusters.", "markup": "markdown", "html": "<p>At RXI there was talk of better model characterization of the WAM-V and propulsion.  Need to followup with teams to see if any of the teams have more data.  I followed up with Manhar from FAU on their bollard test of the torquedo thrusters.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-12-10T19:03:45.174262+00:00", "milestone": null, "updated_on": "2019-12-10T19:03:45.174262+00:00", "type": "issue", "id": 193}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/194/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/194.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/194/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/194/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/194/improving-wind-model"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/194/vote"}}, "reporter": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "title": "Improving wind model", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Current wind model is stochastic speed and constant direction. Adding stochastic directionality would enable testing control in the presence of varying wind direction. \r\n\r\nSee also issue #195", "markup": "markdown", "html": "<p>Current wind model is stochastic speed and constant direction. Adding stochastic directionality would enable testing control in the presence of varying wind direction. </p>\n<p>See also issue <a href=\"#!/osrf/vrx/issues/195/replicate-wind-induced-motion-to-course\" rel=\"nofollow\" title=\"Replicate wind induced motion to course objects\" class=\"ap-connect-link\">#195</a></p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-12-19T17:00:57.417914+00:00", "milestone": null, "updated_on": "2019-12-19T17:02:46.203372+00:00", "type": "issue", "id": 194}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/195/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/195.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/195/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/195/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/195/replicate-wind-induced-motion-to-course"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/195/vote"}}, "reporter": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "title": "Replicate wind induced motion to course objects", "component": null, "votes": 1, "watches": 2, "content": {"raw": "This feature has been mentioned by a few RobotX teams. The course elements move around in a \u201cwatch circle\u201d due to environmental effects - primarily wind. Additionally, the attitude of the buoys is affected by wind. Simulating these motions of the course objects \\(buoys, obstacles, docks, etc. \\) would add functionality so that teams could test their solutions against moving course objects.\r\n\r\nDepending on how this is implemented, could make use of a solution to issue #194", "markup": "markdown", "html": "<p>This feature has been mentioned by a few RobotX teams. The course elements move around in a \u201cwatch circle\u201d due to environmental effects - primarily wind. Additionally, the attitude of the buoys is affected by wind. Simulating these motions of the course objects (buoys, obstacles, docks, etc. ) would add functionality so that teams could test their solutions against moving course objects.</p>\n<p>Depending on how this is implemented, could make use of a solution to issue <a href=\"#!/osrf/vrx/issues/194/improving-wind-model\" rel=\"nofollow\" title=\"Improving wind model\" class=\"ap-connect-link\">#194</a></p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-12-19T17:01:03.565093+00:00", "milestone": null, "updated_on": "2019-12-19T17:02:34.067689+00:00", "type": "issue", "id": 195}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/196/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/196.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/196/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/196/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/196/xacro-files-failing-during-catkin_make"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/196/vote"}}, "reporter": null, "title": "Xacro files failing during catkin_make", "component": null, "votes": 0, "watches": null, "content": {"raw": "Hello,\r\n\r\nI am trying to compile your source code outside of the docker image. I have an installation of Gazebo9 and ROS melodic, along with all the dependencies I could see in the docker. I keep seeing the following issues when I try to run `catkin_make`. It appears many times for varying `xacro` files.\r\n```\r\n#!bash\r\n-- xacro: determining deps for: urdf/wamv_gazebo.urdf.xacro ...\r\nCMake Warning at xacro/cmake/xacro-extras.cmake:87 (message):\r\n  failed to determine deps for: urdf/wamv_gazebo.urdf.xacro\r\n\r\n  error: substitution args not supported: No module named msg\r\n\r\n  when processing file: urdf/wamv_gazebo.urdf.xacro\r\n\r\nCall Stack (most recent call first):\r\n  xacro/cmake/xacro-extras.cmake:187 (xacro_add_xacro_file)\r\n  vrx/wamv_gazebo/CMakeLists.txt:13 (xacro_add_files)\r\n``` \r\nThis has happened alternatively for `msg`, `Log`, and others, depending on which dependencies I set in `package.xml`, so I think it may be a dependency issue, if you'd help clarify. I don't think I should need to alter your `package.xml` files..? \r\n\r\nThere is also this warning (though I don't think it has any effect):\r\n```\r\n#!bash\r\nCMake Warning (dev) at /usr/share/cmake-3.10/Modules/FindBoost.cmake:911 (if):\r\n  Policy CMP0054 is not set: Only interpret if() arguments as variables or\r\n  keywords when unquoted.  Run \"cmake --help-policy CMP0054\" for policy\r\n  details.  Use the cmake_policy command to set the policy and suppress this\r\n  warning.\r\n\r\n  Quoted variables like \"chrono\" will no longer be dereferenced when the\r\n  policy is set to NEW.  Since the policy is not set the OLD behavior will be\r\n  used.\r\nCall Stack (most recent call first):\r\n  /usr/share/cmake-3.10/Modules/FindBoost.cmake:1558 (_Boost_MISSING_DEPENDENCIES)\r\n  /usr/share/OGRE/cmake/modules/FindOGRE.cmake:318 (find_package)\r\n  /usr/lib/x86_64-linux-gnu/cmake/gazebo/gazebo-config.cmake:175 (find_package)\r\n  vrx/vrx_gazebo/CMakeLists.txt:16 (find_package)\r\nThis warning is for project developers.  Use -Wno-dev to suppress it.\r\n```\r\nAnd this: \r\n```\r\n#!bash\r\nCMake Warning (dev) in vrx/vrx_gazebo/msgs/CMakeLists.txt:\r\n  Policy CMP0071 is not set: Let AUTOMOC and AUTOUIC process GENERATED files.\r\n  Run \"cmake --help-policy CMP0071\" for policy details.  Use the cmake_policy\r\n  command to set the policy and suppress this warning.\r\n\r\n  For compatibility, CMake is excluding the GENERATED source file(s):\r\n\r\n    \"/home/CYBERNET/ewills/gazebo_sims/tautog3/build/vrx/vrx_gazebo/msgs/light_buoy_colors.pb.cc\"\r\n    \"/home/CYBERNET/ewills/gazebo_sims/tautog3/build/vrx/vrx_gazebo/msgs/dock_placard.pb.cc\"\r\n    \"/home/CYBERNET/ewills/gazebo_sims/tautog3/build/vrx/vrx_gazebo/msgs/header.pb.cc\"\r\n    \"/home/CYBERNET/ewills/gazebo_sims/tautog3/build/vrx/vrx_gazebo/msgs/time.pb.cc\"\r\n\r\n  from processing by AUTOMOC and AUTOUIC.  If any of the files should be\r\n  processed, set CMP0071 to NEW.  If any of the files should not be\r\n  processed, explicitly exclude them by setting the source file property\r\n  SKIP_AUTOGEN:\r\n\r\n    set_property(SOURCE file.h PROPERTY SKIP_AUTOGEN ON)\r\n\r\nThis warning is for project developers.  Use -Wno-dev to suppress it.\r\n```\r\nAlong with this target fail:\r\n```\r\n#!bash\r\nCMake Warning (dev) at vrx/vrx_gazebo/CMakeLists.txt:118 (add_dependencies):\r\n  Policy CMP0046 is not set: Error on non-existent dependency in\r\n  add_dependencies.  Run \"cmake --help-policy CMP0046\" for policy details.\r\n  Use the cmake_policy command to set the policy and suppress this warning.\r\n\r\n  The dependency target \"vrx_gazebo_generate_services_cpp\" of target\r\n  \"scoring_plugin\" does not exist.\r\nThis warning is for project developers.  Use -Wno-dev to suppress it\r\n```\r\n\r\nWhich eventually gives:\r\n```\r\n#!bash\r\n[  1%] Built target wamv_description__xacro_auto_generate_to_devel_space_\r\nvrx/wamv_gazebo/CMakeFiles/wamv_gazebo__xacro_auto_generate_to_devel_space_.dir/build.make:73: *** unterminated variable reference.  Stop.\r\nCMakeFiles/Makefile2:122481: recipe for target 'vrx/wamv_gazebo/CMakeFiles/wamv_gazebo__xacro_auto_generate_to_devel_space_.dir/all' failed\r\nmake[1]: *** [vrx/wamv_gazebo/CMakeFiles/wamv_gazebo__xacro_auto_generate_to_devel_space_.dir/all] Error 2\r\nMakefile:140: recipe for target 'all' failed\r\nmake: *** [all] Error 2\r\n```\r\nCould you help clarify what might be going on?\r\nThank you!", "markup": "markdown", "html": "<p>Hello,</p>\n<p>I am trying to compile your source code outside of the docker image. I have an installation of Gazebo9 and ROS melodic, along with all the dependencies I could see in the docker. I keep seeing the following issues when I try to run <code>catkin_make</code>. It appears many times for varying <code>xacro</code> files.</p>\n<div class=\"codehilite language-bash\"><pre><span></span>-- xacro: determining deps <span class=\"k\">for</span>: urdf/wamv_gazebo.urdf.xacro ...\nCMake Warning at xacro/cmake/xacro-extras.cmake:87 <span class=\"o\">(</span>message<span class=\"o\">)</span>:\n  failed to determine deps <span class=\"k\">for</span>: urdf/wamv_gazebo.urdf.xacro\n\n  error: substitution args not supported: No module named msg\n\n  when processing file: urdf/wamv_gazebo.urdf.xacro\n\nCall Stack <span class=\"o\">(</span>most recent call first<span class=\"o\">)</span>:\n  xacro/cmake/xacro-extras.cmake:187 <span class=\"o\">(</span>xacro_add_xacro_file<span class=\"o\">)</span>\n  vrx/wamv_gazebo/CMakeLists.txt:13 <span class=\"o\">(</span>xacro_add_files<span class=\"o\">)</span>\n</pre></div>\n\n\n<p>This has happened alternatively for <code>msg</code>, <code>Log</code>, and others, depending on which dependencies I set in <code>package.xml</code>, so I think it may be a dependency issue, if you'd help clarify. I don't think I should need to alter your <code>package.xml</code> files..? </p>\n<p>There is also this warning (though I don't think it has any effect):</p>\n<div class=\"codehilite language-bash\"><pre><span></span>CMake Warning <span class=\"o\">(</span>dev<span class=\"o\">)</span> at /usr/share/cmake-3.10/Modules/FindBoost.cmake:911 <span class=\"o\">(</span><span class=\"k\">if</span><span class=\"o\">)</span>:\n  Policy CMP0054 is not set: Only interpret <span class=\"k\">if</span><span class=\"o\">()</span> arguments as variables or\n  keywords when unquoted.  Run <span class=\"s2\">&quot;cmake --help-policy CMP0054&quot;</span> <span class=\"k\">for</span> policy\n  details.  Use the cmake_policy <span class=\"nb\">command</span> to <span class=\"nb\">set</span> the policy and suppress this\n  warning.\n\n  Quoted variables like <span class=\"s2\">&quot;chrono&quot;</span> will no longer be dereferenced when the\n  policy is <span class=\"nb\">set</span> to NEW.  Since the policy is not <span class=\"nb\">set</span> the OLD behavior will be\n  used.\nCall Stack <span class=\"o\">(</span>most recent call first<span class=\"o\">)</span>:\n  /usr/share/cmake-3.10/Modules/FindBoost.cmake:1558 <span class=\"o\">(</span>_Boost_MISSING_DEPENDENCIES<span class=\"o\">)</span>\n  /usr/share/OGRE/cmake/modules/FindOGRE.cmake:318 <span class=\"o\">(</span>find_package<span class=\"o\">)</span>\n  /usr/lib/x86_64-linux-gnu/cmake/gazebo/gazebo-config.cmake:175 <span class=\"o\">(</span>find_package<span class=\"o\">)</span>\n  vrx/vrx_gazebo/CMakeLists.txt:16 <span class=\"o\">(</span>find_package<span class=\"o\">)</span>\nThis warning is <span class=\"k\">for</span> project developers.  Use -Wno-dev to suppress it.\n</pre></div>\n\n\n<p>And this: </p>\n<div class=\"codehilite language-bash\"><pre><span></span>CMake Warning <span class=\"o\">(</span>dev<span class=\"o\">)</span> in vrx/vrx_gazebo/msgs/CMakeLists.txt:\n  Policy CMP0071 is not set: Let AUTOMOC and AUTOUIC process GENERATED files.\n  Run <span class=\"s2\">&quot;cmake --help-policy CMP0071&quot;</span> <span class=\"k\">for</span> policy details.  Use the cmake_policy\n  <span class=\"nb\">command</span> to <span class=\"nb\">set</span> the policy and suppress this warning.\n\n  For compatibility, CMake is excluding the GENERATED <span class=\"nb\">source</span> file<span class=\"o\">(</span>s<span class=\"o\">)</span>:\n\n    <span class=\"s2\">&quot;/home/CYBERNET/ewills/gazebo_sims/tautog3/build/vrx/vrx_gazebo/msgs/light_buoy_colors.pb.cc&quot;</span>\n    <span class=\"s2\">&quot;/home/CYBERNET/ewills/gazebo_sims/tautog3/build/vrx/vrx_gazebo/msgs/dock_placard.pb.cc&quot;</span>\n    <span class=\"s2\">&quot;/home/CYBERNET/ewills/gazebo_sims/tautog3/build/vrx/vrx_gazebo/msgs/header.pb.cc&quot;</span>\n    <span class=\"s2\">&quot;/home/CYBERNET/ewills/gazebo_sims/tautog3/build/vrx/vrx_gazebo/msgs/time.pb.cc&quot;</span>\n\n  from processing by AUTOMOC and AUTOUIC.  If any of the files should be\n  processed, <span class=\"nb\">set</span> CMP0071 to NEW.  If any of the files should not be\n  processed, explicitly exclude them by setting the <span class=\"nb\">source</span> file property\n  SKIP_AUTOGEN:\n\n    set_property<span class=\"o\">(</span>SOURCE file.h PROPERTY SKIP_AUTOGEN ON<span class=\"o\">)</span>\n\nThis warning is <span class=\"k\">for</span> project developers.  Use -Wno-dev to suppress it.\n</pre></div>\n\n\n<p>Along with this target fail:</p>\n<div class=\"codehilite language-bash\"><pre><span></span>CMake Warning <span class=\"o\">(</span>dev<span class=\"o\">)</span> at vrx/vrx_gazebo/CMakeLists.txt:118 <span class=\"o\">(</span>add_dependencies<span class=\"o\">)</span>:\n  Policy CMP0046 is not set: Error on non-existent dependency in\n  add_dependencies.  Run <span class=\"s2\">&quot;cmake --help-policy CMP0046&quot;</span> <span class=\"k\">for</span> policy details.\n  Use the cmake_policy <span class=\"nb\">command</span> to <span class=\"nb\">set</span> the policy and suppress this warning.\n\n  The dependency target <span class=\"s2\">&quot;vrx_gazebo_generate_services_cpp&quot;</span> of target\n  <span class=\"s2\">&quot;scoring_plugin&quot;</span> does not exist.\nThis warning is <span class=\"k\">for</span> project developers.  Use -Wno-dev to suppress it\n</pre></div>\n\n\n<p>Which eventually gives:</p>\n<div class=\"codehilite language-bash\"><pre><span></span><span class=\"o\">[</span>  <span class=\"m\">1</span>%<span class=\"o\">]</span> Built target wamv_description__xacro_auto_generate_to_devel_space_\nvrx/wamv_gazebo/CMakeFiles/wamv_gazebo__xacro_auto_generate_to_devel_space_.dir/build.make:73: *** unterminated variable reference.  Stop.\nCMakeFiles/Makefile2:122481: recipe <span class=\"k\">for</span> target <span class=\"s1\">&#39;vrx/wamv_gazebo/CMakeFiles/wamv_gazebo__xacro_auto_generate_to_devel_space_.dir/all&#39;</span> failed\nmake<span class=\"o\">[</span><span class=\"m\">1</span><span class=\"o\">]</span>: *** <span class=\"o\">[</span>vrx/wamv_gazebo/CMakeFiles/wamv_gazebo__xacro_auto_generate_to_devel_space_.dir/all<span class=\"o\">]</span> Error <span class=\"m\">2</span>\nMakefile:140: recipe <span class=\"k\">for</span> target <span class=\"s1\">&#39;all&#39;</span> failed\nmake: *** <span class=\"o\">[</span>all<span class=\"o\">]</span> Error <span class=\"m\">2</span>\n</pre></div>\n\n\n<p>Could you help clarify what might be going on?\nThank you!</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2020-03-04T21:21:28.676279+00:00", "milestone": null, "updated_on": "2020-04-10T03:37:21.192742+00:00", "type": "issue", "id": 196}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/197/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/197.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/197/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/197/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/197/relocation-of-repository-due-to-ending"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/197/vote"}}, "reporter": {"display_name": "Hashir Zahir", "uuid": "{0033cdb9-ea6e-4c6a-a9ad-d462a485643d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0033cdb9-ea6e-4c6a-a9ad-d462a485643d%7D"}, "html": {"href": "https://bitbucket.org/%7B0033cdb9-ea6e-4c6a-a9ad-d462a485643d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/3c71628af17207fad1dd0ea6280b41f1d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsHZ-5.png"}}, "nickname": "hzahir", "type": "user", "account_id": "557058:6b6463b7-2835-47c7-8c22-fdef36e9e325"}, "title": "Relocation of repository due to ending support of Mercurial", "component": null, "votes": 0, "watches": 1, "content": {"raw": "As most of us may know, [Bitbucket is ending support for Mercurial](https://bitbucket.org/blog/sunsetting-mercurial-support-in-bitbucket) and all mercurial repositories will be removed by June 1, 2020, which is less than 50 days away. Where is the location of next VRX simulator repository?", "markup": "markdown", "html": "<p>As most of us may know, <a data-is-external-link=\"true\" href=\"https://bitbucket.org/blog/sunsetting-mercurial-support-in-bitbucket\" rel=\"nofollow\">Bitbucket is ending support for Mercurial</a> and all mercurial repositories will be removed by June 1, 2020, which is less than 50 days away. Where is the location of next VRX simulator repository?</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2020-04-10T04:04:49.327470+00:00", "milestone": null, "updated_on": "2020-04-10T04:10:50.716167+00:00", "type": "issue", "id": 197}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/198/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/198.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/198/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/198/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/198/imu-readings-reported-wrongly-in-different"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/198/vote"}}, "reporter": {"display_name": "Hashir Zahir", "uuid": "{0033cdb9-ea6e-4c6a-a9ad-d462a485643d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0033cdb9-ea6e-4c6a-a9ad-d462a485643d%7D"}, "html": {"href": "https://bitbucket.org/%7B0033cdb9-ea6e-4c6a-a9ad-d462a485643d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/3c71628af17207fad1dd0ea6280b41f1d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsHZ-5.png"}}, "nickname": "hzahir", "type": "user", "account_id": "557058:6b6463b7-2835-47c7-8c22-fdef36e9e325"}, "title": "IMU readings reported wrongly in different Roll/Pitch", "component": {"name": "Plugin", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519936.json"}}}, "votes": 0, "watches": 1, "content": {"raw": "This is a related issue to [Issue 188](#!/osrf/vrx/issues/188/), which has already been resolved in [pull request 216](#!/osrf/vrx/pull-requests/216/fix-issue-188/diff). However, I notice some strange behavior.\r\n\r\nUsing revolute joints fixed the issue \\(mostly\\) or so I thought as I have discovered a bug. Rotations in yaw for the IMU plugin work perfectly with this new fix \\(the fixed joint method reports inaccurate readings\\), however, rotations in pitch or roll result in incorrect readings from the IMU.\r\n\r\nFor example, using\u00a0`<xacro:wamv_imu name=\"imu_wamv\" y=\"-0.2\" R=\"3.14159\"/>`\u00a0where the roll is set to 180 degrees instead of yaw, the raw readings reported by the IMU plugin is \\(r,p,y\\) = \\(0,0, 2.76\\) when the correct readings are supposed to be \\(r,p,y\\) = \\(0,0,-2.76\\) \\(notice the yaw has been flipped/inverted\\). This does not make sense since physical IMU has been flipped 180 degrees. Setting an arbitary value of rpy in the macro results in even more disastrous readings.\r\n\r\nExample:\u00a0`<xacro:wamv_imu name=\"imu_wamv\" y=\"-0.2\" R=\"1\" P=\"0\" Y=\"0\"/>`\r\n\r\nresults in rpy = \\(1.966, -0.319, -2.928\\), when the actual reading should have been rpy = \\(1,0,-2.76\\).\r\n\r\nCan someone help to verify this behavior? And also any ideas on a possible fix? This is more for teams whose real life IMU provide NED data and hence the IMU link is provided with rpy = \\(3.14,0,0\\) but unfortunately the plugin doesnt seem to respond well to roll or pitch. Thanks.", "markup": "markdown", "html": "<p>This is a related issue to <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/issues/188/\" rel=\"nofollow\">Issue 188</a>, which has already been resolved in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/pull-requests/216/fix-issue-188/diff\" rel=\"nofollow\">pull request 216</a>. However, I notice some strange behavior.</p>\n<p>Using revolute joints fixed the issue (mostly) or so I thought as I have discovered a bug. Rotations in yaw for the IMU plugin work perfectly with this new fix (the fixed joint method reports inaccurate readings), however, rotations in pitch or roll result in incorrect readings from the IMU.</p>\n<p>For example, using\u00a0<code>&lt;xacro:wamv_imu name=\"imu_wamv\" y=\"-0.2\" R=\"3.14159\"/&gt;</code>\u00a0where the roll is set to 180 degrees instead of yaw, the raw readings reported by the IMU plugin is (r,p,y) = (0,0, 2.76) when the correct readings are supposed to be (r,p,y) = (0,0,-2.76) (notice the yaw has been flipped/inverted). This does not make sense since physical IMU has been flipped 180 degrees. Setting an arbitary value of rpy in the macro results in even more disastrous readings.</p>\n<p>Example:\u00a0<code>&lt;xacro:wamv_imu name=\"imu_wamv\" y=\"-0.2\" R=\"1\" P=\"0\" Y=\"0\"/&gt;</code></p>\n<p>results in rpy = (1.966, -0.319, -2.928), when the actual reading should have been rpy = (1,0,-2.76).</p>\n<p>Can someone help to verify this behavior? And also any ideas on a possible fix? This is more for teams whose real life IMU provide NED data and hence the IMU link is provided with rpy = (3.14,0,0) but unfortunately the plugin doesnt seem to respond well to roll or pitch. Thanks.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2020-04-10T08:50:02.057977+00:00", "milestone": null, "updated_on": "2020-04-10T11:58:43.175175+00:00", "type": "issue", "id": 198}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/199/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/199.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/199/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/199/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/199/when-running-rviz-tutorial-there-is-an"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/199/vote"}}, "reporter": {"display_name": "kartikyem", "uuid": "{7047ed48-3de8-4eb1-8cfc-136e85db052b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B7047ed48-3de8-4eb1-8cfc-136e85db052b%7D"}, "html": {"href": "https://bitbucket.org/%7B7047ed48-3de8-4eb1-8cfc-136e85db052b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/3e410f1314daa81598bd44eacce9224dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsK-2.png"}}, "nickname": "kartikyem", "type": "user", "account_id": "557058:65c79248-5707-4b6b-ba8b-6e05fd519b67"}, "title": "When running RVIZ tutorial, there is an issue with the lidar", "component": {"name": "Rendering", "links": {"self": {"href": "data/repositories/osrf/vrx/components/519938.json"}}}, "votes": 1, "watches": 1, "content": {"raw": "I was following the RVIZ Visualization tutorial but I am getting this when i run the localization\\_example launch file\r\n\r\n\u200c\r\n\r\n```\r\nSUMMARY\r\n========\r\n\r\nPARAMETERS\r\n * /rosdistro: melodic\r\n * /rosversion: 1.14.5\r\n * /wamv/rob_st_pub/tf_prefix: wamv\r\n * /wamv/robot_localization/ekf_localization/base_link_frame: wamv/base_link\r\n * /wamv/robot_localization/ekf_localization/frequency: 60\r\n * /wamv/robot_localization/ekf_localization/imu0: /wamv/sensors/imu...\r\n * /wamv/robot_localization/ekf_localization/imu0_config: [False, False, Fa...\r\n * /wamv/robot_localization/ekf_localization/imu0_differential: False\r\n * /wamv/robot_localization/ekf_localization/imu0_remove_gravitational_acceleration: True\r\n * /wamv/robot_localization/ekf_localization/map_frame: map\r\n * /wamv/robot_localization/ekf_localization/odom0: /wamv/robot_local...\r\n * /wamv/robot_localization/ekf_localization/odom0_config: [True, True, True...\r\n * /wamv/robot_localization/ekf_localization/odom0_differential: False\r\n * /wamv/robot_localization/ekf_localization/odom_frame: wamv/odom\r\n * /wamv/robot_localization/ekf_localization/publish_tf: True\r\n * /wamv/robot_localization/ekf_localization/sensor_timeout: 2.0\r\n * /wamv/robot_localization/ekf_localization/smooth_lagged_data: True\r\n * /wamv/robot_localization/ekf_localization/two_d_mode: False\r\n * /wamv/robot_localization/ekf_localization/world_frame: wamv/odom\r\n * /wamv/robot_localization/navsat_transform_node/broadcast_utm_transform: True\r\n * /wamv/robot_localization/navsat_transform_node/datum: [21.30996, -157.8...\r\n * /wamv/robot_localization/navsat_transform_node/frequency: 60\r\n * /wamv/robot_localization/navsat_transform_node/magnetic_declination_radians: 0\r\n * /wamv/robot_localization/navsat_transform_node/publish_filtered_gps: True\r\n * /wamv/robot_localization/navsat_transform_node/tf_prefix: wamv\r\n * /wamv/robot_localization/navsat_transform_node/use_odometry_yaw: True\r\n * /wamv/robot_localization/navsat_transform_node/wait_for_datum: True\r\n * /wamv/robot_localization/navsat_transform_node/yaw_offset: 0\r\n\r\nNODES\r\n  /wamv/\r\n    rob_st_pub (robot_state_publisher/robot_state_publisher)\r\n  /wamv/robot_localization/\r\n    ekf_localization (robot_localization/ekf_localization_node)\r\n    navsat_transform_node (robot_localization/navsat_transform_node)\r\n\r\nROS_MASTER_URI=http://localhost:11311\r\n\r\nprocess[wamv/rob_st_pub-1]: started with pid [28019]\r\nprocess[wamv/robot_localization/ekf_localization-2]: started with pid [28020]\r\nprocess[wamv/robot_localization/navsat_transform_node-3]: started with pid [28021]\r\n[ INFO] [1586938296.221095324]: Waiting for valid clock time...\r\n[ WARN] [1586938296.419463825, 4.750000000]: Failed to meet update rate! Took 4.75\r\n[ WARN] [1586938296.420346868, 4.751000000]: Failed to meet update rate! Took 4.7343333330000003656\r\n[ INFO] [1586938296.423336602, 4.754000000]: Valid clock time received. Starting node.\r\n[ INFO] [1586938296.429349504, 4.760000000]: Datum (latitude, longitude, altitude) is (21.309960, -157.890100, 0.000000)\r\n[ INFO] [1586938296.429373975, 4.760000000]: Datum UTM coordinate is (615116.100362, 2356857.621317)\r\n[ INFO] [1586938296.429398980, 4.760000000]: Initial odometry pose is Origin: (0 0 0)\r\nRotation (RPY): (0, -0, 0)\r\n\r\n[ INFO] [1586938296.449062582, 4.780000000]: Corrected for magnetic declination of 0.000000, user-specified offset of 0.000000 and meridian convergence of 0.007041. Transform heading factor is now 0.007041\r\n[ INFO] [1586938296.449117712, 4.780000000]: Transform world frame pose is: Origin: (0 0 0)\r\nRotation (RPY): (0, -0, 0)\r\n\r\n[ INFO] [1586938296.449178137, 4.780000000]: World frame->utm transform is Origin: (-631694.38578621379565 -2352468.4624987612478 0)\r\nRotation (RPY): (0, 0, -0.0070405899472914101195)\r\n\r\n[ WARN] [1586938296.469491573, 4.800000000]: Could not obtain transform from wamv/imu_wamv_link to wamv/base_link. Error was \"wamv/imu_wamv_link\" passed to lookupTransform argument source_frame does not exist. \r\n\r\n[ WARN] [1586938298.471959678, 6.800000000]: Could not obtain transform from wamv/imu_wamv_link to wamv/base_link. Error was \"wamv/imu_wamv_link\" passed to lookupTransform argument source_frame does not exist. \r\n```\r\n\r\nIn RVIZ, the silouhette of the WAM-V is shown with errors under imu and pointcloud2.", "markup": "markdown", "html": "<p>I was following the RVIZ Visualization tutorial but I am getting this when i run the localization_example launch file</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span>SUMMARY\n========\n\nPARAMETERS\n * /rosdistro: melodic\n * /rosversion: 1.14.5\n * /wamv/rob_st_pub/tf_prefix: wamv\n * /wamv/robot_localization/ekf_localization/base_link_frame: wamv/base_link\n * /wamv/robot_localization/ekf_localization/frequency: 60\n * /wamv/robot_localization/ekf_localization/imu0: /wamv/sensors/imu...\n * /wamv/robot_localization/ekf_localization/imu0_config: [False, False, Fa...\n * /wamv/robot_localization/ekf_localization/imu0_differential: False\n * /wamv/robot_localization/ekf_localization/imu0_remove_gravitational_acceleration: True\n * /wamv/robot_localization/ekf_localization/map_frame: map\n * /wamv/robot_localization/ekf_localization/odom0: /wamv/robot_local...\n * /wamv/robot_localization/ekf_localization/odom0_config: [True, True, True...\n * /wamv/robot_localization/ekf_localization/odom0_differential: False\n * /wamv/robot_localization/ekf_localization/odom_frame: wamv/odom\n * /wamv/robot_localization/ekf_localization/publish_tf: True\n * /wamv/robot_localization/ekf_localization/sensor_timeout: 2.0\n * /wamv/robot_localization/ekf_localization/smooth_lagged_data: True\n * /wamv/robot_localization/ekf_localization/two_d_mode: False\n * /wamv/robot_localization/ekf_localization/world_frame: wamv/odom\n * /wamv/robot_localization/navsat_transform_node/broadcast_utm_transform: True\n * /wamv/robot_localization/navsat_transform_node/datum: [21.30996, -157.8...\n * /wamv/robot_localization/navsat_transform_node/frequency: 60\n * /wamv/robot_localization/navsat_transform_node/magnetic_declination_radians: 0\n * /wamv/robot_localization/navsat_transform_node/publish_filtered_gps: True\n * /wamv/robot_localization/navsat_transform_node/tf_prefix: wamv\n * /wamv/robot_localization/navsat_transform_node/use_odometry_yaw: True\n * /wamv/robot_localization/navsat_transform_node/wait_for_datum: True\n * /wamv/robot_localization/navsat_transform_node/yaw_offset: 0\n\nNODES\n  /wamv/\n    rob_st_pub (robot_state_publisher/robot_state_publisher)\n  /wamv/robot_localization/\n    ekf_localization (robot_localization/ekf_localization_node)\n    navsat_transform_node (robot_localization/navsat_transform_node)\n\nROS_MASTER_URI=http://localhost:11311\n\nprocess[wamv/rob_st_pub-1]: started with pid [28019]\nprocess[wamv/robot_localization/ekf_localization-2]: started with pid [28020]\nprocess[wamv/robot_localization/navsat_transform_node-3]: started with pid [28021]\n[ INFO] [1586938296.221095324]: Waiting for valid clock time...\n[ WARN] [1586938296.419463825, 4.750000000]: Failed to meet update rate! Took 4.75\n[ WARN] [1586938296.420346868, 4.751000000]: Failed to meet update rate! Took 4.7343333330000003656\n[ INFO] [1586938296.423336602, 4.754000000]: Valid clock time received. Starting node.\n[ INFO] [1586938296.429349504, 4.760000000]: Datum (latitude, longitude, altitude) is (21.309960, -157.890100, 0.000000)\n[ INFO] [1586938296.429373975, 4.760000000]: Datum UTM coordinate is (615116.100362, 2356857.621317)\n[ INFO] [1586938296.429398980, 4.760000000]: Initial odometry pose is Origin: (0 0 0)\nRotation (RPY): (0, -0, 0)\n\n[ INFO] [1586938296.449062582, 4.780000000]: Corrected for magnetic declination of 0.000000, user-specified offset of 0.000000 and meridian convergence of 0.007041. Transform heading factor is now 0.007041\n[ INFO] [1586938296.449117712, 4.780000000]: Transform world frame pose is: Origin: (0 0 0)\nRotation (RPY): (0, -0, 0)\n\n[ INFO] [1586938296.449178137, 4.780000000]: World frame-&gt;utm transform is Origin: (-631694.38578621379565 -2352468.4624987612478 0)\nRotation (RPY): (0, 0, -0.0070405899472914101195)\n\n[ WARN] [1586938296.469491573, 4.800000000]: Could not obtain transform from wamv/imu_wamv_link to wamv/base_link. Error was &quot;wamv/imu_wamv_link&quot; passed to lookupTransform argument source_frame does not exist. \n\n[ WARN] [1586938298.471959678, 6.800000000]: Could not obtain transform from wamv/imu_wamv_link to wamv/base_link. Error was &quot;wamv/imu_wamv_link&quot; passed to lookupTransform argument source_frame does not exist. \n</pre></div>\n\n\n<p>In RVIZ, the silouhette of the WAM-V is shown with errors under imu and pointcloud2.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2020-04-15T08:15:58.185918+00:00", "milestone": null, "updated_on": "2020-05-01T09:58:24.966831+00:00", "type": "issue", "id": 199}], "page": 2, "size": 199}