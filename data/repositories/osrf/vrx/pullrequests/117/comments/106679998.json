{"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/117/comments/106679998.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/117/_/diff#comment-106679998"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 117, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/117.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/117"}}, "title": "updating to new ros key using PGP block format"}, "content": {"raw": "I think the normal thing to do is to run something like:\n\napt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key <KEY\\_ID>\n\nto import the correct key. \\(See the[ ROS installation instructions on the ROS wiki.](http://wiki.ros.org/melodic/Installation/Ubuntu)\\). \n\nHowever, we had a problem with the keyserver being down a significant amount of the time, which causes the docker build to fail, so instead we decided to store a local copy of the key. The problem with this approach is that we need to update the key ourselves when it changes.\n\nThat said, it\u2019s very likely that whoever made the local copy did it the way you did, since it seems that the ros.key stored there is in the binary format \\(and the text version, which would also work, is called ros.asc\\). Could you point me to the source of this method? My guess is that it predates the use of the key server.\n\nAnyway, to answer your question: we could go back to fetching the key on the fly, but if we do that my opinion is that it\u2019s a little better to use the keyserver. My preference is to keep using a local file, however, and just update it.", "markup": "markdown", "html": "<p>I think the normal thing to do is to run something like:</p>\n<p>apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key &lt;KEY_ID&gt;</p>\n<p>to import the correct key. (See the<a data-is-external-link=\"true\" href=\"http://wiki.ros.org/melodic/Installation/Ubuntu\" rel=\"nofollow\"> ROS installation instructions on the ROS wiki.</a>). </p>\n<p>However, we had a problem with the keyserver being down a significant amount of the time, which causes the docker build to fail, so instead we decided to store a local copy of the key. The problem with this approach is that we need to update the key ourselves when it changes.</p>\n<p>That said, it\u2019s very likely that whoever made the local copy did it the way you did, since it seems that the ros.key stored there is in the binary format (and the text version, which would also work, is called ros.asc). Could you point me to the source of this method? My guess is that it predates the use of the key server.</p>\n<p>Anyway, to answer your question: we could go back to fetching the key on the fly, but if we do that my opinion is that it\u2019s a little better to use the keyserver. My preference is to keep using a local file, however, and just update it.</p>", "type": "rendered"}, "created_on": "2019-06-21T22:03:13.530015+00:00", "user": {"display_name": "Michael McCarrin", "uuid": "{3c3f500d-bbf6-472c-b8f7-627e5eabc226}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D"}, "html": {"href": "https://bitbucket.org/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a50abc93a3175f92c79e7521dfe089c0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "m1chaelm", "type": "user", "account_id": "5b2a9176467c9a09caa71ab1"}, "updated_on": "2019-06-21T22:03:13.538973+00:00", "type": "pullrequest_comment", "id": 106679998}