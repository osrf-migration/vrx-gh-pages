{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105023080.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105023080"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "**Visually how should the joint rotation look?**\n\nIn [ca84d54](#!/osrf/vrx/commits/ca84d540be92894f13cff217dd3832d20a05b4ba?at=default), the entire engine joint is rotated as shown below \\(using pi/2 maxAngle clipping\\) notice that a \\+ve angle represents a counter-clockwise \\(ccw\\) rotatoin and a -ve angle represents a clockwise \\(cw\\) rotation.\n\n![](data/bitbucket.org/repo/BgXLzgM/images/1428711604-Thrust_Angle_2.png)\n\u200c\n\n![](data/bitbucket.org/repo/BgXLzgM/images/1816953020-Set_Thrust_Angle_1.png)\n\u200c\n\n![](data/bitbucket.org/repo/BgXLzgM/images/3365972240-Thrust_Angle_3.png)\n", "markup": "markdown", "html": "<p><strong>Visually how should the joint rotation look?</strong></p>\n<p>In <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/ca84d540be92894f13cff217dd3832d20a05b4ba?at=default\" rel=\"nofollow\">ca84d54</a>, the entire engine joint is rotated as shown below (using pi/2 maxAngle clipping) notice that a +ve angle represents a counter-clockwise (ccw) rotatoin and a -ve angle represents a clockwise (cw) rotation.</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1428711604-Thrust_Angle_2.png\" />\n\u200c</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1816953020-Set_Thrust_Angle_1.png\" />\n\u200c</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3365972240-Thrust_Angle_3.png\" /></p>", "type": "rendered"}, "created_on": "2019-06-09T21:04:10.148732+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-09T21:54:51.162500+00:00", "type": "pullrequest_comment", "id": 105023080}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105023712.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105023712"}}, "parent": {"id": 105023080, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105023080.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105023080"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "I tested leaving the engine link stationary and rotating the propelling link around, but it did not look very good. \n\n![](data/bitbucket.org/repo/BgXLzgM/images/3002633930-Moving_propeller_Joint.png)\nThe issue is because the cylinder part is part of the engine.dae file, not the propeller, as shown below. This could be resolved by removing the cylinder from the engine.dae file and making it a new .dae file that better aligns with the propeller as it moves around, but I do not think it is worth doing. \n\n![](data/bitbucket.org/repo/BgXLzgM/images/162865701-Engine_Joint.png)\n", "markup": "markdown", "html": "<p>I tested leaving the engine link stationary and rotating the propelling link around, but it did not look very good. </p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3002633930-Moving_propeller_Joint.png\" />\nThe issue is because the cylinder part is part of the engine.dae file, not the propeller, as shown below. This could be resolved by removing the cylinder from the engine.dae file and making it a new .dae file that better aligns with the propeller as it moves around, but I do not think it is worth doing. </p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/162865701-Engine_Joint.png\" /></p>", "type": "rendered"}, "created_on": "2019-06-09T21:53:16.014968+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-09T21:53:16.022958+00:00", "type": "pullrequest_comment", "id": 105023712}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105023131.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105023131"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "For the revolute joint,  I currently have the limit tag : `<limit lower=\"${-pi}\" upper=\"${pi}\" effort=\"10\" velocity=\"10\"/>`\n\n* Lower and upper are chosen to be -pi and pi. The ACTUAL upper and lower limits are controlled by the `<maxAngle>`. This simply allows full range of motion at a joint level, but then through subscribing to `<name>_thrust_angle`, the actual angle is limited to \\[-maxAngle, maxAngle\\]\n* Effort and velocity were chosen arbitrarily to be 10, as I did not have a reference to the mechanism of the rotation. Please let me know if we have more information about this or if this important. \n\n", "markup": "markdown", "html": "<p>For the revolute joint,  I currently have the limit tag : <code>&lt;limit lower=\"${-pi}\" upper=\"${pi}\" effort=\"10\" velocity=\"10\"/&gt;</code></p>\n<ul>\n<li>Lower and upper are chosen to be -pi and pi. The ACTUAL upper and lower limits are controlled by the <code>&lt;maxAngle&gt;</code>. This simply allows full range of motion at a joint level, but then through subscribing to <code>&lt;name&gt;_thrust_angle</code>, the actual angle is limited to [-maxAngle, maxAngle]</li>\n<li>Effort and velocity were chosen arbitrarily to be 10, as I did not have a reference to the mechanism of the rotation. Please let me know if we have more information about this or if this important. </li>\n</ul>", "type": "rendered"}, "created_on": "2019-06-09T21:08:28.212610+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-09T21:08:28.219447+00:00", "type": "pullrequest_comment", "id": 105023131}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105023221.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105023221"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Another TODO is to resolve the build issues. Essentially, Gazebo 7 and 9 seem to use different methods for setting joint angles. I believe:\n\n* Gazebo 7 uses `void gazebo::physics::Joint::SetAngle(unsigned int _index, math::Angle _angle)` OR `virtual bool gazebo::physics::Joint::SetPosition(unsigned int _index, double _position)`\n* Gazebo 9 uses `virtual bool void gazebo::physics::Joint::SetPosition(const unsigned int _index, const double _position, const bool _preserveWorldVelocity=false)`\n\nI need to set `const bool _preserveWorldVelocity` to `true` so that the boat is not stationary \\(maintains its previous velocity. If not set, default false => the boat was immobile\\). I am not sure what behavior happens in Gazebo 7 without having this parameters. The api no longer matches, so I likely need to have a `#if GAZEBO_MAJOR_VERSION >= 8` statement to do this right, but I may need some support ensuring it not only builds but actually works on Gazebo 7. Thank you\n\n[http://osrf-distributions.s3.amazonaws.com/gazebo/api/4.0.0/classgazebo\\_1\\_1physics\\_1\\_1Joint.html#a5dd5194c47634dde3daf11344b120c32](http://osrf-distributions.s3.amazonaws.com/gazebo/api/4.0.0/classgazebo_1_1physics_1_1Joint.html#a5dd5194c47634dde3daf11344b120c32)\n\n[https://osrf-distributions.s3.amazonaws.com/gazebo/api/dev/classgazebo\\_1\\_1physics\\_1\\_1Joint.html#ad02e021e1745f416f45e13024925714a](https://osrf-distributions.s3.amazonaws.com/gazebo/api/dev/classgazebo_1_1physics_1_1Joint.html#ad02e021e1745f416f45e13024925714a)", "markup": "markdown", "html": "<p>Another TODO is to resolve the build issues. Essentially, Gazebo 7 and 9 seem to use different methods for setting joint angles. I believe:</p>\n<ul>\n<li>Gazebo 7 uses <code>void gazebo::physics::Joint::SetAngle(unsigned int _index, math::Angle _angle)</code> OR <code>virtual bool gazebo::physics::Joint::SetPosition(unsigned int _index, double _position)</code></li>\n<li>Gazebo 9 uses <code>virtual bool void gazebo::physics::Joint::SetPosition(const unsigned int _index, const double _position, const bool _preserveWorldVelocity=false)</code></li>\n</ul>\n<p>I need to set <code>const bool _preserveWorldVelocity</code> to <code>true</code> so that the boat is not stationary (maintains its previous velocity. If not set, default false =&gt; the boat was immobile). I am not sure what behavior happens in Gazebo 7 without having this parameters. The api no longer matches, so I likely need to have a <code>#if GAZEBO_MAJOR_VERSION &gt;= 8</code> statement to do this right, but I may need some support ensuring it not only builds but actually works on Gazebo 7. Thank you</p>\n<p><a data-is-external-link=\"true\" href=\"http://osrf-distributions.s3.amazonaws.com/gazebo/api/4.0.0/classgazebo_1_1physics_1_1Joint.html#a5dd5194c47634dde3daf11344b120c32\" rel=\"nofollow\">http://osrf-distributions.s3.amazonaws.com/gazebo/api/4.0.0/classgazebo_1_1physics_1_1Joint.html#a5dd5194c47634dde3daf11344b120c32</a></p>\n<p><a data-is-external-link=\"true\" href=\"https://osrf-distributions.s3.amazonaws.com/gazebo/api/dev/classgazebo_1_1physics_1_1Joint.html#ad02e021e1745f416f45e13024925714a\" rel=\"nofollow\">https://osrf-distributions.s3.amazonaws.com/gazebo/api/dev/classgazebo_1_1physics_1_1Joint.html#ad02e021e1745f416f45e13024925714a</a></p>", "type": "rendered"}, "created_on": "2019-06-09T21:15:42.492405+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-09T22:04:17.207183+00:00", "type": "pullrequest_comment", "id": 105023221}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105024345.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105024345"}}, "parent": {"id": 105023221, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105023221.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105023221"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "I have tried using `SetAngle()` but it did not work either. \n\n```\n      // Set the thruster engine joint angle\n      #if GAZEBO_MAJOR_VERSION >= 8\n        this->thrusters[i].engineJoint->SetPosition(0, this->thrusters[i].currAngle, true);\n      #else\n        this->thrusters[i].engineJoint->SetAngle(0, gazebo::math::Angle(this->thrusters[i].currAngle));\n      #endif\n```\n\nI ended up using `SetPosition()`, which worked\n\n```\n      // Set the thruster engine joint angle\n      #if GAZEBO_MAJOR_VERSION >= 8\n        this->thrusters[i].engineJoint->SetPosition(0, this->thrusters[i].currAngle, true);\n      #else\n        this->thrusters[i].engineJoint->SetPosition(0, this->thrusters[i].currAngle);\n      #endif\n```\n\nbut I am not sure if the stationary effect still happens. I will try exploring the PID force method, which would fix this issue.", "markup": "markdown", "html": "<p>I have tried using <code>SetAngle()</code> but it did not work either. </p>\n<div class=\"codehilite\"><pre><span></span>      <span class=\"o\">//</span> <span class=\"nt\">Set</span> <span class=\"nt\">the</span> <span class=\"nt\">thruster</span> <span class=\"nt\">engine</span> <span class=\"nt\">joint</span> <span class=\"nt\">angle</span>\n      <span class=\"p\">#</span><span class=\"nn\">if</span> <span class=\"nt\">GAZEBO_MAJOR_VERSION</span> <span class=\"o\">&gt;=</span> <span class=\"nt\">8</span>\n        <span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">thrusters</span><span class=\"cp\">[</span><span class=\"nx\">i</span><span class=\"cp\">]</span><span class=\"p\">.</span><span class=\"nc\">engineJoint-</span><span class=\"o\">&gt;</span><span class=\"nt\">SetPosition</span><span class=\"o\">(</span><span class=\"nt\">0</span><span class=\"o\">,</span> <span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">thrusters</span><span class=\"cp\">[</span><span class=\"nx\">i</span><span class=\"cp\">]</span><span class=\"p\">.</span><span class=\"nc\">currAngle</span><span class=\"o\">,</span> <span class=\"nt\">true</span><span class=\"o\">);</span>\n      <span class=\"p\">#</span><span class=\"nn\">else</span>\n        <span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">thrusters</span><span class=\"cp\">[</span><span class=\"nx\">i</span><span class=\"cp\">]</span><span class=\"p\">.</span><span class=\"nc\">engineJoint-</span><span class=\"o\">&gt;</span><span class=\"nt\">SetAngle</span><span class=\"o\">(</span><span class=\"nt\">0</span><span class=\"o\">,</span> <span class=\"nt\">gazebo</span><span class=\"p\">::</span><span class=\"nd\">math</span><span class=\"p\">::</span><span class=\"nd\">Angle</span><span class=\"o\">(</span><span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">thrusters</span><span class=\"cp\">[</span><span class=\"nx\">i</span><span class=\"cp\">]</span><span class=\"p\">.</span><span class=\"nc\">currAngle</span><span class=\"o\">));</span>\n      <span class=\"p\">#</span><span class=\"nn\">endif</span>\n</pre></div>\n\n\n<p>I ended up using <code>SetPosition()</code>, which worked</p>\n<div class=\"codehilite\"><pre><span></span>      // Set the thruster engine joint angle\n      #if GAZEBO_MAJOR_VERSION &gt;= 8\n        this-&gt;thrusters[i].engineJoint-&gt;SetPosition(0, this-&gt;thrusters[i].currAngle, true);\n      #else\n        this-&gt;thrusters[i].engineJoint-&gt;SetPosition(0, this-&gt;thrusters[i].currAngle);\n      #endif\n</pre></div>\n\n\n<p>but I am not sure if the stationary effect still happens. I will try exploring the PID force method, which would fix this issue.</p>", "type": "rendered"}, "created_on": "2019-06-09T22:38:22.963606+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-09T22:38:22.971907+00:00", "type": "pullrequest_comment", "id": 105024345}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105167590.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105167590"}}, "parent": {"id": 105024345, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105024345.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105024345"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Implemented PID force method, works quite well.", "markup": "markdown", "html": "<p>Implemented PID force method, works quite well.</p>", "type": "rendered"}, "created_on": "2019-06-11T00:23:03.127093+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-11T00:23:03.138339+00:00", "type": "pullrequest_comment", "id": 105167590}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105024047.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105024047"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "in [http://answers.gazebosim.org/question/14793/how-to-set-a-joint-position-and-and-a-joint-force-at-the-same-time-is-it-feasible-with-the-current-api/](http://answers.gazebosim.org/question/14793/how-to-set-a-joint-position-and-and-a-joint-force-at-the-same-time-is-it-feasible-with-the-current-api), it is mentioned that\n\n_In general, you don't want to use \\`SetPosition\\` on a joint. The \\`SetPosition\\` function bypasses the physics engine, and performs some teleportation of child links. You should apply forces to joints and write a controller to achieve desired joint angles_\n\nI feel that my implementation is working and is all we need, but do you think it is better to use forces with PID control to move joints or simply move them the way I have?\n\nPID control of joints: [http://answers.gazebosim.org/question/2341/set-and-get-position-of-gazebo-model-using-ros-plugin/](http://answers.gazebosim.org/question/2341/set-and-get-position-of-gazebo-model-using-ros-plugin/)", "markup": "markdown", "html": "<p>in <a data-is-external-link=\"true\" href=\"http://answers.gazebosim.org/question/14793/how-to-set-a-joint-position-and-and-a-joint-force-at-the-same-time-is-it-feasible-with-the-current-api\" rel=\"nofollow\">http://answers.gazebosim.org/question/14793/how-to-set-a-joint-position-and-and-a-joint-force-at-the-same-time-is-it-feasible-with-the-current-api/</a>, it is mentioned that</p>\n<p><em>In general, you don't want to use `SetPosition` on a joint. The `SetPosition` function bypasses the physics engine, and performs some teleportation of child links. You should apply forces to joints and write a controller to achieve desired joint angles</em></p>\n<p>I feel that my implementation is working and is all we need, but do you think it is better to use forces with PID control to move joints or simply move them the way I have?</p>\n<p>PID control of joints: <a data-is-external-link=\"true\" href=\"http://answers.gazebosim.org/question/2341/set-and-get-position-of-gazebo-model-using-ros-plugin/\" rel=\"nofollow\">http://answers.gazebosim.org/question/2341/set-and-get-position-of-gazebo-model-using-ros-plugin/</a></p>", "type": "rendered"}, "created_on": "2019-06-09T22:17:18.525869+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-09T22:23:52.083837+00:00", "type": "pullrequest_comment", "id": 105024047}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105167662.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105167662"}}, "parent": {"id": 105024047, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105024047.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105024047"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "I have implemented the PID force method in [0437021](#!/osrf/vrx/commits/043702102adc09fd8168593b63ee96b9f3e5fee1?at=default). I tuned the PID controller to respond quite quickly. Overall I believe it is the more \u201ccorrect\u201d solution, as SetPosition\\(\\) for the old Gazebo version might reset the velocity of the joint to 0 each update.", "markup": "markdown", "html": "<p>I have implemented the PID force method in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/043702102adc09fd8168593b63ee96b9f3e5fee1?at=default\" rel=\"nofollow\">0437021</a>. I tuned the PID controller to respond quite quickly. Overall I believe it is the more \u201ccorrect\u201d solution, as SetPosition() for the old Gazebo version might reset the velocity of the joint to 0 each update.</p>", "type": "rendered"}, "created_on": "2019-06-11T00:24:33.924734+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-11T00:24:33.933596+00:00", "type": "pullrequest_comment", "id": 105167662}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105501191.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105501191"}}, "parent": {"id": 105167662, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105167662.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105167662"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Agreed - I like the idea of having a PID controller for the joint as that is analogous to the physical implementation.  Theoretically folks could re-tune the PID gains to get representative of the empirical physical response.", "markup": "markdown", "html": "<p>Agreed - I like the idea of having a PID controller for the joint as that is analogous to the physical implementation.  Theoretically folks could re-tune the PID gains to get representative of the empirical physical response.</p>", "type": "rendered"}, "created_on": "2019-06-12T20:49:48.410107+00:00", "user": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "updated_on": "2019-06-12T20:49:48.420342+00:00", "type": "pullrequest_comment", "id": 105501191}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105691221.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105691221"}}, "parent": {"id": 105501191, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105501191.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105501191"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Great thanks for the feedback.", "markup": "markdown", "html": "<p>Great thanks for the feedback.</p>", "type": "rendered"}, "created_on": "2019-06-13T23:54:49.846908+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-13T23:54:49.858092+00:00", "type": "pullrequest_comment", "id": 105691221}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105167723.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105167723"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "This PR should be complete. Please let me know if there is any room for improvement. \\(is there a C\\+\\+ lint tool to ensure my changes match the desired style?\\) \\(is the PID setting of angle valid?\\)", "markup": "markdown", "html": "<p>This PR should be complete. Please let me know if there is any room for improvement. (is there a C++ lint tool to ensure my changes match the desired style?) (is the PID setting of angle valid?)</p>", "type": "rendered"}, "created_on": "2019-06-11T00:26:03.136362+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-11T00:26:03.189764+00:00", "type": "pullrequest_comment", "id": 105167723}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105167789.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105167789"}}, "parent": {"id": 105167723, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105167723.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105167723"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "* Is the method of setting the maxAngle clear and valid?\n* Is the rotation joint visually valid?\n\n", "markup": "markdown", "html": "<ul>\n<li>Is the method of setting the maxAngle clear and valid?</li>\n<li>Is the rotation joint visually valid?</li>\n</ul>", "type": "rendered"}, "created_on": "2019-06-11T00:27:27.818767+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-11T00:27:27.932613+00:00", "type": "pullrequest_comment", "id": 105167789}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105503761.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105503761"}}, "parent": {"id": 105167789, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105167789.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105167789"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "* Setting the maxAngle parameter seems clear and valid to me.  I think clipping/clamp is the most intuitive behavior.\n* Based on a quick visual check the rotation joint looks correct to me.\n\n", "markup": "markdown", "html": "<ul>\n<li>Setting the maxAngle parameter seems clear and valid to me.  I think clipping/clamp is the most intuitive behavior.</li>\n<li>Based on a quick visual check the rotation joint looks correct to me.</li>\n</ul>", "type": "rendered"}, "created_on": "2019-06-12T21:15:49.510978+00:00", "user": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "updated_on": "2019-06-12T21:15:49.522077+00:00", "type": "pullrequest_comment", "id": 105503761}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105502518.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105502518"}}, "parent": {"id": 105167723, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105167723.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105167723"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "* There is a lint tool for Gazebo - see `sh tools/code_check.sh ` at [http://gazebosim.org/tutorials?tut=contrib\\_code&cat=development#Style](http://gazebosim.org/tutorials?tut=contrib_code&cat=development#Style)  \n  We\u2019ve been toying with the idea of customizing that and including it within VRX as a way to help with style consistency.\n* Doing a quick visual check the PID settings look good to me.  They are definitely snappy - maybe quicker than a typical electromechanical implementation, but I think that is a good place to start.\n\n      \n\n\n\n", "markup": "markdown", "html": "<ul>\n<li>There is a lint tool for Gazebo - see <code>sh tools/code_check.sh</code> at <a data-is-external-link=\"true\" href=\"http://gazebosim.org/tutorials?tut=contrib_code&amp;cat=development#Style\" rel=\"nofollow\">http://gazebosim.org/tutorials?tut=contrib_code&amp;cat=development#Style</a><br />\n  We\u2019ve been toying with the idea of customizing that and including it within VRX as a way to help with style consistency.</li>\n<li>Doing a quick visual check the PID settings look good to me.  They are definitely snappy - maybe quicker than a typical electromechanical implementation, but I think that is a good place to start.</li>\n</ul>", "type": "rendered"}, "created_on": "2019-06-12T21:03:11.407405+00:00", "user": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "updated_on": "2019-06-12T21:03:11.418012+00:00", "type": "pullrequest_comment", "id": 105502518}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105690789.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105690789"}}, "parent": {"id": 105502518, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105502518.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105502518"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "The `code_check.sh` script is already in `default`. Make sure that your code is clean. I see a few minor errors. [#!/osrf/vrx/addon/pipelines/home#!/results/207](#!/osrf/vrx/addon/pipelines/home#!/results/207)", "markup": "markdown", "html": "<p>The <code>code_check.sh</code> script is already in <code>default</code>. Make sure that your code is clean. I see a few minor errors. <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/addon/pipelines/home#!/results/207\" rel=\"nofollow\">#!/osrf/vrx/addon/pipelines/home#!/results/207</a></p>", "type": "rendered"}, "created_on": "2019-06-13T23:46:20.375947+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-06-13T23:47:27.295432+00:00", "type": "pullrequest_comment", "id": 105690789}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105727086.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105727086"}}, "parent": {"id": 105690789, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105690789.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105690789"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Thanks Carlos, these issues have been addressed in [c14ccdf](#!/osrf/vrx/commits/c14ccdf58db85bb0f777578f79e4c6af1cd146ba)", "markup": "markdown", "html": "<p>Thanks Carlos, these issues have been addressed in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/c14ccdf58db85bb0f777578f79e4c6af1cd146ba\" rel=\"nofollow\">c14ccdf</a></p>", "type": "rendered"}, "created_on": "2019-06-14T08:14:30.693186+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-14T08:14:30.705987+00:00", "type": "pullrequest_comment", "id": 105727086}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105814341.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105814341"}}, "parent": {"id": 105502518, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105502518.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105502518"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Maybe a value of `200-300` as P gain is a bit more realistic.", "markup": "markdown", "html": "<p>Maybe a value of <code>200-300</code> as P gain is a bit more realistic.</p>", "type": "rendered"}, "created_on": "2019-06-14T17:35:20.869918+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-06-14T17:35:20.884606+00:00", "type": "pullrequest_comment", "id": 105814341}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105818616.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105818616"}}, "parent": {"id": 105814341, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105814341.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105814341"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Yeah good point. I initially wanted the responsiveness to be super high, but you\u2019re right it is not realistic. I lowered the P gain to 300 and tuned the D gain to work without oscillation in [7ba323f](#!/osrf/vrx/commits/7ba323f97a6e15b9008cb5f66e34a6566897c2ea).", "markup": "markdown", "html": "<p>Yeah good point. I initially wanted the responsiveness to be super high, but you\u2019re right it is not realistic. I lowered the P gain to 300 and tuned the D gain to work without oscillation in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/7ba323f97a6e15b9008cb5f66e34a6566897c2ea\" rel=\"nofollow\">7ba323f</a>.</p>", "type": "rendered"}, "created_on": "2019-06-14T18:16:46.312650+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-14T18:16:46.325948+00:00", "type": "pullrequest_comment", "id": 105818616}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105503243.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/diff/osrf/vrx:28c7583fbddb..497f2d17aaa9?path=usv_gazebo_plugins%2Finclude%2Fusv_gazebo_plugins%2Fusv_gazebo_thrust_plugin.hh"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105503243"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "* Should clarify that <cmdTopic> is the thrust command , typically within \\[-1.0 , 1.0\\]\n* Should probably add <angleTopic> and description as a required topic.\n\n", "markup": "markdown", "html": "<ul>\n<li>Should clarify that &lt;cmdTopic&gt; is the thrust command , typically within [-1.0 , 1.0]</li>\n<li>Should probably add &lt;angleTopic&gt; and description as a required topic.</li>\n</ul>", "type": "rendered"}, "created_on": "2019-06-12T21:10:29.503808+00:00", "user": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "inline": {"to": null, "from": 104, "path": "usv_gazebo_plugins/include/usv_gazebo_plugins/usv_gazebo_thrust_plugin.hh"}, "updated_on": "2019-06-12T21:10:29.510733+00:00", "type": "pullrequest_comment", "id": 105503243}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105691786.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/diff/osrf/vrx:a73038507858..f66016894202?path=usv_gazebo_plugins%2Finclude%2Fusv_gazebo_plugins%2Fusv_gazebo_thrust_plugin.hh"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105691786"}}, "parent": {"id": 105503243, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105503243.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105503243"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Great, resolved in [a730385](#!/osrf/vrx/commits/a7303850785837e4c99814d23dbce036bf4e5270)", "markup": "markdown", "html": "<p>Great, resolved in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/a7303850785837e4c99814d23dbce036bf4e5270\" rel=\"nofollow\">a730385</a></p>", "type": "rendered"}, "created_on": "2019-06-14T00:05:43.722714+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "inline": {"to": null, "from": 104, "path": "usv_gazebo_plugins/include/usv_gazebo_plugins/usv_gazebo_thrust_plugin.hh"}, "updated_on": "2019-06-14T00:05:43.735632+00:00", "type": "pullrequest_comment", "id": 105691786}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105503495.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/diff/osrf/vrx:28c7583fbddb..497f2d17aaa9?path=usv_gazebo_plugins%2Finclude%2Fusv_gazebo_plugins%2Fusv_gazebo_thrust_plugin.hh"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105503495"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Should add <maxAngle> as an optional topic.  Looks like default is pi/2.", "markup": "markdown", "html": "<p>Should add &lt;maxAngle&gt; as an optional topic.  Looks like default is pi/2.</p>", "type": "rendered"}, "created_on": "2019-06-12T21:13:02.409483+00:00", "user": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "inline": {"to": null, "from": 113, "path": "usv_gazebo_plugins/include/usv_gazebo_plugins/usv_gazebo_thrust_plugin.hh"}, "updated_on": "2019-06-12T21:13:02.469634+00:00", "type": "pullrequest_comment", "id": 105503495}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105691792.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/diff/osrf/vrx:a73038507858..f66016894202?path=usv_gazebo_plugins%2Finclude%2Fusv_gazebo_plugins%2Fusv_gazebo_thrust_plugin.hh"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105691792"}}, "parent": {"id": 105503495, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105503495.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105503495"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Added in [a730385](#!/osrf/vrx/commits/a7303850785837e4c99814d23dbce036bf4e5270) thanks for noticing", "markup": "markdown", "html": "<p>Added in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/a7303850785837e4c99814d23dbce036bf4e5270\" rel=\"nofollow\">a730385</a> thanks for noticing</p>", "type": "rendered"}, "created_on": "2019-06-14T00:05:55.307540+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "inline": {"to": null, "from": 113, "path": "usv_gazebo_plugins/include/usv_gazebo_plugins/usv_gazebo_thrust_plugin.hh"}, "updated_on": "2019-06-14T00:05:55.319224+00:00", "type": "pullrequest_comment", "id": 105691792}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105503999.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/diff/osrf/vrx:28c7583fbddb..497f2d17aaa9?path=usv_gazebo_plugins%2Finclude%2Fusv_gazebo_plugins%2Fusv_gazebo_thrust_plugin.hh"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105503999"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Should add <maxAngle> tags to example.", "markup": "markdown", "html": "<p>Should add &lt;maxAngle&gt; tags to example.</p>", "type": "rendered"}, "created_on": "2019-06-12T21:18:00.211938+00:00", "user": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "inline": {"to": null, "from": 115, "path": "usv_gazebo_plugins/include/usv_gazebo_plugins/usv_gazebo_thrust_plugin.hh"}, "updated_on": "2019-06-12T21:18:00.219992+00:00", "type": "pullrequest_comment", "id": 105503999}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105691805.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/diff/osrf/vrx:a73038507858..f66016894202?path=usv_gazebo_plugins%2Finclude%2Fusv_gazebo_plugins%2Fusv_gazebo_thrust_plugin.hh"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105691805"}}, "parent": {"id": 105503999, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105503999.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105503999"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Added in [a730385](#!/osrf/vrx/commits/a7303850785837e4c99814d23dbce036bf4e5270) thanks for noticing", "markup": "markdown", "html": "<p>Added in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/a7303850785837e4c99814d23dbce036bf4e5270\" rel=\"nofollow\">a730385</a> thanks for noticing</p>", "type": "rendered"}, "created_on": "2019-06-14T00:06:03.317072+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "inline": {"to": null, "from": 115, "path": "usv_gazebo_plugins/include/usv_gazebo_plugins/usv_gazebo_thrust_plugin.hh"}, "updated_on": "2019-06-14T00:06:03.327738+00:00", "type": "pullrequest_comment", "id": 105691805}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105504345.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/diff/osrf/vrx:28c7583fbddb..497f2d17aaa9?path=usv_gazebo_plugins%2Fsrc%2Fusv_gazebo_thrust_plugin.cc"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105504345"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Probably just my opinion, but giving the context, for this logging would recommend using gzwarn, gzerr, gzdbg, etc. instead of the the ROS logging. I think that is consistent with the  SDF parsing in the other plugins.", "markup": "markdown", "html": "<p>Probably just my opinion, but giving the context, for this logging would recommend using gzwarn, gzerr, gzdbg, etc. instead of the the ROS logging. I think that is consistent with the  SDF parsing in the other plugins.</p>", "type": "rendered"}, "created_on": "2019-06-12T21:21:41.625904+00:00", "user": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "inline": {"to": 181, "from": null, "path": "usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc"}, "updated_on": "2019-06-12T21:21:41.637007+00:00", "type": "pullrequest_comment", "id": 105504345}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105728739.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/diff/osrf/vrx:4fcbadace733..f66016894202?path=usv_gazebo_plugins%2Fsrc%2Fusv_gazebo_thrust_plugin.cc"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105728739"}}, "parent": {"id": 105504345, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105504345.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105504345"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "I see that makes sense. I chose to do `ROS_WARN_STREAM()` simply because all of other SDF parsing parts of this file used it. They do not currently have `gzerr` or `gzwarn`. Should I replace them all? If so, I can easily do so, and I may do it for the other usv plugins that are doing ROS logging.\n\n![](data/bitbucket.org/repo/BgXLzgM/images/683611762-ROS_WARN.png)\n![](data/bitbucket.org/repo/BgXLzgM/images/1251474901-gzwarn.png)\n\u200c\n\n![](data/bitbucket.org/repo/BgXLzgM/images/1467141651-gzerr.png)\n", "markup": "markdown", "html": "<p>I see that makes sense. I chose to do <code>ROS_WARN_STREAM()</code> simply because all of other SDF parsing parts of this file used it. They do not currently have <code>gzerr</code> or <code>gzwarn</code>. Should I replace them all? If so, I can easily do so, and I may do it for the other usv plugins that are doing ROS logging.</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/683611762-ROS_WARN.png\" />\n<img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1251474901-gzwarn.png\" />\n\u200c</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1467141651-gzerr.png\" /></p>", "type": "rendered"}, "created_on": "2019-06-14T08:24:38.000362+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "inline": {"to": 181, "from": null, "path": "usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc"}, "updated_on": "2019-06-14T08:24:38.017344+00:00", "type": "pullrequest_comment", "id": 105728739}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105505140.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105505140"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Could we add a boolean parameter <enableAngle> - if true, would allow changing thrust angle via ROS API - if false, would disable this functionality \\(fixed thrust angle\\)?   The default would be false.\n\nThis may be an important capability as we define the set of \u2018standard\u2019 propulsion configurations for VRX.  For example, we may not what them to have four thrusters that all articulate.  ", "markup": "markdown", "html": "<p>Could we add a boolean parameter &lt;enableAngle&gt; - if true, would allow changing thrust angle via ROS API - if false, would disable this functionality (fixed thrust angle)?   The default would be false.</p>\n<p>This may be an important capability as we define the set of \u2018standard\u2019 propulsion configurations for VRX.  For example, we may not what them to have four thrusters that all articulate.  </p>", "type": "rendered"}, "created_on": "2019-06-12T21:31:17.431702+00:00", "user": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "updated_on": "2019-06-12T21:31:17.439168+00:00", "type": "pullrequest_comment", "id": 105505140}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105727047.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105727047"}}, "parent": {"id": 105505140, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105505140.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105505140"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Great idea. I have added the <enableAngle> bool parameter in [4fcbada](#!/osrf/vrx/commits/4fcbadace733172f351fc07ee9f5c6e7311979ff)", "markup": "markdown", "html": "<p>Great idea. I have added the &lt;enableAngle&gt; bool parameter in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/4fcbadace733172f351fc07ee9f5c6e7311979ff\" rel=\"nofollow\">4fcbada</a></p>", "type": "rendered"}, "created_on": "2019-06-14T08:14:12.380626+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-14T08:14:12.396138+00:00", "type": "pullrequest_comment", "id": 105727047}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105505596.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105505596"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Could you add a demonstration tutorial to illustrate this new functionality?  I started a new page linked off of [#!/osrf/vrx/wiki/tutorials](#!/osrf/vrx/wiki/tutorials) - under Thruster Articulation.\n\nAlso, would it be within the scope of this PR to extend the teleop functionality to allow for controlling thruster angle \\(see [Driving tutorial](#!/osrf/vrx/wiki/tutorials/Driving)\\). It would be slick if we could use a gamepad to control the thruster commands and their angle.  I\u2019m imagining to keep it simple you\u2019d have one axis of the gamepad send ROS commands to both of the thruster angle topics - so the two thrusters would move in unison.  \n\nOtherwise, looks great to me.  I think the teams will be excited to have this new function.", "markup": "markdown", "html": "<p>Could you add a demonstration tutorial to illustrate this new functionality?  I started a new page linked off of <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/wiki/tutorials\" rel=\"nofollow\">#!/osrf/vrx/wiki/tutorials</a> - under Thruster Articulation.</p>\n<p>Also, would it be within the scope of this PR to extend the teleop functionality to allow for controlling thruster angle (see <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/wiki/tutorials/Driving\" rel=\"nofollow\">Driving tutorial</a>). It would be slick if we could use a gamepad to control the thruster commands and their angle.  I\u2019m imagining to keep it simple you\u2019d have one axis of the gamepad send ROS commands to both of the thruster angle topics - so the two thrusters would move in unison.  </p>\n<p>Otherwise, looks great to me.  I think the teams will be excited to have this new function.</p>", "type": "rendered"}, "created_on": "2019-06-12T21:36:28.714901+00:00", "user": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "updated_on": "2019-06-12T21:36:28.721354+00:00", "type": "pullrequest_comment", "id": 105505596}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105814387.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105814387"}}, "parent": {"id": 105505596, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105505596.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105505596"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Agreed on extending the teleoperation node. This looks very good by the way!", "markup": "markdown", "html": "<p>Agreed on extending the teleoperation node. This looks very good by the way!</p>", "type": "rendered"}, "created_on": "2019-06-14T17:35:47.511523+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-06-14T17:35:47.524502+00:00", "type": "pullrequest_comment", "id": 105814387}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105824560.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105824560"}}, "parent": {"id": 105814387, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105814387.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105814387"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Good to hear thanks Carlos! I will start working on the teleop functionality. ", "markup": "markdown", "html": "<p>Good to hear thanks Carlos! I will start working on the teleop functionality. </p>", "type": "rendered"}, "created_on": "2019-06-14T19:22:16.923068+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-14T19:22:16.936127+00:00", "type": "pullrequest_comment", "id": 105824560}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105838936.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105838936"}}, "parent": {"id": 105814387, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105814387.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105814387"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "I have added the teleop functionality using the keyboard in [939df5d](#!/osrf/vrx/commits/939df5dfe84d530aae2dea6d9b2a1f0ddf47ac5b). It defaults to the same functionality as before \\(fixed thruster angles\\). If you add the `set_thrust_angle` parameter, then you can change the thrust angle with `h` and `;`\n\n`roslaunch vrx_gazebo usv_keydrive.launch set_thrust_angle:=true`\n\nThen in [80d34cd](#!/osrf/vrx/commits/80d34cdbe0385a0e63cf0cc0c9785b3879613d88), I added the ability to change the speed of thrust\\_angle change \\( `r`/ `v` for increase/decrease\\)\n\nThen in [d42d773](#!/osrf/vrx/commits/d42d7736fc6e04c6112d1297606e13167be7bd6e), I added the `max_angle` parameter than defaults to pi/2.\n\n`roslaunch vrx_gazebo usv_keydrive.launch set_thrust_angle:=true max_angle:=3.1415`\n\n\u200c\n\nI used [https://github.com/ros-teleop/teleop\\_twist\\_keyboard/blob/master/teleop\\_twist\\_keyboard.py](https://github.com/ros-teleop/teleop_twist_keyboard/blob/master/teleop_twist_keyboard.py) as a reference for reading keys.", "markup": "markdown", "html": "<p>I have added the teleop functionality using the keyboard in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/939df5dfe84d530aae2dea6d9b2a1f0ddf47ac5b\" rel=\"nofollow\">939df5d</a>. It defaults to the same functionality as before (fixed thruster angles). If you add the <code>set_thrust_angle</code> parameter, then you can change the thrust angle with <code>h</code> and <code>;</code></p>\n<p><code>roslaunch vrx_gazebo usv_keydrive.launch set_thrust_angle:=true</code></p>\n<p>Then in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/80d34cdbe0385a0e63cf0cc0c9785b3879613d88\" rel=\"nofollow\">80d34cd</a>, I added the ability to change the speed of thrust_angle change ( <code>r</code>/ <code>v</code> for increase/decrease)</p>\n<p>Then in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/d42d7736fc6e04c6112d1297606e13167be7bd6e\" rel=\"nofollow\">d42d773</a>, I added the <code>max_angle</code> parameter than defaults to pi/2.</p>\n<p><code>roslaunch vrx_gazebo usv_keydrive.launch set_thrust_angle:=true max_angle:=3.1415</code></p>\n<p>\u200c</p>\n<p>I used <a data-is-external-link=\"true\" href=\"https://github.com/ros-teleop/teleop_twist_keyboard/blob/master/teleop_twist_keyboard.py\" rel=\"nofollow\">https://github.com/ros-teleop/teleop_twist_keyboard/blob/master/teleop_twist_keyboard.py</a> as a reference for reading keys.</p>", "type": "rendered"}, "created_on": "2019-06-14T23:08:17.842243+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-14T23:31:56.404432+00:00", "type": "pullrequest_comment", "id": 105838936}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105839048.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105839048"}}, "parent": {"id": 105814387, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105814387.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105814387"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "![](data/bitbucket.org/repo/BgXLzgM/images/2078951548-Printed_From_Teleop_Key.png)\n_Figure 1: Original instructions from teleop\\_key. It shows instructions clear, then only prints again if linear/angular speed changes \\(no prints from regular movement commands\\)_\n\n---\n\n![](data/bitbucket.org/repo/BgXLzgM/images/2693075715-Print_From_New.png)\n_Figure 2: Output from new launch file \\(both old and new node\\). Notice that pressing h/; does not lead to prints, but changing angular speed \\(r/v\\) does. One issue I have is that the original instructions are now very messy. Do you have any idea why this might be? They print independently from one another._", "markup": "markdown", "html": "<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/2078951548-Printed_From_Teleop_Key.png\" />\n<em>Figure 1: Original instructions from teleop_key. It shows instructions clear, then only prints again if linear/angular speed changes (no prints from regular movement commands)</em></p>\n<hr />\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/2693075715-Print_From_New.png\" />\n<em>Figure 2: Output from new launch file (both old and new node). Notice that pressing h/; does not lead to prints, but changing angular speed (r/v) does. One issue I have is that the original instructions are now very messy. Do you have any idea why this might be? They print independently from one another.</em></p>", "type": "rendered"}, "created_on": "2019-06-14T23:12:59.482769+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-14T23:12:59.498940+00:00", "type": "pullrequest_comment", "id": 105839048}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105840785.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105840785"}}, "parent": {"id": 105814387, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105814387.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105814387"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "I have added untested teleop functionality using the joystick in [ead4637](#!/osrf/vrx/commits/ead4637bbfc793db9724b62e681f7a8ca3a38f7d). It retains the same default functionality \\(fixed thruster angles\\). It has a `set_thrust_angle` parameter that can be set to `true` to read and publish angles.\n\n`roslaunch vrx_gazebo usv_keydrive.launch set_thrust_angle:=true`\n\nIt also has a `max_angle` parameter that I am not sure will be able to be used.\n\nIt is untested because I do not have a controller with me right now and I could not find a workable virtual controller on Linux.\n\n**Questions**\n\n* `scale` in the yaml file will surely need to be adjusted \\(maybe proportional to desired max\\_angle?\\)\n* Is this method of choosing to keep fixed or adjustable thruster angle valid or is there a better way?\n* I cannot test it without a controller \\(may look to buy one this weekend\\), but how are the axes?\n\n    * Currently the .yaml file has \n    \n        * `axis 1 => linear.x` \\(left stick up/down\\)\n        * `axis 3 => angular.z ` \\(right stick up/down\\)\n        \n    * I added\n    \n        * `axis 2 => data` \\(of left and right thruster angle\\) \\(right stick left/right\\)\n        \n    * Does this work? Would it actually be better to have the linear.x and angular.z both be on the left stick \\(i imagine using left/right instead of up/down may be nice for turning with angular.z, but I haven\u2019t tried it\\)\n    \n        * If changed, could have \n        \n            * `axis 1 => linear.x` \\(left stick up/down\\)\n            * `axis 0 => angular.z ` \\(left stick right/left\\)\n            * `axis 2 => data` \\(of left and right thruster angle\\) \\(right stick left/right\\)\n            \n        \n    \n\n![](data/bitbucket.org/repo/BgXLzgM/images/308228509-Joy_Axes.png)\n_Figure 1: Joy Axes_", "markup": "markdown", "html": "<p>I have added untested teleop functionality using the joystick in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/ead4637bbfc793db9724b62e681f7a8ca3a38f7d\" rel=\"nofollow\">ead4637</a>. It retains the same default functionality (fixed thruster angles). It has a <code>set_thrust_angle</code> parameter that can be set to <code>true</code> to read and publish angles.</p>\n<p><code>roslaunch vrx_gazebo usv_keydrive.launch set_thrust_angle:=true</code></p>\n<p>It also has a <code>max_angle</code> parameter that I am not sure will be able to be used.</p>\n<p>It is untested because I do not have a controller with me right now and I could not find a workable virtual controller on Linux.</p>\n<p><strong>Questions</strong></p>\n<ul>\n<li><code>scale</code> in the yaml file will surely need to be adjusted (maybe proportional to desired max_angle?)</li>\n<li>Is this method of choosing to keep fixed or adjustable thruster angle valid or is there a better way?</li>\n<li>\n<p>I cannot test it without a controller (may look to buy one this weekend), but how are the axes?</p>\n<ul>\n<li>\n<p>Currently the .yaml file has </p>\n<ul>\n<li><code>axis 1 =&gt; linear.x</code> (left stick up/down)</li>\n<li><code>axis 3 =&gt; angular.z</code> (right stick up/down)</li>\n</ul>\n</li>\n<li>\n<p>I added</p>\n<ul>\n<li><code>axis 2 =&gt; data</code> (of left and right thruster angle) (right stick left/right)</li>\n</ul>\n</li>\n<li>\n<p>Does this work? Would it actually be better to have the linear.x and angular.z both be on the left stick (i imagine using left/right instead of up/down may be nice for turning with angular.z, but I haven\u2019t tried it)</p>\n<ul>\n<li>\n<p>If changed, could have </p>\n<ul>\n<li><code>axis 1 =&gt; linear.x</code> (left stick up/down)</li>\n<li><code>axis 0 =&gt; angular.z</code> (left stick right/left)</li>\n<li><code>axis 2 =&gt; data</code> (of left and right thruster angle) (right stick left/right)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/308228509-Joy_Axes.png\" />\n<em>Figure 1: Joy Axes</em></p>", "type": "rendered"}, "created_on": "2019-06-15T00:31:23.029220+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-15T00:31:23.040431+00:00", "type": "pullrequest_comment", "id": 105840785}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/106013515.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-106013515"}}, "parent": {"id": 105505596, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105505596.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105505596"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "I have added a demonstration tutorial and description for Thruster Articulation at [#!/osrf/vrx/wiki/tutorials/thruster\\_articulation](#!/osrf/vrx/wiki/tutorials/thruster_articulation). Let me know how it looks!", "markup": "markdown", "html": "<p>I have added a demonstration tutorial and description for Thruster Articulation at <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/wiki/tutorials/thruster_articulation\" rel=\"nofollow\">#!/osrf/vrx/wiki/tutorials/thruster_articulation</a>. Let me know how it looks!</p>", "type": "rendered"}, "created_on": "2019-06-17T21:48:49.590634+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-17T21:48:49.601729+00:00", "type": "pullrequest_comment", "id": 106013515}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105812030.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/diff/osrf/vrx:4fcbadace733..f66016894202?path=usv_gazebo_plugins%2Fsrc%2Fusv_gazebo_thrust_plugin.cc"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105812030"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Can you use `std::clamp()` instead? You could also remove the `include <boost/...>.`", "markup": "markdown", "html": "<p>Can you use <code>std::clamp()</code> instead? You could also remove the <code>include &lt;boost/...&gt;.</code></p>", "type": "rendered"}, "created_on": "2019-06-14T17:13:34.104085+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {"to": 80, "from": null, "path": "usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc"}, "updated_on": "2019-06-14T17:13:34.110699+00:00", "type": "pullrequest_comment", "id": 105812030}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105820407.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/diff/osrf/vrx:7ba323f97a6e..f66016894202?path=usv_gazebo_plugins%2Fsrc%2Fusv_gazebo_thrust_plugin.cc"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105820407"}}, "parent": {"id": 105812030, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105812030.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105812030"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "I really wanted to use `std::clamp()` as well because it is so much cleaner, but I ran into issues. With it: \n\n![](data/bitbucket.org/repo/BgXLzgM/images/1086412532-Clamp_Diff.png)\n_Figure 1: Diff showing change to std::clamp_\n\n---\n\n![](data/bitbucket.org/repo/BgXLzgM/images/1419018517-Clamp_Build_Issue.png)\n_Figure 2: Build issue with std::clamp. Likely related to it being C\\+\\+ 17 only? If you know how to resolve this, please let me know._\n\n---\n\n \n\n![](data/bitbucket.org/repo/BgXLzgM/images/2235339551-C_17_Clamp.png)\n_Figure 3: std::clamp documentation. I thought this should work, only issue I see is that it\u2019s only since C\\+\\+ 17_\n\nDo you know how to resolve this? This is originally why I chose the boost clamp.", "markup": "markdown", "html": "<p>I really wanted to use <code>std::clamp()</code> as well because it is so much cleaner, but I ran into issues. With it: </p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1086412532-Clamp_Diff.png\" />\n<em>Figure 1: Diff showing change to std::clamp</em></p>\n<hr />\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1419018517-Clamp_Build_Issue.png\" />\n<em>Figure 2: Build issue with std::clamp. Likely related to it being C++ 17 only? If you know how to resolve this, please let me know.</em></p>\n<hr />\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/2235339551-C_17_Clamp.png\" />\n<em>Figure 3: std::clamp documentation. I thought this should work, only issue I see is that it\u2019s only since C++ 17</em></p>\n<p>Do you know how to resolve this? This is originally why I chose the boost clamp.</p>", "type": "rendered"}, "created_on": "2019-06-14T18:36:28.847331+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "inline": {"to": 80, "from": null, "path": "usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc"}, "updated_on": "2019-06-14T18:36:28.858285+00:00", "type": "pullrequest_comment", "id": 105820407}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105820669.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/diff/osrf/vrx:7ba323f97a6e..f66016894202?path=usv_gazebo_plugins%2Fsrc%2Fusv_gazebo_thrust_plugin.cc"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105820669"}}, "parent": {"id": 105812030, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105812030.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105812030"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "![](data/bitbucket.org/repo/BgXLzgM/images/1033484654-Required_Diff.png)\n_Figure 4: Based on Figure 1, it offered_ `ignition::math::v4::clamp`, _but to maintain gazebo 7 support and to avoid errors related to float32->double implicit casting, it would need to be something like this, which is much more verbose_", "markup": "markdown", "html": "<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1033484654-Required_Diff.png\" />\n<em>Figure 4: Based on Figure 1, it offered</em> <code>ignition::math::v4::clamp</code>, <em>but to maintain gazebo 7 support and to avoid errors related to float32-&gt;double implicit casting, it would need to be something like this, which is much more verbose</em></p>", "type": "rendered"}, "created_on": "2019-06-14T18:39:07.877948+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "inline": {"to": 80, "from": null, "path": "usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc"}, "updated_on": "2019-06-14T18:39:07.886786+00:00", "type": "pullrequest_comment", "id": 105820669}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105820868.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/diff/osrf/vrx:7ba323f97a6e..f66016894202?path=usv_gazebo_plugins%2Fsrc%2Fusv_gazebo_thrust_plugin.cc"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105820868"}}, "parent": {"id": 105820669, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105820669.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105820669"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "You're right, I didn't realize is C\\+\\+17 only. I think your solution using `boost` is better.", "markup": "markdown", "html": "<p>You're right, I didn't realize is C++17 only. I think your solution using <code>boost</code> is better.</p>", "type": "rendered"}, "created_on": "2019-06-14T18:41:13.899013+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {"to": 80, "from": null, "path": "usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc"}, "updated_on": "2019-06-14T18:41:13.910705+00:00", "type": "pullrequest_comment", "id": 105820868}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105812353.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/diff/osrf/vrx:4fcbadace733..f66016894202?path=usv_gazebo_plugins%2Fsrc%2Fusv_gazebo_thrust_plugin.cc"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105812353"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Nit: You can write `if (!thruster.engineJoint)`", "markup": "markdown", "html": "<p>Nit: You can write <code>if (!thruster.engineJoint)</code></p>", "type": "rendered"}, "created_on": "2019-06-14T17:16:25.409621+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {"to": 180, "from": null, "path": "usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc"}, "updated_on": "2019-06-14T17:16:25.420656+00:00", "type": "pullrequest_comment", "id": 105812353}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105824325.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/diff/osrf/vrx:33e3dcc835c4..f66016894202?path=usv_gazebo_plugins%2Fsrc%2Fusv_gazebo_thrust_plugin.cc"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105824325"}}, "parent": {"id": 105812353, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105812353.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105812353"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Fixed in [039a78f](#!/osrf/vrx/commits/039a78f64344be718e3da24802c9a4ce2f402be3)", "markup": "markdown", "html": "<p>Fixed in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/039a78f64344be718e3da24802c9a4ce2f402be3\" rel=\"nofollow\">039a78f</a></p>", "type": "rendered"}, "created_on": "2019-06-14T19:19:34.734881+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "inline": {"to": 180, "from": null, "path": "usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc"}, "updated_on": "2019-06-14T19:19:34.749565+00:00", "type": "pullrequest_comment", "id": 105824325}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105812762.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/diff/osrf/vrx:4fcbadace733..f66016894202?path=usv_gazebo_plugins%2Fsrc%2Fusv_gazebo_thrust_plugin.cc"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105812762"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "For consistency, I'd suggest to use `ROS_ERROR_STREAM` if this is a required parameter \\(according to the documentation it is\\).", "markup": "markdown", "html": "<p>For consistency, I'd suggest to use <code>ROS_ERROR_STREAM</code> if this is a required parameter (according to the documentation it is).</p>", "type": "rendered"}, "created_on": "2019-06-14T17:20:30.183654+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {"to": 193, "from": null, "path": "usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc"}, "updated_on": "2019-06-14T17:20:30.191370+00:00", "type": "pullrequest_comment", "id": 105812762}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105823174.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/diff/osrf/vrx:7247b4325473..f66016894202?path=usv_gazebo_plugins%2Fsrc%2Fusv_gazebo_thrust_plugin.cc"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105823174"}}, "parent": {"id": 105812762, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105812762.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105812762"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Good point. Resolved in [7247b43](#!/osrf/vrx/commits/7247b43254739a826f1175e889c2dca9ddbee404), where I also remove some unused default statements \\(confusing because setting these values did not do anything\\)", "markup": "markdown", "html": "<p>Good point. Resolved in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/7247b43254739a826f1175e889c2dca9ddbee404\" rel=\"nofollow\">7247b43</a>, where I also remove some unused default statements (confusing because setting these values did not do anything)</p>", "type": "rendered"}, "created_on": "2019-06-14T19:06:42.126358+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "inline": {"to": 193, "from": null, "path": "usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc"}, "updated_on": "2019-06-14T19:06:42.141263+00:00", "type": "pullrequest_comment", "id": 105823174}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/106013841.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-106013841"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "This PR is nearly complete, but still needs joy teleop tested and improved. I have a GameCube and PS1 controller at home, but no way to connect it. I may have an Xbox controller around somewhere.", "markup": "markdown", "html": "<p>This PR is nearly complete, but still needs joy teleop tested and improved. I have a GameCube and PS1 controller at home, but no way to connect it. I may have an Xbox controller around somewhere.</p>", "type": "rendered"}, "created_on": "2019-06-17T21:53:11.706306+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-17T21:53:11.712350+00:00", "type": "pullrequest_comment", "id": 106013841}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/106017353.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-106017353"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "I tested it with the controller and works for me! I modified the scale to `-1` because it's more intuitive that way. My only outstanding question is whether is not sufficient with only one version of the `diffdrive.yaml` file \\(including the extra angle configuration\\). [2ff1139](#!/osrf/vrx/commits/2ff11395e753f17d56f72ae04efd8da73065799d)", "markup": "markdown", "html": "<p>I tested it with the controller and works for me! I modified the scale to <code>-1</code> because it's more intuitive that way. My only outstanding question is whether is not sufficient with only one version of the <code>diffdrive.yaml</code> file (including the extra angle configuration). <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/2ff11395e753f17d56f72ae04efd8da73065799d\" rel=\"nofollow\">2ff1139</a></p>", "type": "rendered"}, "created_on": "2019-06-17T22:43:52.105126+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-06-17T23:27:25.082207+00:00", "type": "pullrequest_comment", "id": 106017353}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/106020173.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-106020173"}}, "parent": {"id": 106017353, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/106017353.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-106017353"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "That is great to hear. You make a good point. Originally, I had the keydrive with settable parameters to choose whether or not the thrust angle will be set or not. However, it may make sense to have it _always_ set thrust angle, but if the WAM-V does not subscribe to it, then it simply will not do anything.\n\n**Before:**\n\n`roslaunch vrx_gazebo usv_keydrive.launch set_thrust_angle:=true max_angle:=3.1415`\n\n`roslaunch vrx_gazebo usv_joydrive.launch set_thrust_angle:=true`\n\n**New Change:**\n\n`roslaunch vrx_gazebo usv_keydrive.launch max_angle:=3.1415` \\(optional parameter\\)\n\n`roslaunch vrx_gazebo usv_joydrive.launch`\n\nThis would remove the need for the two yaml files. Is this appropriate, or do you feel that the `set_thrust_angle:=true` option should still exist? To keep the option, I am not sure how else to do this cleanly other than with 2 yamls. It is probably best not to touch the `joy_teleop` source code directly, so this would require creating our own node that reads the joystick for the angle control, very similarly to `joy_teleop` but a bit redundant.\n\nThe only issue I have is that the instructions for use get very messy for some reason when I added the set\\_thrust instructions, as shown in the picture in the other thread. I will make this initial change and try to fix that instruction issue.", "markup": "markdown", "html": "<p>That is great to hear. You make a good point. Originally, I had the keydrive with settable parameters to choose whether or not the thrust angle will be set or not. However, it may make sense to have it <em>always</em> set thrust angle, but if the WAM-V does not subscribe to it, then it simply will not do anything.</p>\n<p><strong>Before:</strong></p>\n<p><code>roslaunch vrx_gazebo usv_keydrive.launch set_thrust_angle:=true max_angle:=3.1415</code></p>\n<p><code>roslaunch vrx_gazebo usv_joydrive.launch set_thrust_angle:=true</code></p>\n<p><strong>New Change:</strong></p>\n<p><code>roslaunch vrx_gazebo usv_keydrive.launch max_angle:=3.1415</code> (optional parameter)</p>\n<p><code>roslaunch vrx_gazebo usv_joydrive.launch</code></p>\n<p>This would remove the need for the two yaml files. Is this appropriate, or do you feel that the <code>set_thrust_angle:=true</code> option should still exist? To keep the option, I am not sure how else to do this cleanly other than with 2 yamls. It is probably best not to touch the <code>joy_teleop</code> source code directly, so this would require creating our own node that reads the joystick for the angle control, very similarly to <code>joy_teleop</code> but a bit redundant.</p>\n<p>The only issue I have is that the instructions for use get very messy for some reason when I added the set_thrust instructions, as shown in the picture in the other thread. I will make this initial change and try to fix that instruction issue.</p>", "type": "rendered"}, "created_on": "2019-06-17T23:29:42.237385+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-17T23:33:26.894771+00:00", "type": "pullrequest_comment", "id": 106020173}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/106025713.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-106025713"}}, "parent": {"id": 106017353, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/106017353.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-106017353"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "In [22912f8](#!/osrf/vrx/commits/22912f86d8058beb016d1890184d4980214429cc), I removed the `set_thrust_angle` parameter, as it was not needed.\n\nIn [77970e7](#!/osrf/vrx/commits/77970e784e90ff120ba23990ff9b2ce62d8578d8), I implemented a new getch function to fix the output issues. It is a bit messier, but fixes the print issues.\n\n![](data/bitbucket.org/repo/BgXLzgM/images/3757867173-Fixed_Output.png)\n  \n_Figure 1: Fixed output_\n\n---\n\n![](data/bitbucket.org/repo/BgXLzgM/images/1255798936-New_Ouptut.png)\n  \n_Figure 2: Fixed output_\n\n---\n\n\u200c\n\n![](data/bitbucket.org/repo/BgXLzgM/images/2350331317-Bad_Ouptut_2.png)\n  \n_Figure 3: Bad output before_\n\n![](data/bitbucket.org/repo/BgXLzgM/images/92727555-Bad_Output.png)\n  \n_Figure 4: Bad output before_\n\nThis was caused by the implementation of reading keys. When both `teleop_twist_keyboard` and `key2thrust_angle` read the key, they would also \"delete\" the output, which is why when you press `r`, `e`, `w`, etc. they did not show to the screen. However, when both nodes were both reading the keys, it lead to issues. This different implementation fixes the issue.", "markup": "markdown", "html": "<p>In <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/22912f86d8058beb016d1890184d4980214429cc\" rel=\"nofollow\">22912f8</a>, I removed the <code>set_thrust_angle</code> parameter, as it was not needed.</p>\n<p>In <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/77970e784e90ff120ba23990ff9b2ce62d8578d8\" rel=\"nofollow\">77970e7</a>, I implemented a new getch function to fix the output issues. It is a bit messier, but fixes the print issues.</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3757867173-Fixed_Output.png\" /></p>\n<p><em>Figure 1: Fixed output</em></p>\n<hr />\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1255798936-New_Ouptut.png\" /></p>\n<p><em>Figure 2: Fixed output</em></p>\n<hr />\n<p>\u200c</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/2350331317-Bad_Ouptut_2.png\" /></p>\n<p><em>Figure 3: Bad output before</em></p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/92727555-Bad_Output.png\" /></p>\n<p><em>Figure 4: Bad output before</em></p>\n<p>This was caused by the implementation of reading keys. When both <code>teleop_twist_keyboard</code> and <code>key2thrust_angle</code> read the key, they would also \"delete\" the output, which is why when you press <code>r</code>, <code>e</code>, <code>w</code>, etc. they did not show to the screen. However, when both nodes were both reading the keys, it lead to issues. This different implementation fixes the issue.</p>", "type": "rendered"}, "created_on": "2019-06-18T01:25:42.922547+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-18T01:33:11.095317+00:00", "type": "pullrequest_comment", "id": 106025713}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/106026307.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-106026307"}}, "parent": {"id": 106017353, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/106017353.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-106017353"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "In [201f800](#!/osrf/vrx/commits/201f800993a4b7242dff9a4d15a8c2828ee2a614), I removed the extra yaml file, keeping only the one that publishes the angle.", "markup": "markdown", "html": "<p>In <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/201f800993a4b7242dff9a4d15a8c2828ee2a614\" rel=\"nofollow\">201f800</a>, I removed the extra yaml file, keeping only the one that publishes the angle.</p>", "type": "rendered"}, "created_on": "2019-06-18T01:36:19.851454+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-18T01:36:19.861054+00:00", "type": "pullrequest_comment", "id": 106026307}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/106026578.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-106026578"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "In [4b7fe53](#!/osrf/vrx/commits/4b7fe535809269e68b401ea8a3c081f135630ef0), I reshow instructions after a certain number of speed updates, matching [https://github.com/ros-teleop/teleop\\_twist\\_keyboard/blob/master/teleop\\_twist\\_keyboard.py](https://github.com/ros-teleop/teleop_twist_keyboard/blob/master/teleop_twist_keyboard.py).\n\nThis PR should be complete, as long as it has been tested with keyboard and joystick.", "markup": "markdown", "html": "<p>In <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/4b7fe535809269e68b401ea8a3c081f135630ef0\" rel=\"nofollow\">4b7fe53</a>, I reshow instructions after a certain number of speed updates, matching <a data-is-external-link=\"true\" href=\"https://github.com/ros-teleop/teleop_twist_keyboard/blob/master/teleop_twist_keyboard.py\" rel=\"nofollow\">https://github.com/ros-teleop/teleop_twist_keyboard/blob/master/teleop_twist_keyboard.py</a>.</p>\n<p>This PR should be complete, as long as it has been tested with keyboard and joystick.</p>", "type": "rendered"}, "created_on": "2019-06-18T01:42:11.580930+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-18T01:42:11.588524+00:00", "type": "pullrequest_comment", "id": 106026578}], "page": 1, "size": 49}