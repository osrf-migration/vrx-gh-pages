{"pagelen": 50, "values": [{"update": {"description": "**Description of Issue**\r\n\r\nWe\u2019d like to extend both the [usv\\_gazebo\\_thrust\\_plugin](#!/osrf/vrx/src/default/usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc) Gazebo model plugin and the [engine.xacro](#!/osrf/vrx/src/default/wamv_description/urdf/engine.xacro) model so that users can change the thrust angle via a ROS API.\r\n\r\n* The thrust plugin would subscribe to a ROS topic, e.g., \u201cleft\\_ thrust\\_angle\u201d, that would set the angular displacement of the thruster.\r\n\r\n    * The angle, in radians, would be relative to the nominal thruster attitude.\r\n    \r\n* The configuration should allow for angle limits \\(e.g., \\+/- pi/2\\) to be set.\r\n* A new rotation joint should be included in the engine model to facilitate the rotation\r\n\r\n    * The plugin would also set the joint rotation so that the visual model reflects the vectored thrust.\r\n    \r\n\r\n**Design Questions**\r\n\r\n1. How should max angle be set? Currently done by changing `<maxAngle>NUMBER</maxAngle>` in `wamv_gazebo_thruster_config.xacro`\r\n2. Thrust commands currently have a `lastCmdTime` to track the time of last command signal and a `cmdTimeout` to describe how long each command should last for before not putting a force anymore. Should there be something similar for angle? eg. if publish `left_thrust_angle=pi/3` and then stop publishing angle, should the angle remain pi/3 until set otherwise, or should it \u201creset\u201d back to `left_thrust_angle=0` if it does not receive angle messages? Currently there is no \u201creset\u201d, it remains at the last published angle\r\n3. What to do if |published angle| > maxAngle? eg. if publish `left_thrust_angle=5*pi/4`, but we have `<maxAngle>${pi/2}</maxAngle>`, what should it do? Output error/warning message and ignore message \\(keep same angle as it previously was\\)? Or clip it \\(if it is >pi/2, then clip to pi/2. If it is <-pi/2, then clip to -pi/2\\).\r\n4. If published angle = 7\\*pi/4 and maxAngle=pi/2, should this be interpreted as -pi/4 or clipped to pi/2 or output error message and ignore? Currently doing clipping.", "title": "Issue#96 Add Thrust Angle and Rotation Joint", "destination": {"commit": {"hash": "52119c274d58", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/52119c274d58.json"}, "html": {"href": "#!/osrf/vrx/commits/52119c274d58"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "4b7fe5358092", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/4b7fe5358092.json"}, "html": {"href": "#!/osrf/vrx/commits/4b7fe5358092"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#96-add-vector-thrust"}}, "state": "MERGED", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2019-06-18T16:13:44.512660+00:00"}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"approval": {"date": "2019-06-18T16:13:35.637832+00:00", "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/106026578.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-106026578"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "In [4b7fe53](#!/osrf/vrx/commits/4b7fe535809269e68b401ea8a3c081f135630ef0), I reshow instructions after a certain number of speed updates, matching [https://github.com/ros-teleop/teleop\\_twist\\_keyboard/blob/master/teleop\\_twist\\_keyboard.py](https://github.com/ros-teleop/teleop_twist_keyboard/blob/master/teleop_twist_keyboard.py).\n\nThis PR should be complete, as long as it has been tested with keyboard and joystick.", "markup": "markdown", "html": "<p>In <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/4b7fe535809269e68b401ea8a3c081f135630ef0\" rel=\"nofollow\">4b7fe53</a>, I reshow instructions after a certain number of speed updates, matching <a data-is-external-link=\"true\" href=\"https://github.com/ros-teleop/teleop_twist_keyboard/blob/master/teleop_twist_keyboard.py\" rel=\"nofollow\">https://github.com/ros-teleop/teleop_twist_keyboard/blob/master/teleop_twist_keyboard.py</a>.</p>\n<p>This PR should be complete, as long as it has been tested with keyboard and joystick.</p>", "type": "rendered"}, "created_on": "2019-06-18T01:42:11.580930+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-18T01:42:11.588524+00:00", "type": "pullrequest_comment", "id": 106026578}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"update": {"description": "**Description of Issue**\r\n\r\nWe\u2019d like to extend both the [usv\\_gazebo\\_thrust\\_plugin](#!/osrf/vrx/src/default/usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc) Gazebo model plugin and the [engine.xacro](#!/osrf/vrx/src/default/wamv_description/urdf/engine.xacro) model so that users can change the thrust angle via a ROS API.\r\n\r\n* The thrust plugin would subscribe to a ROS topic, e.g., \u201cleft\\_ thrust\\_angle\u201d, that would set the angular displacement of the thruster.\r\n\r\n    * The angle, in radians, would be relative to the nominal thruster attitude.\r\n    \r\n* The configuration should allow for angle limits \\(e.g., \\+/- pi/2\\) to be set.\r\n* A new rotation joint should be included in the engine model to facilitate the rotation\r\n\r\n    * The plugin would also set the joint rotation so that the visual model reflects the vectored thrust.\r\n    \r\n\r\n**Design Questions**\r\n\r\n1. How should max angle be set? Currently done by changing `<maxAngle>NUMBER</maxAngle>` in `wamv_gazebo_thruster_config.xacro`\r\n2. Thrust commands currently have a `lastCmdTime` to track the time of last command signal and a `cmdTimeout` to describe how long each command should last for before not putting a force anymore. Should there be something similar for angle? eg. if publish `left_thrust_angle=pi/3` and then stop publishing angle, should the angle remain pi/3 until set otherwise, or should it \u201creset\u201d back to `left_thrust_angle=0` if it does not receive angle messages? Currently there is no \u201creset\u201d, it remains at the last published angle\r\n3. What to do if |published angle| > maxAngle? eg. if publish `left_thrust_angle=5*pi/4`, but we have `<maxAngle>${pi/2}</maxAngle>`, what should it do? Output error/warning message and ignore message \\(keep same angle as it previously was\\)? Or clip it \\(if it is >pi/2, then clip to pi/2. If it is <-pi/2, then clip to -pi/2\\).\r\n4. If published angle = 7\\*pi/4 and maxAngle=pi/2, should this be interpreted as -pi/4 or clipped to pi/2 or output error message and ignore? Currently doing clipping.", "title": "Issue#96 Add Thrust Angle and Rotation Joint", "destination": {"commit": {"hash": "52119c274d58", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/52119c274d58.json"}, "html": {"href": "#!/osrf/vrx/commits/52119c274d58"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "4b7fe5358092", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/4b7fe5358092.json"}, "html": {"href": "#!/osrf/vrx/commits/4b7fe5358092"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#96-add-vector-thrust"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-06-18T01:40:58.281700+00:00"}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/106026307.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-106026307"}}, "parent": {"id": 106017353, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/106017353.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-106017353"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "In [201f800](#!/osrf/vrx/commits/201f800993a4b7242dff9a4d15a8c2828ee2a614), I removed the extra yaml file, keeping only the one that publishes the angle.", "markup": "markdown", "html": "<p>In <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/201f800993a4b7242dff9a4d15a8c2828ee2a614\" rel=\"nofollow\">201f800</a>, I removed the extra yaml file, keeping only the one that publishes the angle.</p>", "type": "rendered"}, "created_on": "2019-06-18T01:36:19.851454+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-18T01:36:19.861054+00:00", "type": "pullrequest_comment", "id": 106026307}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"update": {"description": "**Description of Issue**\r\n\r\nWe\u2019d like to extend both the [usv\\_gazebo\\_thrust\\_plugin](#!/osrf/vrx/src/default/usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc) Gazebo model plugin and the [engine.xacro](#!/osrf/vrx/src/default/wamv_description/urdf/engine.xacro) model so that users can change the thrust angle via a ROS API.\r\n\r\n* The thrust plugin would subscribe to a ROS topic, e.g., \u201cleft\\_ thrust\\_angle\u201d, that would set the angular displacement of the thruster.\r\n\r\n    * The angle, in radians, would be relative to the nominal thruster attitude.\r\n    \r\n* The configuration should allow for angle limits \\(e.g., \\+/- pi/2\\) to be set.\r\n* A new rotation joint should be included in the engine model to facilitate the rotation\r\n\r\n    * The plugin would also set the joint rotation so that the visual model reflects the vectored thrust.\r\n    \r\n\r\n**Design Questions**\r\n\r\n1. How should max angle be set? Currently done by changing `<maxAngle>NUMBER</maxAngle>` in `wamv_gazebo_thruster_config.xacro`\r\n2. Thrust commands currently have a `lastCmdTime` to track the time of last command signal and a `cmdTimeout` to describe how long each command should last for before not putting a force anymore. Should there be something similar for angle? eg. if publish `left_thrust_angle=pi/3` and then stop publishing angle, should the angle remain pi/3 until set otherwise, or should it \u201creset\u201d back to `left_thrust_angle=0` if it does not receive angle messages? Currently there is no \u201creset\u201d, it remains at the last published angle\r\n3. What to do if |published angle| > maxAngle? eg. if publish `left_thrust_angle=5*pi/4`, but we have `<maxAngle>${pi/2}</maxAngle>`, what should it do? Output error/warning message and ignore message \\(keep same angle as it previously was\\)? Or clip it \\(if it is >pi/2, then clip to pi/2. If it is <-pi/2, then clip to -pi/2\\).\r\n4. If published angle = 7\\*pi/4 and maxAngle=pi/2, should this be interpreted as -pi/4 or clipped to pi/2 or output error message and ignore? Currently doing clipping.", "title": "Issue#96 Add Thrust Angle and Rotation Joint", "destination": {"commit": {"hash": "52119c274d58", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/52119c274d58.json"}, "html": {"href": "#!/osrf/vrx/commits/52119c274d58"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "201f800993a4", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/201f800993a4.json"}, "html": {"href": "#!/osrf/vrx/commits/201f800993a4"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#96-add-vector-thrust"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-06-18T01:34:53.039937+00:00"}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/106025713.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-106025713"}}, "parent": {"id": 106017353, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/106017353.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-106017353"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "In [22912f8](#!/osrf/vrx/commits/22912f86d8058beb016d1890184d4980214429cc), I removed the `set_thrust_angle` parameter, as it was not needed.\n\nIn [77970e7](#!/osrf/vrx/commits/77970e784e90ff120ba23990ff9b2ce62d8578d8), I implemented a new getch function to fix the output issues. It is a bit messier, but fixes the print issues.\n\n![](data/bitbucket.org/repo/BgXLzgM/images/3757867173-Fixed_Output.png)\n  \n_Figure 1: Fixed output_\n\n---\n\n![](data/bitbucket.org/repo/BgXLzgM/images/1255798936-New_Ouptut.png)\n  \n_Figure 2: Fixed output_\n\n---\n\n\u200c\n\n![](data/bitbucket.org/repo/BgXLzgM/images/2350331317-Bad_Ouptut_2.png)\n  \n_Figure 3: Bad output before_\n\n![](data/bitbucket.org/repo/BgXLzgM/images/92727555-Bad_Output.png)\n  \n_Figure 4: Bad output before_\n\nThis was caused by the implementation of reading keys. When both `teleop_twist_keyboard` and `key2thrust_angle` read the key, they would also \"delete\" the output, which is why when you press `r`, `e`, `w`, etc. they did not show to the screen. However, when both nodes were both reading the keys, it lead to issues. This different implementation fixes the issue.", "markup": "markdown", "html": "<p>In <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/22912f86d8058beb016d1890184d4980214429cc\" rel=\"nofollow\">22912f8</a>, I removed the <code>set_thrust_angle</code> parameter, as it was not needed.</p>\n<p>In <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/77970e784e90ff120ba23990ff9b2ce62d8578d8\" rel=\"nofollow\">77970e7</a>, I implemented a new getch function to fix the output issues. It is a bit messier, but fixes the print issues.</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3757867173-Fixed_Output.png\" /></p>\n<p><em>Figure 1: Fixed output</em></p>\n<hr />\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1255798936-New_Ouptut.png\" /></p>\n<p><em>Figure 2: Fixed output</em></p>\n<hr />\n<p>\u200c</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/2350331317-Bad_Ouptut_2.png\" /></p>\n<p><em>Figure 3: Bad output before</em></p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/92727555-Bad_Output.png\" /></p>\n<p><em>Figure 4: Bad output before</em></p>\n<p>This was caused by the implementation of reading keys. When both <code>teleop_twist_keyboard</code> and <code>key2thrust_angle</code> read the key, they would also \"delete\" the output, which is why when you press <code>r</code>, <code>e</code>, <code>w</code>, etc. they did not show to the screen. However, when both nodes were both reading the keys, it lead to issues. This different implementation fixes the issue.</p>", "type": "rendered"}, "created_on": "2019-06-18T01:25:42.922547+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-18T01:33:11.095317+00:00", "type": "pullrequest_comment", "id": 106025713}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"update": {"description": "**Description of Issue**\r\n\r\nWe\u2019d like to extend both the [usv\\_gazebo\\_thrust\\_plugin](#!/osrf/vrx/src/default/usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc) Gazebo model plugin and the [engine.xacro](#!/osrf/vrx/src/default/wamv_description/urdf/engine.xacro) model so that users can change the thrust angle via a ROS API.\r\n\r\n* The thrust plugin would subscribe to a ROS topic, e.g., \u201cleft\\_ thrust\\_angle\u201d, that would set the angular displacement of the thruster.\r\n\r\n    * The angle, in radians, would be relative to the nominal thruster attitude.\r\n    \r\n* The configuration should allow for angle limits \\(e.g., \\+/- pi/2\\) to be set.\r\n* A new rotation joint should be included in the engine model to facilitate the rotation\r\n\r\n    * The plugin would also set the joint rotation so that the visual model reflects the vectored thrust.\r\n    \r\n\r\n**Design Questions**\r\n\r\n1. How should max angle be set? Currently done by changing `<maxAngle>NUMBER</maxAngle>` in `wamv_gazebo_thruster_config.xacro`\r\n2. Thrust commands currently have a `lastCmdTime` to track the time of last command signal and a `cmdTimeout` to describe how long each command should last for before not putting a force anymore. Should there be something similar for angle? eg. if publish `left_thrust_angle=pi/3` and then stop publishing angle, should the angle remain pi/3 until set otherwise, or should it \u201creset\u201d back to `left_thrust_angle=0` if it does not receive angle messages? Currently there is no \u201creset\u201d, it remains at the last published angle\r\n3. What to do if |published angle| > maxAngle? eg. if publish `left_thrust_angle=5*pi/4`, but we have `<maxAngle>${pi/2}</maxAngle>`, what should it do? Output error/warning message and ignore message \\(keep same angle as it previously was\\)? Or clip it \\(if it is >pi/2, then clip to pi/2. If it is <-pi/2, then clip to -pi/2\\).\r\n4. If published angle = 7\\*pi/4 and maxAngle=pi/2, should this be interpreted as -pi/4 or clipped to pi/2 or output error message and ignore? Currently doing clipping.", "title": "Issue#96 Add Thrust Angle and Rotation Joint", "destination": {"commit": {"hash": "52119c274d58", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/52119c274d58.json"}, "html": {"href": "#!/osrf/vrx/commits/52119c274d58"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "77970e784e90", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/77970e784e90.json"}, "html": {"href": "#!/osrf/vrx/commits/77970e784e90"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#96-add-vector-thrust"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-06-18T01:23:16.934935+00:00"}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"update": {"description": "**Description of Issue**\r\n\r\nWe\u2019d like to extend both the [usv\\_gazebo\\_thrust\\_plugin](#!/osrf/vrx/src/default/usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc) Gazebo model plugin and the [engine.xacro](#!/osrf/vrx/src/default/wamv_description/urdf/engine.xacro) model so that users can change the thrust angle via a ROS API.\r\n\r\n* The thrust plugin would subscribe to a ROS topic, e.g., \u201cleft\\_ thrust\\_angle\u201d, that would set the angular displacement of the thruster.\r\n\r\n    * The angle, in radians, would be relative to the nominal thruster attitude.\r\n    \r\n* The configuration should allow for angle limits \\(e.g., \\+/- pi/2\\) to be set.\r\n* A new rotation joint should be included in the engine model to facilitate the rotation\r\n\r\n    * The plugin would also set the joint rotation so that the visual model reflects the vectored thrust.\r\n    \r\n\r\n**Design Questions**\r\n\r\n1. How should max angle be set? Currently done by changing `<maxAngle>NUMBER</maxAngle>` in `wamv_gazebo_thruster_config.xacro`\r\n2. Thrust commands currently have a `lastCmdTime` to track the time of last command signal and a `cmdTimeout` to describe how long each command should last for before not putting a force anymore. Should there be something similar for angle? eg. if publish `left_thrust_angle=pi/3` and then stop publishing angle, should the angle remain pi/3 until set otherwise, or should it \u201creset\u201d back to `left_thrust_angle=0` if it does not receive angle messages? Currently there is no \u201creset\u201d, it remains at the last published angle\r\n3. What to do if |published angle| > maxAngle? eg. if publish `left_thrust_angle=5*pi/4`, but we have `<maxAngle>${pi/2}</maxAngle>`, what should it do? Output error/warning message and ignore message \\(keep same angle as it previously was\\)? Or clip it \\(if it is >pi/2, then clip to pi/2. If it is <-pi/2, then clip to -pi/2\\).\r\n4. If published angle = 7\\*pi/4 and maxAngle=pi/2, should this be interpreted as -pi/4 or clipped to pi/2 or output error message and ignore? Currently doing clipping.", "title": "Issue#96 Add Thrust Angle and Rotation Joint", "destination": {"commit": {"hash": "52119c274d58", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/52119c274d58.json"}, "html": {"href": "#!/osrf/vrx/commits/52119c274d58"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "22912f86d805", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/22912f86d805.json"}, "html": {"href": "#!/osrf/vrx/commits/22912f86d805"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#96-add-vector-thrust"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-06-17T23:46:16.764547+00:00"}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/106020173.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-106020173"}}, "parent": {"id": 106017353, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/106017353.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-106017353"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "That is great to hear. You make a good point. Originally, I had the keydrive with settable parameters to choose whether or not the thrust angle will be set or not. However, it may make sense to have it _always_ set thrust angle, but if the WAM-V does not subscribe to it, then it simply will not do anything.\n\n**Before:**\n\n`roslaunch vrx_gazebo usv_keydrive.launch set_thrust_angle:=true max_angle:=3.1415`\n\n`roslaunch vrx_gazebo usv_joydrive.launch set_thrust_angle:=true`\n\n**New Change:**\n\n`roslaunch vrx_gazebo usv_keydrive.launch max_angle:=3.1415` \\(optional parameter\\)\n\n`roslaunch vrx_gazebo usv_joydrive.launch`\n\nThis would remove the need for the two yaml files. Is this appropriate, or do you feel that the `set_thrust_angle:=true` option should still exist? To keep the option, I am not sure how else to do this cleanly other than with 2 yamls. It is probably best not to touch the `joy_teleop` source code directly, so this would require creating our own node that reads the joystick for the angle control, very similarly to `joy_teleop` but a bit redundant.\n\nThe only issue I have is that the instructions for use get very messy for some reason when I added the set\\_thrust instructions, as shown in the picture in the other thread. I will make this initial change and try to fix that instruction issue.", "markup": "markdown", "html": "<p>That is great to hear. You make a good point. Originally, I had the keydrive with settable parameters to choose whether or not the thrust angle will be set or not. However, it may make sense to have it <em>always</em> set thrust angle, but if the WAM-V does not subscribe to it, then it simply will not do anything.</p>\n<p><strong>Before:</strong></p>\n<p><code>roslaunch vrx_gazebo usv_keydrive.launch set_thrust_angle:=true max_angle:=3.1415</code></p>\n<p><code>roslaunch vrx_gazebo usv_joydrive.launch set_thrust_angle:=true</code></p>\n<p><strong>New Change:</strong></p>\n<p><code>roslaunch vrx_gazebo usv_keydrive.launch max_angle:=3.1415</code> (optional parameter)</p>\n<p><code>roslaunch vrx_gazebo usv_joydrive.launch</code></p>\n<p>This would remove the need for the two yaml files. Is this appropriate, or do you feel that the <code>set_thrust_angle:=true</code> option should still exist? To keep the option, I am not sure how else to do this cleanly other than with 2 yamls. It is probably best not to touch the <code>joy_teleop</code> source code directly, so this would require creating our own node that reads the joystick for the angle control, very similarly to <code>joy_teleop</code> but a bit redundant.</p>\n<p>The only issue I have is that the instructions for use get very messy for some reason when I added the set_thrust instructions, as shown in the picture in the other thread. I will make this initial change and try to fix that instruction issue.</p>", "type": "rendered"}, "created_on": "2019-06-17T23:29:42.237385+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-17T23:33:26.894771+00:00", "type": "pullrequest_comment", "id": 106020173}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/106017353.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-106017353"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "I tested it with the controller and works for me! I modified the scale to `-1` because it's more intuitive that way. My only outstanding question is whether is not sufficient with only one version of the `diffdrive.yaml` file \\(including the extra angle configuration\\). [2ff1139](#!/osrf/vrx/commits/2ff11395e753f17d56f72ae04efd8da73065799d)", "markup": "markdown", "html": "<p>I tested it with the controller and works for me! I modified the scale to <code>-1</code> because it's more intuitive that way. My only outstanding question is whether is not sufficient with only one version of the <code>diffdrive.yaml</code> file (including the extra angle configuration). <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/2ff11395e753f17d56f72ae04efd8da73065799d\" rel=\"nofollow\">2ff1139</a></p>", "type": "rendered"}, "created_on": "2019-06-17T22:43:52.105126+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-06-17T23:27:25.082207+00:00", "type": "pullrequest_comment", "id": 106017353}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"update": {"description": "**Description of Issue**\r\n\r\nWe\u2019d like to extend both the [usv\\_gazebo\\_thrust\\_plugin](#!/osrf/vrx/src/default/usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc) Gazebo model plugin and the [engine.xacro](#!/osrf/vrx/src/default/wamv_description/urdf/engine.xacro) model so that users can change the thrust angle via a ROS API.\r\n\r\n* The thrust plugin would subscribe to a ROS topic, e.g., \u201cleft\\_ thrust\\_angle\u201d, that would set the angular displacement of the thruster.\r\n\r\n    * The angle, in radians, would be relative to the nominal thruster attitude.\r\n    \r\n* The configuration should allow for angle limits \\(e.g., \\+/- pi/2\\) to be set.\r\n* A new rotation joint should be included in the engine model to facilitate the rotation\r\n\r\n    * The plugin would also set the joint rotation so that the visual model reflects the vectored thrust.\r\n    \r\n\r\n**Design Questions**\r\n\r\n1. How should max angle be set? Currently done by changing `<maxAngle>NUMBER</maxAngle>` in `wamv_gazebo_thruster_config.xacro`\r\n2. Thrust commands currently have a `lastCmdTime` to track the time of last command signal and a `cmdTimeout` to describe how long each command should last for before not putting a force anymore. Should there be something similar for angle? eg. if publish `left_thrust_angle=pi/3` and then stop publishing angle, should the angle remain pi/3 until set otherwise, or should it \u201creset\u201d back to `left_thrust_angle=0` if it does not receive angle messages? Currently there is no \u201creset\u201d, it remains at the last published angle\r\n3. What to do if |published angle| > maxAngle? eg. if publish `left_thrust_angle=5*pi/4`, but we have `<maxAngle>${pi/2}</maxAngle>`, what should it do? Output error/warning message and ignore message \\(keep same angle as it previously was\\)? Or clip it \\(if it is >pi/2, then clip to pi/2. If it is <-pi/2, then clip to -pi/2\\).\r\n4. If published angle = 7\\*pi/4 and maxAngle=pi/2, should this be interpreted as -pi/4 or clipped to pi/2 or output error message and ignore? Currently doing clipping.", "title": "Issue#96 Add Thrust Angle and Rotation Joint", "destination": {"commit": {"hash": "52119c274d58", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/52119c274d58.json"}, "html": {"href": "#!/osrf/vrx/commits/52119c274d58"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "2ff11395e753", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/2ff11395e753.json"}, "html": {"href": "#!/osrf/vrx/commits/2ff11395e753"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#96-add-vector-thrust"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2019-06-17T22:39:50.040944+00:00"}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/106013841.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-106013841"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "This PR is nearly complete, but still needs joy teleop tested and improved. I have a GameCube and PS1 controller at home, but no way to connect it. I may have an Xbox controller around somewhere.", "markup": "markdown", "html": "<p>This PR is nearly complete, but still needs joy teleop tested and improved. I have a GameCube and PS1 controller at home, but no way to connect it. I may have an Xbox controller around somewhere.</p>", "type": "rendered"}, "created_on": "2019-06-17T21:53:11.706306+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-17T21:53:11.712350+00:00", "type": "pullrequest_comment", "id": 106013841}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/106013515.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-106013515"}}, "parent": {"id": 105505596, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105505596.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105505596"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "I have added a demonstration tutorial and description for Thruster Articulation at [#!/osrf/vrx/wiki/tutorials/thruster\\_articulation](#!/osrf/vrx/wiki/tutorials/thruster_articulation). Let me know how it looks!", "markup": "markdown", "html": "<p>I have added a demonstration tutorial and description for Thruster Articulation at <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/wiki/tutorials/thruster_articulation\" rel=\"nofollow\">#!/osrf/vrx/wiki/tutorials/thruster_articulation</a>. Let me know how it looks!</p>", "type": "rendered"}, "created_on": "2019-06-17T21:48:49.590634+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-17T21:48:49.601729+00:00", "type": "pullrequest_comment", "id": 106013515}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105840785.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105840785"}}, "parent": {"id": 105814387, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105814387.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105814387"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "I have added untested teleop functionality using the joystick in [ead4637](#!/osrf/vrx/commits/ead4637bbfc793db9724b62e681f7a8ca3a38f7d). It retains the same default functionality \\(fixed thruster angles\\). It has a `set_thrust_angle` parameter that can be set to `true` to read and publish angles.\n\n`roslaunch vrx_gazebo usv_keydrive.launch set_thrust_angle:=true`\n\nIt also has a `max_angle` parameter that I am not sure will be able to be used.\n\nIt is untested because I do not have a controller with me right now and I could not find a workable virtual controller on Linux.\n\n**Questions**\n\n* `scale` in the yaml file will surely need to be adjusted \\(maybe proportional to desired max\\_angle?\\)\n* Is this method of choosing to keep fixed or adjustable thruster angle valid or is there a better way?\n* I cannot test it without a controller \\(may look to buy one this weekend\\), but how are the axes?\n\n    * Currently the .yaml file has \n    \n        * `axis 1 => linear.x` \\(left stick up/down\\)\n        * `axis 3 => angular.z ` \\(right stick up/down\\)\n        \n    * I added\n    \n        * `axis 2 => data` \\(of left and right thruster angle\\) \\(right stick left/right\\)\n        \n    * Does this work? Would it actually be better to have the linear.x and angular.z both be on the left stick \\(i imagine using left/right instead of up/down may be nice for turning with angular.z, but I haven\u2019t tried it\\)\n    \n        * If changed, could have \n        \n            * `axis 1 => linear.x` \\(left stick up/down\\)\n            * `axis 0 => angular.z ` \\(left stick right/left\\)\n            * `axis 2 => data` \\(of left and right thruster angle\\) \\(right stick left/right\\)\n            \n        \n    \n\n![](data/bitbucket.org/repo/BgXLzgM/images/308228509-Joy_Axes.png)\n_Figure 1: Joy Axes_", "markup": "markdown", "html": "<p>I have added untested teleop functionality using the joystick in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/ead4637bbfc793db9724b62e681f7a8ca3a38f7d\" rel=\"nofollow\">ead4637</a>. It retains the same default functionality (fixed thruster angles). It has a <code>set_thrust_angle</code> parameter that can be set to <code>true</code> to read and publish angles.</p>\n<p><code>roslaunch vrx_gazebo usv_keydrive.launch set_thrust_angle:=true</code></p>\n<p>It also has a <code>max_angle</code> parameter that I am not sure will be able to be used.</p>\n<p>It is untested because I do not have a controller with me right now and I could not find a workable virtual controller on Linux.</p>\n<p><strong>Questions</strong></p>\n<ul>\n<li><code>scale</code> in the yaml file will surely need to be adjusted (maybe proportional to desired max_angle?)</li>\n<li>Is this method of choosing to keep fixed or adjustable thruster angle valid or is there a better way?</li>\n<li>\n<p>I cannot test it without a controller (may look to buy one this weekend), but how are the axes?</p>\n<ul>\n<li>\n<p>Currently the .yaml file has </p>\n<ul>\n<li><code>axis 1 =&gt; linear.x</code> (left stick up/down)</li>\n<li><code>axis 3 =&gt; angular.z</code> (right stick up/down)</li>\n</ul>\n</li>\n<li>\n<p>I added</p>\n<ul>\n<li><code>axis 2 =&gt; data</code> (of left and right thruster angle) (right stick left/right)</li>\n</ul>\n</li>\n<li>\n<p>Does this work? Would it actually be better to have the linear.x and angular.z both be on the left stick (i imagine using left/right instead of up/down may be nice for turning with angular.z, but I haven\u2019t tried it)</p>\n<ul>\n<li>\n<p>If changed, could have </p>\n<ul>\n<li><code>axis 1 =&gt; linear.x</code> (left stick up/down)</li>\n<li><code>axis 0 =&gt; angular.z</code> (left stick right/left)</li>\n<li><code>axis 2 =&gt; data</code> (of left and right thruster angle) (right stick left/right)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/308228509-Joy_Axes.png\" />\n<em>Figure 1: Joy Axes</em></p>", "type": "rendered"}, "created_on": "2019-06-15T00:31:23.029220+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-15T00:31:23.040431+00:00", "type": "pullrequest_comment", "id": 105840785}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"update": {"description": "**Description of Issue**\r\n\r\nWe\u2019d like to extend both the [usv\\_gazebo\\_thrust\\_plugin](#!/osrf/vrx/src/default/usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc) Gazebo model plugin and the [engine.xacro](#!/osrf/vrx/src/default/wamv_description/urdf/engine.xacro) model so that users can change the thrust angle via a ROS API.\r\n\r\n* The thrust plugin would subscribe to a ROS topic, e.g., \u201cleft\\_ thrust\\_angle\u201d, that would set the angular displacement of the thruster.\r\n\r\n    * The angle, in radians, would be relative to the nominal thruster attitude.\r\n    \r\n* The configuration should allow for angle limits \\(e.g., \\+/- pi/2\\) to be set.\r\n* A new rotation joint should be included in the engine model to facilitate the rotation\r\n\r\n    * The plugin would also set the joint rotation so that the visual model reflects the vectored thrust.\r\n    \r\n\r\n**Design Questions**\r\n\r\n1. How should max angle be set? Currently done by changing `<maxAngle>NUMBER</maxAngle>` in `wamv_gazebo_thruster_config.xacro`\r\n2. Thrust commands currently have a `lastCmdTime` to track the time of last command signal and a `cmdTimeout` to describe how long each command should last for before not putting a force anymore. Should there be something similar for angle? eg. if publish `left_thrust_angle=pi/3` and then stop publishing angle, should the angle remain pi/3 until set otherwise, or should it \u201creset\u201d back to `left_thrust_angle=0` if it does not receive angle messages? Currently there is no \u201creset\u201d, it remains at the last published angle\r\n3. What to do if |published angle| > maxAngle? eg. if publish `left_thrust_angle=5*pi/4`, but we have `<maxAngle>${pi/2}</maxAngle>`, what should it do? Output error/warning message and ignore message \\(keep same angle as it previously was\\)? Or clip it \\(if it is >pi/2, then clip to pi/2. If it is <-pi/2, then clip to -pi/2\\).\r\n4. If published angle = 7\\*pi/4 and maxAngle=pi/2, should this be interpreted as -pi/4 or clipped to pi/2 or output error message and ignore? Currently doing clipping.", "title": "Issue#96 Add Thrust Angle and Rotation Joint", "destination": {"commit": {"hash": "f66016894202", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/f66016894202.json"}, "html": {"href": "#!/osrf/vrx/commits/f66016894202"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "ead4637bbfc7", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/ead4637bbfc7.json"}, "html": {"href": "#!/osrf/vrx/commits/ead4637bbfc7"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#96-add-vector-thrust"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-06-15T00:11:50.731363+00:00"}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105838936.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105838936"}}, "parent": {"id": 105814387, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105814387.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105814387"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "I have added the teleop functionality using the keyboard in [939df5d](#!/osrf/vrx/commits/939df5dfe84d530aae2dea6d9b2a1f0ddf47ac5b). It defaults to the same functionality as before \\(fixed thruster angles\\). If you add the `set_thrust_angle` parameter, then you can change the thrust angle with `h` and `;`\n\n`roslaunch vrx_gazebo usv_keydrive.launch set_thrust_angle:=true`\n\nThen in [80d34cd](#!/osrf/vrx/commits/80d34cdbe0385a0e63cf0cc0c9785b3879613d88), I added the ability to change the speed of thrust\\_angle change \\( `r`/ `v` for increase/decrease\\)\n\nThen in [d42d773](#!/osrf/vrx/commits/d42d7736fc6e04c6112d1297606e13167be7bd6e), I added the `max_angle` parameter than defaults to pi/2.\n\n`roslaunch vrx_gazebo usv_keydrive.launch set_thrust_angle:=true max_angle:=3.1415`\n\n\u200c\n\nI used [https://github.com/ros-teleop/teleop\\_twist\\_keyboard/blob/master/teleop\\_twist\\_keyboard.py](https://github.com/ros-teleop/teleop_twist_keyboard/blob/master/teleop_twist_keyboard.py) as a reference for reading keys.", "markup": "markdown", "html": "<p>I have added the teleop functionality using the keyboard in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/939df5dfe84d530aae2dea6d9b2a1f0ddf47ac5b\" rel=\"nofollow\">939df5d</a>. It defaults to the same functionality as before (fixed thruster angles). If you add the <code>set_thrust_angle</code> parameter, then you can change the thrust angle with <code>h</code> and <code>;</code></p>\n<p><code>roslaunch vrx_gazebo usv_keydrive.launch set_thrust_angle:=true</code></p>\n<p>Then in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/80d34cdbe0385a0e63cf0cc0c9785b3879613d88\" rel=\"nofollow\">80d34cd</a>, I added the ability to change the speed of thrust_angle change ( <code>r</code>/ <code>v</code> for increase/decrease)</p>\n<p>Then in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/d42d7736fc6e04c6112d1297606e13167be7bd6e\" rel=\"nofollow\">d42d773</a>, I added the <code>max_angle</code> parameter than defaults to pi/2.</p>\n<p><code>roslaunch vrx_gazebo usv_keydrive.launch set_thrust_angle:=true max_angle:=3.1415</code></p>\n<p>\u200c</p>\n<p>I used <a data-is-external-link=\"true\" href=\"https://github.com/ros-teleop/teleop_twist_keyboard/blob/master/teleop_twist_keyboard.py\" rel=\"nofollow\">https://github.com/ros-teleop/teleop_twist_keyboard/blob/master/teleop_twist_keyboard.py</a> as a reference for reading keys.</p>", "type": "rendered"}, "created_on": "2019-06-14T23:08:17.842243+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-14T23:31:56.404432+00:00", "type": "pullrequest_comment", "id": 105838936}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105839048.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105839048"}}, "parent": {"id": 105814387, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105814387.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105814387"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "![](data/bitbucket.org/repo/BgXLzgM/images/2078951548-Printed_From_Teleop_Key.png)\n_Figure 1: Original instructions from teleop\\_key. It shows instructions clear, then only prints again if linear/angular speed changes \\(no prints from regular movement commands\\)_\n\n---\n\n![](data/bitbucket.org/repo/BgXLzgM/images/2693075715-Print_From_New.png)\n_Figure 2: Output from new launch file \\(both old and new node\\). Notice that pressing h/; does not lead to prints, but changing angular speed \\(r/v\\) does. One issue I have is that the original instructions are now very messy. Do you have any idea why this might be? They print independently from one another._", "markup": "markdown", "html": "<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/2078951548-Printed_From_Teleop_Key.png\" />\n<em>Figure 1: Original instructions from teleop_key. It shows instructions clear, then only prints again if linear/angular speed changes (no prints from regular movement commands)</em></p>\n<hr />\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/2693075715-Print_From_New.png\" />\n<em>Figure 2: Output from new launch file (both old and new node). Notice that pressing h/; does not lead to prints, but changing angular speed (r/v) does. One issue I have is that the original instructions are now very messy. Do you have any idea why this might be? They print independently from one another.</em></p>", "type": "rendered"}, "created_on": "2019-06-14T23:12:59.482769+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-14T23:12:59.498940+00:00", "type": "pullrequest_comment", "id": 105839048}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"update": {"description": "**Description of Issue**\r\n\r\nWe\u2019d like to extend both the [usv\\_gazebo\\_thrust\\_plugin](#!/osrf/vrx/src/default/usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc) Gazebo model plugin and the [engine.xacro](#!/osrf/vrx/src/default/wamv_description/urdf/engine.xacro) model so that users can change the thrust angle via a ROS API.\r\n\r\n* The thrust plugin would subscribe to a ROS topic, e.g., \u201cleft\\_ thrust\\_angle\u201d, that would set the angular displacement of the thruster.\r\n\r\n    * The angle, in radians, would be relative to the nominal thruster attitude.\r\n    \r\n* The configuration should allow for angle limits \\(e.g., \\+/- pi/2\\) to be set.\r\n* A new rotation joint should be included in the engine model to facilitate the rotation\r\n\r\n    * The plugin would also set the joint rotation so that the visual model reflects the vectored thrust.\r\n    \r\n\r\n**Design Questions**\r\n\r\n1. How should max angle be set? Currently done by changing `<maxAngle>NUMBER</maxAngle>` in `wamv_gazebo_thruster_config.xacro`\r\n2. Thrust commands currently have a `lastCmdTime` to track the time of last command signal and a `cmdTimeout` to describe how long each command should last for before not putting a force anymore. Should there be something similar for angle? eg. if publish `left_thrust_angle=pi/3` and then stop publishing angle, should the angle remain pi/3 until set otherwise, or should it \u201creset\u201d back to `left_thrust_angle=0` if it does not receive angle messages? Currently there is no \u201creset\u201d, it remains at the last published angle\r\n3. What to do if |published angle| > maxAngle? eg. if publish `left_thrust_angle=5*pi/4`, but we have `<maxAngle>${pi/2}</maxAngle>`, what should it do? Output error/warning message and ignore message \\(keep same angle as it previously was\\)? Or clip it \\(if it is >pi/2, then clip to pi/2. If it is <-pi/2, then clip to -pi/2\\).\r\n4. If published angle = 7\\*pi/4 and maxAngle=pi/2, should this be interpreted as -pi/4 or clipped to pi/2 or output error message and ignore? Currently doing clipping.", "title": "Issue#96 Add Thrust Angle and Rotation Joint", "destination": {"commit": {"hash": "f66016894202", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/f66016894202.json"}, "html": {"href": "#!/osrf/vrx/commits/f66016894202"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "d42d7736fc6e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/d42d7736fc6e.json"}, "html": {"href": "#!/osrf/vrx/commits/d42d7736fc6e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#96-add-vector-thrust"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-06-14T23:02:04.584459+00:00"}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"update": {"description": "**Description of Issue**\r\n\r\nWe\u2019d like to extend both the [usv\\_gazebo\\_thrust\\_plugin](#!/osrf/vrx/src/default/usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc) Gazebo model plugin and the [engine.xacro](#!/osrf/vrx/src/default/wamv_description/urdf/engine.xacro) model so that users can change the thrust angle via a ROS API.\r\n\r\n* The thrust plugin would subscribe to a ROS topic, e.g., \u201cleft\\_ thrust\\_angle\u201d, that would set the angular displacement of the thruster.\r\n\r\n    * The angle, in radians, would be relative to the nominal thruster attitude.\r\n    \r\n* The configuration should allow for angle limits \\(e.g., \\+/- pi/2\\) to be set.\r\n* A new rotation joint should be included in the engine model to facilitate the rotation\r\n\r\n    * The plugin would also set the joint rotation so that the visual model reflects the vectored thrust.\r\n    \r\n\r\n**Design Questions**\r\n\r\n1. How should max angle be set? Currently done by changing `<maxAngle>NUMBER</maxAngle>` in `wamv_gazebo_thruster_config.xacro`\r\n2. Thrust commands currently have a `lastCmdTime` to track the time of last command signal and a `cmdTimeout` to describe how long each command should last for before not putting a force anymore. Should there be something similar for angle? eg. if publish `left_thrust_angle=pi/3` and then stop publishing angle, should the angle remain pi/3 until set otherwise, or should it \u201creset\u201d back to `left_thrust_angle=0` if it does not receive angle messages? Currently there is no \u201creset\u201d, it remains at the last published angle\r\n3. What to do if |published angle| > maxAngle? eg. if publish `left_thrust_angle=5*pi/4`, but we have `<maxAngle>${pi/2}</maxAngle>`, what should it do? Output error/warning message and ignore message \\(keep same angle as it previously was\\)? Or clip it \\(if it is >pi/2, then clip to pi/2. If it is <-pi/2, then clip to -pi/2\\).\r\n4. If published angle = 7\\*pi/4 and maxAngle=pi/2, should this be interpreted as -pi/4 or clipped to pi/2 or output error message and ignore? Currently doing clipping.", "title": "Issue#96 Add Thrust Angle and Rotation Joint", "destination": {"commit": {"hash": "f66016894202", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/f66016894202.json"}, "html": {"href": "#!/osrf/vrx/commits/f66016894202"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "80d34cdbe038", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/80d34cdbe038.json"}, "html": {"href": "#!/osrf/vrx/commits/80d34cdbe038"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#96-add-vector-thrust"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-06-14T22:44:23.352509+00:00"}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"update": {"description": "**Description of Issue**\r\n\r\nWe\u2019d like to extend both the [usv\\_gazebo\\_thrust\\_plugin](#!/osrf/vrx/src/default/usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc) Gazebo model plugin and the [engine.xacro](#!/osrf/vrx/src/default/wamv_description/urdf/engine.xacro) model so that users can change the thrust angle via a ROS API.\r\n\r\n* The thrust plugin would subscribe to a ROS topic, e.g., \u201cleft\\_ thrust\\_angle\u201d, that would set the angular displacement of the thruster.\r\n\r\n    * The angle, in radians, would be relative to the nominal thruster attitude.\r\n    \r\n* The configuration should allow for angle limits \\(e.g., \\+/- pi/2\\) to be set.\r\n* A new rotation joint should be included in the engine model to facilitate the rotation\r\n\r\n    * The plugin would also set the joint rotation so that the visual model reflects the vectored thrust.\r\n    \r\n\r\n**Design Questions**\r\n\r\n1. How should max angle be set? Currently done by changing `<maxAngle>NUMBER</maxAngle>` in `wamv_gazebo_thruster_config.xacro`\r\n2. Thrust commands currently have a `lastCmdTime` to track the time of last command signal and a `cmdTimeout` to describe how long each command should last for before not putting a force anymore. Should there be something similar for angle? eg. if publish `left_thrust_angle=pi/3` and then stop publishing angle, should the angle remain pi/3 until set otherwise, or should it \u201creset\u201d back to `left_thrust_angle=0` if it does not receive angle messages? Currently there is no \u201creset\u201d, it remains at the last published angle\r\n3. What to do if |published angle| > maxAngle? eg. if publish `left_thrust_angle=5*pi/4`, but we have `<maxAngle>${pi/2}</maxAngle>`, what should it do? Output error/warning message and ignore message \\(keep same angle as it previously was\\)? Or clip it \\(if it is >pi/2, then clip to pi/2. If it is <-pi/2, then clip to -pi/2\\).\r\n4. If published angle = 7\\*pi/4 and maxAngle=pi/2, should this be interpreted as -pi/4 or clipped to pi/2 or output error message and ignore? Currently doing clipping.", "title": "Issue#96 Add Thrust Angle and Rotation Joint", "destination": {"commit": {"hash": "f66016894202", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/f66016894202.json"}, "html": {"href": "#!/osrf/vrx/commits/f66016894202"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "939df5dfe84d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/939df5dfe84d.json"}, "html": {"href": "#!/osrf/vrx/commits/939df5dfe84d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#96-add-vector-thrust"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-06-14T22:28:37.729355+00:00"}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105824560.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105824560"}}, "parent": {"id": 105814387, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105814387.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105814387"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Good to hear thanks Carlos! I will start working on the teleop functionality. ", "markup": "markdown", "html": "<p>Good to hear thanks Carlos! I will start working on the teleop functionality. </p>", "type": "rendered"}, "created_on": "2019-06-14T19:22:16.923068+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-14T19:22:16.936127+00:00", "type": "pullrequest_comment", "id": 105824560}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105824325.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105824325"}}, "parent": {"id": 105812353, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105812353.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105812353"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Fixed in [039a78f](#!/osrf/vrx/commits/039a78f64344be718e3da24802c9a4ce2f402be3)", "markup": "markdown", "html": "<p>Fixed in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/039a78f64344be718e3da24802c9a4ce2f402be3\" rel=\"nofollow\">039a78f</a></p>", "type": "rendered"}, "created_on": "2019-06-14T19:19:34.734881+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "inline": {}, "updated_on": "2019-06-14T19:19:34.749565+00:00", "type": "pullrequest_comment", "id": 105824325}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"update": {"description": "**Description of Issue**\r\n\r\nWe\u2019d like to extend both the [usv\\_gazebo\\_thrust\\_plugin](#!/osrf/vrx/src/default/usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc) Gazebo model plugin and the [engine.xacro](#!/osrf/vrx/src/default/wamv_description/urdf/engine.xacro) model so that users can change the thrust angle via a ROS API.\r\n\r\n* The thrust plugin would subscribe to a ROS topic, e.g., \u201cleft\\_ thrust\\_angle\u201d, that would set the angular displacement of the thruster.\r\n\r\n    * The angle, in radians, would be relative to the nominal thruster attitude.\r\n    \r\n* The configuration should allow for angle limits \\(e.g., \\+/- pi/2\\) to be set.\r\n* A new rotation joint should be included in the engine model to facilitate the rotation\r\n\r\n    * The plugin would also set the joint rotation so that the visual model reflects the vectored thrust.\r\n    \r\n\r\n**Design Questions**\r\n\r\n1. How should max angle be set? Currently done by changing `<maxAngle>NUMBER</maxAngle>` in `wamv_gazebo_thruster_config.xacro`\r\n2. Thrust commands currently have a `lastCmdTime` to track the time of last command signal and a `cmdTimeout` to describe how long each command should last for before not putting a force anymore. Should there be something similar for angle? eg. if publish `left_thrust_angle=pi/3` and then stop publishing angle, should the angle remain pi/3 until set otherwise, or should it \u201creset\u201d back to `left_thrust_angle=0` if it does not receive angle messages? Currently there is no \u201creset\u201d, it remains at the last published angle\r\n3. What to do if |published angle| > maxAngle? eg. if publish `left_thrust_angle=5*pi/4`, but we have `<maxAngle>${pi/2}</maxAngle>`, what should it do? Output error/warning message and ignore message \\(keep same angle as it previously was\\)? Or clip it \\(if it is >pi/2, then clip to pi/2. If it is <-pi/2, then clip to -pi/2\\).\r\n4. If published angle = 7\\*pi/4 and maxAngle=pi/2, should this be interpreted as -pi/4 or clipped to pi/2 or output error message and ignore? Currently doing clipping.", "title": "Issue#96 Add Thrust Angle and Rotation Joint", "destination": {"commit": {"hash": "f66016894202", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/f66016894202.json"}, "html": {"href": "#!/osrf/vrx/commits/f66016894202"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "33e3dcc835c4", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/33e3dcc835c4.json"}, "html": {"href": "#!/osrf/vrx/commits/33e3dcc835c4"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#96-add-vector-thrust"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-06-14T19:16:46.274898+00:00"}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"update": {"description": "**Description of Issue**\r\n\r\nWe\u2019d like to extend both the [usv\\_gazebo\\_thrust\\_plugin](#!/osrf/vrx/src/default/usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc) Gazebo model plugin and the [engine.xacro](#!/osrf/vrx/src/default/wamv_description/urdf/engine.xacro) model so that users can change the thrust angle via a ROS API.\r\n\r\n* The thrust plugin would subscribe to a ROS topic, e.g., \u201cleft\\_ thrust\\_angle\u201d, that would set the angular displacement of the thruster.\r\n\r\n    * The angle, in radians, would be relative to the nominal thruster attitude.\r\n    \r\n* The configuration should allow for angle limits \\(e.g., \\+/- pi/2\\) to be set.\r\n* A new rotation joint should be included in the engine model to facilitate the rotation\r\n\r\n    * The plugin would also set the joint rotation so that the visual model reflects the vectored thrust.\r\n    \r\n\r\n**Design Questions**\r\n\r\n1. How should max angle be set? Currently done by changing `<maxAngle>NUMBER</maxAngle>` in `wamv_gazebo_thruster_config.xacro`\r\n2. Thrust commands currently have a `lastCmdTime` to track the time of last command signal and a `cmdTimeout` to describe how long each command should last for before not putting a force anymore. Should there be something similar for angle? eg. if publish `left_thrust_angle=pi/3` and then stop publishing angle, should the angle remain pi/3 until set otherwise, or should it \u201creset\u201d back to `left_thrust_angle=0` if it does not receive angle messages? Currently there is no \u201creset\u201d, it remains at the last published angle\r\n3. What to do if |published angle| > maxAngle? eg. if publish `left_thrust_angle=5*pi/4`, but we have `<maxAngle>${pi/2}</maxAngle>`, what should it do? Output error/warning message and ignore message \\(keep same angle as it previously was\\)? Or clip it \\(if it is >pi/2, then clip to pi/2. If it is <-pi/2, then clip to -pi/2\\).\r\n4. If published angle = 7\\*pi/4 and maxAngle=pi/2, should this be interpreted as -pi/4 or clipped to pi/2 or output error message and ignore? Currently doing clipping.", "title": "Issue#96 Add Thrust Angle and Rotation Joint", "destination": {"commit": {"hash": "f66016894202", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/f66016894202.json"}, "html": {"href": "#!/osrf/vrx/commits/f66016894202"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "039a78f64344", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/039a78f64344.json"}, "html": {"href": "#!/osrf/vrx/commits/039a78f64344"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#96-add-vector-thrust"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-06-14T19:12:51.367877+00:00"}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105823174.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105823174"}}, "parent": {"id": 105812762, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105812762.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105812762"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Good point. Resolved in [7247b43](#!/osrf/vrx/commits/7247b43254739a826f1175e889c2dca9ddbee404), where I also remove some unused default statements \\(confusing because setting these values did not do anything\\)", "markup": "markdown", "html": "<p>Good point. Resolved in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/7247b43254739a826f1175e889c2dca9ddbee404\" rel=\"nofollow\">7247b43</a>, where I also remove some unused default statements (confusing because setting these values did not do anything)</p>", "type": "rendered"}, "created_on": "2019-06-14T19:06:42.126358+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "inline": {}, "updated_on": "2019-06-14T19:06:42.141263+00:00", "type": "pullrequest_comment", "id": 105823174}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"update": {"description": "**Description of Issue**\r\n\r\nWe\u2019d like to extend both the [usv\\_gazebo\\_thrust\\_plugin](#!/osrf/vrx/src/default/usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc) Gazebo model plugin and the [engine.xacro](#!/osrf/vrx/src/default/wamv_description/urdf/engine.xacro) model so that users can change the thrust angle via a ROS API.\r\n\r\n* The thrust plugin would subscribe to a ROS topic, e.g., \u201cleft\\_ thrust\\_angle\u201d, that would set the angular displacement of the thruster.\r\n\r\n    * The angle, in radians, would be relative to the nominal thruster attitude.\r\n    \r\n* The configuration should allow for angle limits \\(e.g., \\+/- pi/2\\) to be set.\r\n* A new rotation joint should be included in the engine model to facilitate the rotation\r\n\r\n    * The plugin would also set the joint rotation so that the visual model reflects the vectored thrust.\r\n    \r\n\r\n**Design Questions**\r\n\r\n1. How should max angle be set? Currently done by changing `<maxAngle>NUMBER</maxAngle>` in `wamv_gazebo_thruster_config.xacro`\r\n2. Thrust commands currently have a `lastCmdTime` to track the time of last command signal and a `cmdTimeout` to describe how long each command should last for before not putting a force anymore. Should there be something similar for angle? eg. if publish `left_thrust_angle=pi/3` and then stop publishing angle, should the angle remain pi/3 until set otherwise, or should it \u201creset\u201d back to `left_thrust_angle=0` if it does not receive angle messages? Currently there is no \u201creset\u201d, it remains at the last published angle\r\n3. What to do if |published angle| > maxAngle? eg. if publish `left_thrust_angle=5*pi/4`, but we have `<maxAngle>${pi/2}</maxAngle>`, what should it do? Output error/warning message and ignore message \\(keep same angle as it previously was\\)? Or clip it \\(if it is >pi/2, then clip to pi/2. If it is <-pi/2, then clip to -pi/2\\).\r\n4. If published angle = 7\\*pi/4 and maxAngle=pi/2, should this be interpreted as -pi/4 or clipped to pi/2 or output error message and ignore? Currently doing clipping.", "title": "Issue#96 Add Thrust Angle and Rotation Joint", "destination": {"commit": {"hash": "f66016894202", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/f66016894202.json"}, "html": {"href": "#!/osrf/vrx/commits/f66016894202"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "7247b4325473", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/7247b4325473.json"}, "html": {"href": "#!/osrf/vrx/commits/7247b4325473"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#96-add-vector-thrust"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-06-14T19:04:11.230524+00:00"}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"update": {"description": "**Description of Issue**\r\n\r\nWe\u2019d like to extend both the [usv\\_gazebo\\_thrust\\_plugin](#!/osrf/vrx/src/default/usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc) Gazebo model plugin and the [engine.xacro](#!/osrf/vrx/src/default/wamv_description/urdf/engine.xacro) model so that users can change the thrust angle via a ROS API.\r\n\r\n* The thrust plugin would subscribe to a ROS topic, e.g., \u201cleft\\_ thrust\\_angle\u201d, that would set the angular displacement of the thruster.\r\n\r\n    * The angle, in radians, would be relative to the nominal thruster attitude.\r\n    \r\n* The configuration should allow for angle limits \\(e.g., \\+/- pi/2\\) to be set.\r\n* A new rotation joint should be included in the engine model to facilitate the rotation\r\n\r\n    * The plugin would also set the joint rotation so that the visual model reflects the vectored thrust.\r\n    \r\n\r\n**Design Questions**\r\n\r\n1. How should max angle be set? Currently done by changing `<maxAngle>NUMBER</maxAngle>` in `wamv_gazebo_thruster_config.xacro`\r\n2. Thrust commands currently have a `lastCmdTime` to track the time of last command signal and a `cmdTimeout` to describe how long each command should last for before not putting a force anymore. Should there be something similar for angle? eg. if publish `left_thrust_angle=pi/3` and then stop publishing angle, should the angle remain pi/3 until set otherwise, or should it \u201creset\u201d back to `left_thrust_angle=0` if it does not receive angle messages? Currently there is no \u201creset\u201d, it remains at the last published angle\r\n3. What to do if |published angle| > maxAngle? eg. if publish `left_thrust_angle=5*pi/4`, but we have `<maxAngle>${pi/2}</maxAngle>`, what should it do? Output error/warning message and ignore message \\(keep same angle as it previously was\\)? Or clip it \\(if it is >pi/2, then clip to pi/2. If it is <-pi/2, then clip to -pi/2\\).\r\n4. If published angle = 7\\*pi/4 and maxAngle=pi/2, should this be interpreted as -pi/4 or clipped to pi/2 or output error message and ignore? Currently doing clipping.", "title": "Issue#96 Add Thrust Angle and Rotation Joint", "destination": {"commit": {"hash": "f66016894202", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/f66016894202.json"}, "html": {"href": "#!/osrf/vrx/commits/f66016894202"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "b3ac7258a0d3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/b3ac7258a0d3.json"}, "html": {"href": "#!/osrf/vrx/commits/b3ac7258a0d3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#96-add-vector-thrust"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-06-14T18:49:53.458560+00:00"}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105820868.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105820868"}}, "parent": {"id": 105820669, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105820669.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105820669"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "You're right, I didn't realize is C\\+\\+17 only. I think your solution using `boost` is better.", "markup": "markdown", "html": "<p>You're right, I didn't realize is C++17 only. I think your solution using <code>boost</code> is better.</p>", "type": "rendered"}, "created_on": "2019-06-14T18:41:13.899013+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2019-06-14T18:41:13.910705+00:00", "type": "pullrequest_comment", "id": 105820868}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105820669.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105820669"}}, "parent": {"id": 105812030, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105812030.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105812030"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "![](data/bitbucket.org/repo/BgXLzgM/images/1033484654-Required_Diff.png)\n_Figure 4: Based on Figure 1, it offered_ `ignition::math::v4::clamp`, _but to maintain gazebo 7 support and to avoid errors related to float32->double implicit casting, it would need to be something like this, which is much more verbose_", "markup": "markdown", "html": "<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1033484654-Required_Diff.png\" />\n<em>Figure 4: Based on Figure 1, it offered</em> <code>ignition::math::v4::clamp</code>, <em>but to maintain gazebo 7 support and to avoid errors related to float32-&gt;double implicit casting, it would need to be something like this, which is much more verbose</em></p>", "type": "rendered"}, "created_on": "2019-06-14T18:39:07.877948+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "inline": {}, "updated_on": "2019-06-14T18:39:07.886786+00:00", "type": "pullrequest_comment", "id": 105820669}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105820407.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105820407"}}, "parent": {"id": 105812030, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105812030.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105812030"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "I really wanted to use `std::clamp()` as well because it is so much cleaner, but I ran into issues. With it: \n\n![](data/bitbucket.org/repo/BgXLzgM/images/1086412532-Clamp_Diff.png)\n_Figure 1: Diff showing change to std::clamp_\n\n---\n\n![](data/bitbucket.org/repo/BgXLzgM/images/1419018517-Clamp_Build_Issue.png)\n_Figure 2: Build issue with std::clamp. Likely related to it being C\\+\\+ 17 only? If you know how to resolve this, please let me know._\n\n---\n\n \n\n![](data/bitbucket.org/repo/BgXLzgM/images/2235339551-C_17_Clamp.png)\n_Figure 3: std::clamp documentation. I thought this should work, only issue I see is that it\u2019s only since C\\+\\+ 17_\n\nDo you know how to resolve this? This is originally why I chose the boost clamp.", "markup": "markdown", "html": "<p>I really wanted to use <code>std::clamp()</code> as well because it is so much cleaner, but I ran into issues. With it: </p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1086412532-Clamp_Diff.png\" />\n<em>Figure 1: Diff showing change to std::clamp</em></p>\n<hr />\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1419018517-Clamp_Build_Issue.png\" />\n<em>Figure 2: Build issue with std::clamp. Likely related to it being C++ 17 only? If you know how to resolve this, please let me know.</em></p>\n<hr />\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/2235339551-C_17_Clamp.png\" />\n<em>Figure 3: std::clamp documentation. I thought this should work, only issue I see is that it\u2019s only since C++ 17</em></p>\n<p>Do you know how to resolve this? This is originally why I chose the boost clamp.</p>", "type": "rendered"}, "created_on": "2019-06-14T18:36:28.847331+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "inline": {}, "updated_on": "2019-06-14T18:36:28.858285+00:00", "type": "pullrequest_comment", "id": 105820407}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105818616.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105818616"}}, "parent": {"id": 105814341, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105814341.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105814341"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Yeah good point. I initially wanted the responsiveness to be super high, but you\u2019re right it is not realistic. I lowered the P gain to 300 and tuned the D gain to work without oscillation in [7ba323f](#!/osrf/vrx/commits/7ba323f97a6e15b9008cb5f66e34a6566897c2ea).", "markup": "markdown", "html": "<p>Yeah good point. I initially wanted the responsiveness to be super high, but you\u2019re right it is not realistic. I lowered the P gain to 300 and tuned the D gain to work without oscillation in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/7ba323f97a6e15b9008cb5f66e34a6566897c2ea\" rel=\"nofollow\">7ba323f</a>.</p>", "type": "rendered"}, "created_on": "2019-06-14T18:16:46.312650+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-14T18:16:46.325948+00:00", "type": "pullrequest_comment", "id": 105818616}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"update": {"description": "**Description of Issue**\r\n\r\nWe\u2019d like to extend both the [usv\\_gazebo\\_thrust\\_plugin](#!/osrf/vrx/src/default/usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc) Gazebo model plugin and the [engine.xacro](#!/osrf/vrx/src/default/wamv_description/urdf/engine.xacro) model so that users can change the thrust angle via a ROS API.\r\n\r\n* The thrust plugin would subscribe to a ROS topic, e.g., \u201cleft\\_ thrust\\_angle\u201d, that would set the angular displacement of the thruster.\r\n\r\n    * The angle, in radians, would be relative to the nominal thruster attitude.\r\n    \r\n* The configuration should allow for angle limits \\(e.g., \\+/- pi/2\\) to be set.\r\n* A new rotation joint should be included in the engine model to facilitate the rotation\r\n\r\n    * The plugin would also set the joint rotation so that the visual model reflects the vectored thrust.\r\n    \r\n\r\n**Design Questions**\r\n\r\n1. How should max angle be set? Currently done by changing `<maxAngle>NUMBER</maxAngle>` in `wamv_gazebo_thruster_config.xacro`\r\n2. Thrust commands currently have a `lastCmdTime` to track the time of last command signal and a `cmdTimeout` to describe how long each command should last for before not putting a force anymore. Should there be something similar for angle? eg. if publish `left_thrust_angle=pi/3` and then stop publishing angle, should the angle remain pi/3 until set otherwise, or should it \u201creset\u201d back to `left_thrust_angle=0` if it does not receive angle messages? Currently there is no \u201creset\u201d, it remains at the last published angle\r\n3. What to do if |published angle| > maxAngle? eg. if publish `left_thrust_angle=5*pi/4`, but we have `<maxAngle>${pi/2}</maxAngle>`, what should it do? Output error/warning message and ignore message \\(keep same angle as it previously was\\)? Or clip it \\(if it is >pi/2, then clip to pi/2. If it is <-pi/2, then clip to -pi/2\\).\r\n4. If published angle = 7\\*pi/4 and maxAngle=pi/2, should this be interpreted as -pi/4 or clipped to pi/2 or output error message and ignore? Currently doing clipping.", "title": "Issue#96 Add Thrust Angle and Rotation Joint", "destination": {"commit": {"hash": "f66016894202", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/f66016894202.json"}, "html": {"href": "#!/osrf/vrx/commits/f66016894202"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "7ba323f97a6e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/7ba323f97a6e.json"}, "html": {"href": "#!/osrf/vrx/commits/7ba323f97a6e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#96-add-vector-thrust"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-06-14T18:16:12.724630+00:00"}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105814387.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105814387"}}, "parent": {"id": 105505596, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105505596.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105505596"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Agreed on extending the teleoperation node. This looks very good by the way!", "markup": "markdown", "html": "<p>Agreed on extending the teleoperation node. This looks very good by the way!</p>", "type": "rendered"}, "created_on": "2019-06-14T17:35:47.511523+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-06-14T17:35:47.524502+00:00", "type": "pullrequest_comment", "id": 105814387}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105814341.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105814341"}}, "parent": {"id": 105502518, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105502518.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105502518"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Maybe a value of `200-300` as P gain is a bit more realistic.", "markup": "markdown", "html": "<p>Maybe a value of <code>200-300</code> as P gain is a bit more realistic.</p>", "type": "rendered"}, "created_on": "2019-06-14T17:35:20.869918+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-06-14T17:35:20.884606+00:00", "type": "pullrequest_comment", "id": 105814341}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105812762.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105812762"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "For consistency, I'd suggest to use `ROS_ERROR_STREAM` if this is a required parameter \\(according to the documentation it is\\).", "markup": "markdown", "html": "<p>For consistency, I'd suggest to use <code>ROS_ERROR_STREAM</code> if this is a required parameter (according to the documentation it is).</p>", "type": "rendered"}, "created_on": "2019-06-14T17:20:30.183654+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2019-06-14T17:20:30.191370+00:00", "type": "pullrequest_comment", "id": 105812762}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105812353.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105812353"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Nit: You can write `if (!thruster.engineJoint)`", "markup": "markdown", "html": "<p>Nit: You can write <code>if (!thruster.engineJoint)</code></p>", "type": "rendered"}, "created_on": "2019-06-14T17:16:25.409621+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2019-06-14T17:16:25.420656+00:00", "type": "pullrequest_comment", "id": 105812353}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105812030.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105812030"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Can you use `std::clamp()` instead? You could also remove the `include <boost/...>.`", "markup": "markdown", "html": "<p>Can you use <code>std::clamp()</code> instead? You could also remove the <code>include &lt;boost/...&gt;.</code></p>", "type": "rendered"}, "created_on": "2019-06-14T17:13:34.104085+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {}, "updated_on": "2019-06-14T17:13:34.110699+00:00", "type": "pullrequest_comment", "id": 105812030}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105728739.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105728739"}}, "parent": {"id": 105504345, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105504345.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105504345"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "I see that makes sense. I chose to do `ROS_WARN_STREAM()` simply because all of other SDF parsing parts of this file used it. They do not currently have `gzerr` or `gzwarn`. Should I replace them all? If so, I can easily do so, and I may do it for the other usv plugins that are doing ROS logging.\n\n![](data/bitbucket.org/repo/BgXLzgM/images/683611762-ROS_WARN.png)\n![](data/bitbucket.org/repo/BgXLzgM/images/1251474901-gzwarn.png)\n\u200c\n\n![](data/bitbucket.org/repo/BgXLzgM/images/1467141651-gzerr.png)\n", "markup": "markdown", "html": "<p>I see that makes sense. I chose to do <code>ROS_WARN_STREAM()</code> simply because all of other SDF parsing parts of this file used it. They do not currently have <code>gzerr</code> or <code>gzwarn</code>. Should I replace them all? If so, I can easily do so, and I may do it for the other usv plugins that are doing ROS logging.</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/683611762-ROS_WARN.png\" />\n<img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1251474901-gzwarn.png\" />\n\u200c</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1467141651-gzerr.png\" /></p>", "type": "rendered"}, "created_on": "2019-06-14T08:24:38.000362+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "inline": {}, "updated_on": "2019-06-14T08:24:38.017344+00:00", "type": "pullrequest_comment", "id": 105728739}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105727086.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105727086"}}, "parent": {"id": 105690789, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105690789.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105690789"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Thanks Carlos, these issues have been addressed in [c14ccdf](#!/osrf/vrx/commits/c14ccdf58db85bb0f777578f79e4c6af1cd146ba)", "markup": "markdown", "html": "<p>Thanks Carlos, these issues have been addressed in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/c14ccdf58db85bb0f777578f79e4c6af1cd146ba\" rel=\"nofollow\">c14ccdf</a></p>", "type": "rendered"}, "created_on": "2019-06-14T08:14:30.693186+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-14T08:14:30.705987+00:00", "type": "pullrequest_comment", "id": 105727086}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105727047.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105727047"}}, "parent": {"id": 105505140, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105505140.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105505140"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Great idea. I have added the <enableAngle> bool parameter in [4fcbada](#!/osrf/vrx/commits/4fcbadace733172f351fc07ee9f5c6e7311979ff)", "markup": "markdown", "html": "<p>Great idea. I have added the &lt;enableAngle&gt; bool parameter in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/4fcbadace733172f351fc07ee9f5c6e7311979ff\" rel=\"nofollow\">4fcbada</a></p>", "type": "rendered"}, "created_on": "2019-06-14T08:14:12.380626+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-14T08:14:12.396138+00:00", "type": "pullrequest_comment", "id": 105727047}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"update": {"description": "**Description of Issue**\r\n\r\nWe\u2019d like to extend both the [usv\\_gazebo\\_thrust\\_plugin](#!/osrf/vrx/src/default/usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc) Gazebo model plugin and the [engine.xacro](#!/osrf/vrx/src/default/wamv_description/urdf/engine.xacro) model so that users can change the thrust angle via a ROS API.\r\n\r\n* The thrust plugin would subscribe to a ROS topic, e.g., \u201cleft\\_ thrust\\_angle\u201d, that would set the angular displacement of the thruster.\r\n\r\n    * The angle, in radians, would be relative to the nominal thruster attitude.\r\n    \r\n* The configuration should allow for angle limits \\(e.g., \\+/- pi/2\\) to be set.\r\n* A new rotation joint should be included in the engine model to facilitate the rotation\r\n\r\n    * The plugin would also set the joint rotation so that the visual model reflects the vectored thrust.\r\n    \r\n\r\n**Design Questions**\r\n\r\n1. How should max angle be set? Currently done by changing `<maxAngle>NUMBER</maxAngle>` in `wamv_gazebo_thruster_config.xacro`\r\n2. Thrust commands currently have a `lastCmdTime` to track the time of last command signal and a `cmdTimeout` to describe how long each command should last for before not putting a force anymore. Should there be something similar for angle? eg. if publish `left_thrust_angle=pi/3` and then stop publishing angle, should the angle remain pi/3 until set otherwise, or should it \u201creset\u201d back to `left_thrust_angle=0` if it does not receive angle messages? Currently there is no \u201creset\u201d, it remains at the last published angle\r\n3. What to do if |published angle| > maxAngle? eg. if publish `left_thrust_angle=5*pi/4`, but we have `<maxAngle>${pi/2}</maxAngle>`, what should it do? Output error/warning message and ignore message \\(keep same angle as it previously was\\)? Or clip it \\(if it is >pi/2, then clip to pi/2. If it is <-pi/2, then clip to -pi/2\\).\r\n4. If published angle = 7\\*pi/4 and maxAngle=pi/2, should this be interpreted as -pi/4 or clipped to pi/2 or output error message and ignore? Currently doing clipping.", "title": "Issue#96 Add Thrust Angle and Rotation Joint", "destination": {"commit": {"hash": "f66016894202", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/f66016894202.json"}, "html": {"href": "#!/osrf/vrx/commits/f66016894202"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "4fcbadace733", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/4fcbadace733.json"}, "html": {"href": "#!/osrf/vrx/commits/4fcbadace733"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#96-add-vector-thrust"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-06-14T08:12:12.511766+00:00"}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"update": {"description": "**Description of Issue**\r\n\r\nWe\u2019d like to extend both the [usv\\_gazebo\\_thrust\\_plugin](#!/osrf/vrx/src/default/usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc) Gazebo model plugin and the [engine.xacro](#!/osrf/vrx/src/default/wamv_description/urdf/engine.xacro) model so that users can change the thrust angle via a ROS API.\r\n\r\n* The thrust plugin would subscribe to a ROS topic, e.g., \u201cleft\\_ thrust\\_angle\u201d, that would set the angular displacement of the thruster.\r\n\r\n    * The angle, in radians, would be relative to the nominal thruster attitude.\r\n    \r\n* The configuration should allow for angle limits \\(e.g., \\+/- pi/2\\) to be set.\r\n* A new rotation joint should be included in the engine model to facilitate the rotation\r\n\r\n    * The plugin would also set the joint rotation so that the visual model reflects the vectored thrust.\r\n    \r\n\r\n**Design Questions**\r\n\r\n1. How should max angle be set? Currently done by changing `<maxAngle>NUMBER</maxAngle>` in `wamv_gazebo_thruster_config.xacro`\r\n2. Thrust commands currently have a `lastCmdTime` to track the time of last command signal and a `cmdTimeout` to describe how long each command should last for before not putting a force anymore. Should there be something similar for angle? eg. if publish `left_thrust_angle=pi/3` and then stop publishing angle, should the angle remain pi/3 until set otherwise, or should it \u201creset\u201d back to `left_thrust_angle=0` if it does not receive angle messages? Currently there is no \u201creset\u201d, it remains at the last published angle\r\n3. What to do if |published angle| > maxAngle? eg. if publish `left_thrust_angle=5*pi/4`, but we have `<maxAngle>${pi/2}</maxAngle>`, what should it do? Output error/warning message and ignore message \\(keep same angle as it previously was\\)? Or clip it \\(if it is >pi/2, then clip to pi/2. If it is <-pi/2, then clip to -pi/2\\).\r\n4. If published angle = 7\\*pi/4 and maxAngle=pi/2, should this be interpreted as -pi/4 or clipped to pi/2 or output error message and ignore? Currently doing clipping.", "title": "Issue#96 Add Thrust Angle and Rotation Joint", "destination": {"commit": {"hash": "f66016894202", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/f66016894202.json"}, "html": {"href": "#!/osrf/vrx/commits/f66016894202"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "c14ccdf58db8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/c14ccdf58db8.json"}, "html": {"href": "#!/osrf/vrx/commits/c14ccdf58db8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#96-add-vector-thrust"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-06-14T07:39:41.273810+00:00"}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105691805.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105691805"}}, "parent": {"id": 105503999, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105503999.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105503999"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Added in [a730385](#!/osrf/vrx/commits/a7303850785837e4c99814d23dbce036bf4e5270) thanks for noticing", "markup": "markdown", "html": "<p>Added in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/a7303850785837e4c99814d23dbce036bf4e5270\" rel=\"nofollow\">a730385</a> thanks for noticing</p>", "type": "rendered"}, "created_on": "2019-06-14T00:06:03.317072+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "inline": {}, "updated_on": "2019-06-14T00:06:03.327738+00:00", "type": "pullrequest_comment", "id": 105691805}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105691792.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105691792"}}, "parent": {"id": 105503495, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105503495.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105503495"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Added in [a730385](#!/osrf/vrx/commits/a7303850785837e4c99814d23dbce036bf4e5270) thanks for noticing", "markup": "markdown", "html": "<p>Added in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/a7303850785837e4c99814d23dbce036bf4e5270\" rel=\"nofollow\">a730385</a> thanks for noticing</p>", "type": "rendered"}, "created_on": "2019-06-14T00:05:55.307540+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "inline": {}, "updated_on": "2019-06-14T00:05:55.319224+00:00", "type": "pullrequest_comment", "id": 105691792}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105691786.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105691786"}}, "parent": {"id": 105503243, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105503243.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105503243"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Great, resolved in [a730385](#!/osrf/vrx/commits/a7303850785837e4c99814d23dbce036bf4e5270)", "markup": "markdown", "html": "<p>Great, resolved in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/a7303850785837e4c99814d23dbce036bf4e5270\" rel=\"nofollow\">a730385</a></p>", "type": "rendered"}, "created_on": "2019-06-14T00:05:43.722714+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "inline": {}, "updated_on": "2019-06-14T00:05:43.735632+00:00", "type": "pullrequest_comment", "id": 105691786}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"update": {"description": "**Description of Issue**\r\n\r\nWe\u2019d like to extend both the [usv\\_gazebo\\_thrust\\_plugin](#!/osrf/vrx/src/default/usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc) Gazebo model plugin and the [engine.xacro](#!/osrf/vrx/src/default/wamv_description/urdf/engine.xacro) model so that users can change the thrust angle via a ROS API.\r\n\r\n* The thrust plugin would subscribe to a ROS topic, e.g., \u201cleft\\_ thrust\\_angle\u201d, that would set the angular displacement of the thruster.\r\n\r\n    * The angle, in radians, would be relative to the nominal thruster attitude.\r\n    \r\n* The configuration should allow for angle limits \\(e.g., \\+/- pi/2\\) to be set.\r\n* A new rotation joint should be included in the engine model to facilitate the rotation\r\n\r\n    * The plugin would also set the joint rotation so that the visual model reflects the vectored thrust.\r\n    \r\n\r\n**Design Questions**\r\n\r\n1. How should max angle be set? Currently done by changing `<maxAngle>NUMBER</maxAngle>` in `wamv_gazebo_thruster_config.xacro`\r\n2. Thrust commands currently have a `lastCmdTime` to track the time of last command signal and a `cmdTimeout` to describe how long each command should last for before not putting a force anymore. Should there be something similar for angle? eg. if publish `left_thrust_angle=pi/3` and then stop publishing angle, should the angle remain pi/3 until set otherwise, or should it \u201creset\u201d back to `left_thrust_angle=0` if it does not receive angle messages? Currently there is no \u201creset\u201d, it remains at the last published angle\r\n3. What to do if |published angle| > maxAngle? eg. if publish `left_thrust_angle=5*pi/4`, but we have `<maxAngle>${pi/2}</maxAngle>`, what should it do? Output error/warning message and ignore message \\(keep same angle as it previously was\\)? Or clip it \\(if it is >pi/2, then clip to pi/2. If it is <-pi/2, then clip to -pi/2\\).\r\n4. If published angle = 7\\*pi/4 and maxAngle=pi/2, should this be interpreted as -pi/4 or clipped to pi/2 or output error message and ignore? Currently doing clipping.", "title": "Issue#96 Add Thrust Angle and Rotation Joint", "destination": {"commit": {"hash": "f66016894202", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/f66016894202.json"}, "html": {"href": "#!/osrf/vrx/commits/f66016894202"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "a73038507858", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/a73038507858.json"}, "html": {"href": "#!/osrf/vrx/commits/a73038507858"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#96-add-vector-thrust"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-06-14T00:05:01.401153+00:00"}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105691221.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105691221"}}, "parent": {"id": 105501191, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105501191.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105501191"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "Great thanks for the feedback.", "markup": "markdown", "html": "<p>Great thanks for the feedback.</p>", "type": "rendered"}, "created_on": "2019-06-13T23:54:49.846908+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-13T23:54:49.858092+00:00", "type": "pullrequest_comment", "id": 105691221}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"update": {"description": "**Description of Issue**\r\n\r\nWe\u2019d like to extend both the [usv\\_gazebo\\_thrust\\_plugin](#!/osrf/vrx/src/default/usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc) Gazebo model plugin and the [engine.xacro](#!/osrf/vrx/src/default/wamv_description/urdf/engine.xacro) model so that users can change the thrust angle via a ROS API.\r\n\r\n* The thrust plugin would subscribe to a ROS topic, e.g., \u201cleft\\_ thrust\\_angle\u201d, that would set the angular displacement of the thruster.\r\n\r\n    * The angle, in radians, would be relative to the nominal thruster attitude.\r\n    \r\n* The configuration should allow for angle limits \\(e.g., \\+/- pi/2\\) to be set.\r\n* A new rotation joint should be included in the engine model to facilitate the rotation\r\n\r\n    * The plugin would also set the joint rotation so that the visual model reflects the vectored thrust.\r\n    \r\n\r\n**Design Questions**\r\n\r\n1. How should max angle be set? Currently done by changing `<maxAngle>NUMBER</maxAngle>` in `wamv_gazebo_thruster_config.xacro`\r\n2. Thrust commands currently have a `lastCmdTime` to track the time of last command signal and a `cmdTimeout` to describe how long each command should last for before not putting a force anymore. Should there be something similar for angle? eg. if publish `left_thrust_angle=pi/3` and then stop publishing angle, should the angle remain pi/3 until set otherwise, or should it \u201creset\u201d back to `left_thrust_angle=0` if it does not receive angle messages? Currently there is no \u201creset\u201d, it remains at the last published angle\r\n3. What to do if |published angle| > maxAngle? eg. if publish `left_thrust_angle=5*pi/4`, but we have `<maxAngle>${pi/2}</maxAngle>`, what should it do? Output error/warning message and ignore message \\(keep same angle as it previously was\\)? Or clip it \\(if it is >pi/2, then clip to pi/2. If it is <-pi/2, then clip to -pi/2\\).\r\n4. If published angle = 7\\*pi/4 and maxAngle=pi/2, should this be interpreted as -pi/4 or clipped to pi/2 or output error message and ignore? Currently doing clipping.", "title": "Issue#96 Add Thrust Angle and Rotation Joint", "destination": {"commit": {"hash": "f66016894202", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/f66016894202.json"}, "html": {"href": "#!/osrf/vrx/commits/f66016894202"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "206fb0080491", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/206fb0080491.json"}, "html": {"href": "#!/osrf/vrx/commits/206fb0080491"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#96-add-vector-thrust"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-06-13T23:52:20.538234+00:00"}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105690789.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105690789"}}, "parent": {"id": 105502518, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105502518.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105502518"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "The `code_check.sh` script is already in `default`. Make sure that your code is clean. I see a few minor errors. [#!/osrf/vrx/addon/pipelines/home#!/results/207](#!/osrf/vrx/addon/pipelines/home#!/results/207)", "markup": "markdown", "html": "<p>The <code>code_check.sh</code> script is already in <code>default</code>. Make sure that your code is clean. I see a few minor errors. <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/addon/pipelines/home#!/results/207\" rel=\"nofollow\">#!/osrf/vrx/addon/pipelines/home#!/results/207</a></p>", "type": "rendered"}, "created_on": "2019-06-13T23:46:20.375947+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-06-13T23:47:27.295432+00:00", "type": "pullrequest_comment", "id": 105690789}, "pull_request": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}}], "next": "data/repositories/osrf/vrx/pullrequests/108/activity_ctx=bzIa7CxSz.json"}