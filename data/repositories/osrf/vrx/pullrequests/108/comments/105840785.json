{"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105840785.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105840785"}}, "parent": {"id": 105814387, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments/105814387.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108/_/diff#comment-105814387"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 108, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint"}, "content": {"raw": "I have added untested teleop functionality using the joystick in [ead4637](#!/osrf/vrx/commits/ead4637bbfc793db9724b62e681f7a8ca3a38f7d). It retains the same default functionality \\(fixed thruster angles\\). It has a `set_thrust_angle` parameter that can be set to `true` to read and publish angles.\n\n`roslaunch vrx_gazebo usv_keydrive.launch set_thrust_angle:=true`\n\nIt also has a `max_angle` parameter that I am not sure will be able to be used.\n\nIt is untested because I do not have a controller with me right now and I could not find a workable virtual controller on Linux.\n\n**Questions**\n\n* `scale` in the yaml file will surely need to be adjusted \\(maybe proportional to desired max\\_angle?\\)\n* Is this method of choosing to keep fixed or adjustable thruster angle valid or is there a better way?\n* I cannot test it without a controller \\(may look to buy one this weekend\\), but how are the axes?\n\n    * Currently the .yaml file has \n    \n        * `axis 1 => linear.x` \\(left stick up/down\\)\n        * `axis 3 => angular.z ` \\(right stick up/down\\)\n        \n    * I added\n    \n        * `axis 2 => data` \\(of left and right thruster angle\\) \\(right stick left/right\\)\n        \n    * Does this work? Would it actually be better to have the linear.x and angular.z both be on the left stick \\(i imagine using left/right instead of up/down may be nice for turning with angular.z, but I haven\u2019t tried it\\)\n    \n        * If changed, could have \n        \n            * `axis 1 => linear.x` \\(left stick up/down\\)\n            * `axis 0 => angular.z ` \\(left stick right/left\\)\n            * `axis 2 => data` \\(of left and right thruster angle\\) \\(right stick left/right\\)\n            \n        \n    \n\n![](data/bitbucket.org/repo/BgXLzgM/images/308228509-Joy_Axes.png)\n_Figure 1: Joy Axes_", "markup": "markdown", "html": "<p>I have added untested teleop functionality using the joystick in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/ead4637bbfc793db9724b62e681f7a8ca3a38f7d\" rel=\"nofollow\">ead4637</a>. It retains the same default functionality (fixed thruster angles). It has a <code>set_thrust_angle</code> parameter that can be set to <code>true</code> to read and publish angles.</p>\n<p><code>roslaunch vrx_gazebo usv_keydrive.launch set_thrust_angle:=true</code></p>\n<p>It also has a <code>max_angle</code> parameter that I am not sure will be able to be used.</p>\n<p>It is untested because I do not have a controller with me right now and I could not find a workable virtual controller on Linux.</p>\n<p><strong>Questions</strong></p>\n<ul>\n<li><code>scale</code> in the yaml file will surely need to be adjusted (maybe proportional to desired max_angle?)</li>\n<li>Is this method of choosing to keep fixed or adjustable thruster angle valid or is there a better way?</li>\n<li>\n<p>I cannot test it without a controller (may look to buy one this weekend), but how are the axes?</p>\n<ul>\n<li>\n<p>Currently the .yaml file has </p>\n<ul>\n<li><code>axis 1 =&gt; linear.x</code> (left stick up/down)</li>\n<li><code>axis 3 =&gt; angular.z</code> (right stick up/down)</li>\n</ul>\n</li>\n<li>\n<p>I added</p>\n<ul>\n<li><code>axis 2 =&gt; data</code> (of left and right thruster angle) (right stick left/right)</li>\n</ul>\n</li>\n<li>\n<p>Does this work? Would it actually be better to have the linear.x and angular.z both be on the left stick (i imagine using left/right instead of up/down may be nice for turning with angular.z, but I haven\u2019t tried it)</p>\n<ul>\n<li>\n<p>If changed, could have </p>\n<ul>\n<li><code>axis 1 =&gt; linear.x</code> (left stick up/down)</li>\n<li><code>axis 0 =&gt; angular.z</code> (left stick right/left)</li>\n<li><code>axis 2 =&gt; data</code> (of left and right thruster angle) (right stick left/right)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/308228509-Joy_Axes.png\" />\n<em>Figure 1: Joy Axes</em></p>", "type": "rendered"}, "created_on": "2019-06-15T00:31:23.029220+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-15T00:31:23.040431+00:00", "type": "pullrequest_comment", "id": 105840785}