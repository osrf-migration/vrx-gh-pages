{"pagelen": 50, "values": [{"update": {"description": "Note: This PR does not necessarily need to be merged in, but should be discussed.\r\n\r\n**Description**\r\n\r\nThis PR is to discuss the `enable_ros_network` argument, which is described below.\r\n\r\nFor the purpose of competition, we need to limit the exposed ROS and Gazebo topics to the ones that competitors should be able to use. There are three types:\r\n\r\n1. Gazebo transport topics - being solved by Docker containers that have no Gazebo transport topic communication\r\n2. ROS VRX topics - these can be hidden by setting an environment variable \\(should already be set\\)\r\n3. ROS topics with gazebo namespace - \\(eg. /gazebo/model\\_states\\). This should be handled by `enable_ros_network` parameter for Gazebo. \r\n\r\n**Issue**\r\n\r\nThis should work, but the only issue is that we call `spawn_model` in launch files to spawn the WAM-V. However, this uses one of the topics hidden by `enable_ros_network:=false`. Source code: [https://github.com/ros-simulation/gazebo\\_ros\\_pkgs/blob/melodic-devel/gazebo\\_ros/scripts/spawn\\_model](https://github.com/ros-simulation/gazebo_ros_pkgs/blob/melodic-devel/gazebo_ros/scripts/spawn_model)\r\n\r\n**Question**\r\n\r\nCan we change how we spawn the model or do we have to make another branch of Gazebo?\r\n\r\nAlso, should we even keep this argument, or should we just manually add it to `extra_gazebo_args`?", "title": "Add enable_ros_network argument", "destination": {"commit": {"hash": "27a797286c6c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/27a797286c6c.json"}, "html": {"href": "#!/osrf/vrx/commits/27a797286c6c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "5b6fc4f7c059", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/5b6fc4f7c059.json"}, "html": {"href": "#!/osrf/vrx/commits/5b6fc4f7c059"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Add-Option-To-Hide-Gazebo-Topics"}}, "state": "MERGED", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-08T23:27:47.363580+00:00"}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"update": {"description": "Note: This PR does not necessarily need to be merged in, but should be discussed.\r\n\r\n**Description**\r\n\r\nThis PR is to discuss the `enable_ros_network` argument, which is described below.\r\n\r\nFor the purpose of competition, we need to limit the exposed ROS and Gazebo topics to the ones that competitors should be able to use. There are three types:\r\n\r\n1. Gazebo transport topics - being solved by Docker containers that have no Gazebo transport topic communication\r\n2. ROS VRX topics - these can be hidden by setting an environment variable \\(should already be set\\)\r\n3. ROS topics with gazebo namespace - \\(eg. /gazebo/model\\_states\\). This should be handled by `enable_ros_network` parameter for Gazebo. \r\n\r\n**Issue**\r\n\r\nThis should work, but the only issue is that we call `spawn_model` in launch files to spawn the WAM-V. However, this uses one of the topics hidden by `enable_ros_network:=false`. Source code: [https://github.com/ros-simulation/gazebo\\_ros\\_pkgs/blob/melodic-devel/gazebo\\_ros/scripts/spawn\\_model](https://github.com/ros-simulation/gazebo_ros_pkgs/blob/melodic-devel/gazebo_ros/scripts/spawn_model)\r\n\r\n**Question**\r\n\r\nCan we change how we spawn the model or do we have to make another branch of Gazebo?\r\n\r\nAlso, should we even keep this argument, or should we just manually add it to `extra_gazebo_args`?", "title": "Add enable_ros_network argument", "destination": {"commit": {"hash": "27a797286c6c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/27a797286c6c.json"}, "html": {"href": "#!/osrf/vrx/commits/27a797286c6c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "5b6fc4f7c059", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/5b6fc4f7c059.json"}, "html": {"href": "#!/osrf/vrx/commits/5b6fc4f7c059"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Add-Option-To-Hide-Gazebo-Topics"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-08T23:18:14.676945+00:00"}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"approval": {"date": "2019-08-08T23:16:35.673217+00:00", "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112509558.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112509558"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "It works for me as expected!", "markup": "markdown", "html": "<p>It works for me as expected!</p>", "type": "rendered"}, "created_on": "2019-08-08T23:16:32.564190+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-08-08T23:16:32.573677+00:00", "type": "pullrequest_comment", "id": 112509558}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112509456.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112509456"}}, "parent": {"id": 112508126, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112508126.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112508126"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "Minor change in [96a50e6](#!/osrf/vrx/commits/96a50e65d37a70658be49fc8bdfb37eefb981f30?at=default).", "markup": "markdown", "html": "<p>Minor change in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/96a50e65d37a70658be49fc8bdfb37eefb981f30?at=default\" rel=\"nofollow\">96a50e6</a>.</p>", "type": "rendered"}, "created_on": "2019-08-08T23:14:50.083927+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-08-08T23:14:50.094880+00:00", "type": "pullrequest_comment", "id": 112509456}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"update": {"description": "Note: This PR does not necessarily need to be merged in, but should be discussed.\r\n\r\n**Description**\r\n\r\nThis PR is to discuss the `enable_ros_network` argument, which is described below.\r\n\r\nFor the purpose of competition, we need to limit the exposed ROS and Gazebo topics to the ones that competitors should be able to use. There are three types:\r\n\r\n1. Gazebo transport topics - being solved by Docker containers that have no Gazebo transport topic communication\r\n2. ROS VRX topics - these can be hidden by setting an environment variable \\(should already be set\\)\r\n3. ROS topics with gazebo namespace - \\(eg. /gazebo/model\\_states\\). This should be handled by `enable_ros_network` parameter for Gazebo. \r\n\r\n**Issue**\r\n\r\nThis should work, but the only issue is that we call `spawn_model` in launch files to spawn the WAM-V. However, this uses one of the topics hidden by `enable_ros_network:=false`. Source code: [https://github.com/ros-simulation/gazebo\\_ros\\_pkgs/blob/melodic-devel/gazebo\\_ros/scripts/spawn\\_model](https://github.com/ros-simulation/gazebo_ros_pkgs/blob/melodic-devel/gazebo_ros/scripts/spawn_model)\r\n\r\n**Question**\r\n\r\nCan we change how we spawn the model or do we have to make another branch of Gazebo?\r\n\r\nAlso, should we even keep this argument, or should we just manually add it to `extra_gazebo_args`?", "title": "Add enable_ros_network argument", "destination": {"commit": {"hash": "27a797286c6c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/27a797286c6c.json"}, "html": {"href": "#!/osrf/vrx/commits/27a797286c6c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "96a50e65d37a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/96a50e65d37a.json"}, "html": {"href": "#!/osrf/vrx/commits/96a50e65d37a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Add-Option-To-Hide-Gazebo-Topics"}}, "state": "OPEN", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "date": "2019-08-08T23:13:52.801240+00:00"}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112508126.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112508126"}}, "parent": {"id": 112493444, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112493444.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112493444"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "`New test 1` doesn\u2019t work for me. Gazebo gets stuck trying to launch.", "markup": "markdown", "html": "<p><code>New test 1</code> doesn\u2019t work for me. Gazebo gets stuck trying to launch.</p>", "type": "rendered"}, "created_on": "2019-08-08T22:52:11.734156+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-08-08T22:52:11.745243+00:00", "type": "pullrequest_comment", "id": 112508126}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112507254.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112507254"}}, "parent": {"id": 112493793, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112493793.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112493793"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "I think all the tasks under the `yamls` directory should be ready for competition to avoid surprises to the teams. I don't think we need to touch the rest of the `launch` files. They\u2019re good in non-competition mode.", "markup": "markdown", "html": "<p>I think all the tasks under the <code>yamls</code> directory should be ready for competition to avoid surprises to the teams. I don't think we need to touch the rest of the <code>launch</code> files. They\u2019re good in non-competition mode.</p>", "type": "rendered"}, "created_on": "2019-08-08T22:37:50.729522+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-08-08T22:39:35.900397+00:00", "type": "pullrequest_comment", "id": 112507254}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"update": {"description": "Note: This PR does not necessarily need to be merged in, but should be discussed.\r\n\r\n**Description**\r\n\r\nThis PR is to discuss the `enable_ros_network` argument, which is described below.\r\n\r\nFor the purpose of competition, we need to limit the exposed ROS and Gazebo topics to the ones that competitors should be able to use. There are three types:\r\n\r\n1. Gazebo transport topics - being solved by Docker containers that have no Gazebo transport topic communication\r\n2. ROS VRX topics - these can be hidden by setting an environment variable \\(should already be set\\)\r\n3. ROS topics with gazebo namespace - \\(eg. /gazebo/model\\_states\\). This should be handled by `enable_ros_network` parameter for Gazebo. \r\n\r\n**Issue**\r\n\r\nThis should work, but the only issue is that we call `spawn_model` in launch files to spawn the WAM-V. However, this uses one of the topics hidden by `enable_ros_network:=false`. Source code: [https://github.com/ros-simulation/gazebo\\_ros\\_pkgs/blob/melodic-devel/gazebo\\_ros/scripts/spawn\\_model](https://github.com/ros-simulation/gazebo_ros_pkgs/blob/melodic-devel/gazebo_ros/scripts/spawn_model)\r\n\r\n**Question**\r\n\r\nCan we change how we spawn the model or do we have to make another branch of Gazebo?\r\n\r\nAlso, should we even keep this argument, or should we just manually add it to `extra_gazebo_args`?", "title": "Add enable_ros_network argument", "destination": {"commit": {"hash": "d6d78fca245b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/d6d78fca245b.json"}, "html": {"href": "#!/osrf/vrx/commits/d6d78fca245b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "083e7f55b9e2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/083e7f55b9e2.json"}, "html": {"href": "#!/osrf/vrx/commits/083e7f55b9e2"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Add-Option-To-Hide-Gazebo-Topics"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-08T20:00:34.405167+00:00"}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"update": {"description": "Note: This PR does not necessarily need to be merged in, but should be discussed.\r\n\r\n**Description**\r\n\r\nThis PR is to discuss the `enable_ros_network` argument, which is described below.\r\n\r\nFor the purpose of competition, we need to limit the exposed ROS and Gazebo topics to the ones that competitors should be able to use. There are three types:\r\n\r\n1. Gazebo transport topics - being solved by Docker containers that have no Gazebo transport topic communication\r\n2. ROS VRX topics - these can be hidden by setting an environment variable \\(should already be set\\)\r\n3. ROS topics with gazebo namespace - \\(eg. /gazebo/model\\_states\\). This should be handled by `enable_ros_network` parameter for Gazebo. \r\n\r\n**Issue**\r\n\r\nThis should work, but the only issue is that we call `spawn_model` in launch files to spawn the WAM-V. However, this uses one of the topics hidden by `enable_ros_network:=false`. Source code: [https://github.com/ros-simulation/gazebo\\_ros\\_pkgs/blob/melodic-devel/gazebo\\_ros/scripts/spawn\\_model](https://github.com/ros-simulation/gazebo_ros_pkgs/blob/melodic-devel/gazebo_ros/scripts/spawn_model)\r\n\r\n**Question**\r\n\r\nCan we change how we spawn the model or do we have to make another branch of Gazebo?\r\n\r\nAlso, should we even keep this argument, or should we just manually add it to `extra_gazebo_args`?", "title": "Add enable_ros_network argument", "destination": {"commit": {"hash": "d6d78fca245b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/d6d78fca245b.json"}, "html": {"href": "#!/osrf/vrx/commits/d6d78fca245b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "35860fc6d9a3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/35860fc6d9a3.json"}, "html": {"href": "#!/osrf/vrx/commits/35860fc6d9a3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Add-Option-To-Hide-Gazebo-Topics"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-08T20:00:09.957999+00:00"}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112493793.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112493793"}}, "parent": {"id": 112493444, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112493444.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112493444"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "Last question: should I modify any of the other launch files in any way? They all are still working regularly.", "markup": "markdown", "html": "<p>Last question: should I modify any of the other launch files in any way? They all are still working regularly.</p>", "type": "rendered"}, "created_on": "2019-08-08T19:59:47.140783+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-08T19:59:47.151366+00:00", "type": "pullrequest_comment", "id": 112493793}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112493444.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112493444"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "@{557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd} This PR should be ready for review and merging unless you see any issues with it. \n\n**To Test:**\n\n_Regression test 1_\n\n`source ~/vrx_ws/devel/setup.bash` `roslaunch vrx_gazebo sandisland.launch verbose:=true` should work normally\n\n`rostopic echo /vrx/debug/wind/direction`, `rostopic echo /gazebo/model_states` these should both be published to\n\n_Regression test 2_\n\n`source ~/vrx_ws/devel/setup.bash` `roslaunch vrx_gazebo dock.launch verbose:=true` should work normally\n\n`rostopic echo /vrx/debug/wind/direction`, `rostopic echo /gazebo/model_states` these should both be published to\n\n_New Test 1_\n\n`source ~/vrx_ws/devel/setup.bash`  `roslaunch vrx_gazebo generate_wamv.launch wamv_target:=$HOME/my_urdf.urdf`  `roslaunch vrx_gazebo sandisland.launch verbose:=true non_competition_mode:=false urdf:=$HOME/my_urdf.urdf` should look the same as usual, maybe slight delay in model spawn\n\n`rostopic echo /vrx/debug/wind/direction`, `rostopic echo /gazebo/model_states` these should both NOT be published to\n\n_New Test 2_\n\n`source ~/vrx_ws/devel/setup.bash` `roslaunch vrx_gazebo sandisland.launch verbose:=true non_competition_mode:=false` should look the same as usual, maybe slight delay in model spawn\n\n`rostopic echo /vrx/debug/wind/direction`, `rostopic echo /gazebo/model_states` these should both NOT be published to\n\n**Key Changes:**\n\n1. Use `non_competition_mode` argument instead of `competition_mode` because would have to negate it for `enable_ros_network` and `VRX_DEBUG`. Using $\\(eval not arg\\('competition\\_mode'\\)\\) did not work for VRX\\_DEBUG, maybe this part compiles too late and is not recognized. Please let me know if we should change the name to `publish_non_competition_topics`, or even change it back to `competition_mode` \\(and probably use if/unless in tags, but may be messier code\\)\n2. Change all instances of `package://vrx_gazebo/models/<model>...`  to `model://<model>...`, ensure this doesn\u2019t break anything\n3. Added comments for clarity\n4. Tried to move `rosrun xacro...` before `wait_until_gzserver_is_up`, but it did not work. Not a big deal and works fine. \n\nLet me know if you have any concerns or issues.", "markup": "markdown", "html": "<p><span class=\"ap-mention\" data-atlassian-id=\"557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd\">@Carlos Ag\u00fcero</span> This PR should be ready for review and merging unless you see any issues with it. </p>\n<p><strong>To Test:</strong></p>\n<p><em>Regression test 1</em></p>\n<p><code>source ~/vrx_ws/devel/setup.bash</code> <code>roslaunch vrx_gazebo sandisland.launch verbose:=true</code> should work normally</p>\n<p><code>rostopic echo /vrx/debug/wind/direction</code>, <code>rostopic echo /gazebo/model_states</code> these should both be published to</p>\n<p><em>Regression test 2</em></p>\n<p><code>source ~/vrx_ws/devel/setup.bash</code> <code>roslaunch vrx_gazebo dock.launch verbose:=true</code> should work normally</p>\n<p><code>rostopic echo /vrx/debug/wind/direction</code>, <code>rostopic echo /gazebo/model_states</code> these should both be published to</p>\n<p><em>New Test 1</em></p>\n<p><code>source ~/vrx_ws/devel/setup.bash</code>  <code>roslaunch vrx_gazebo generate_wamv.launch wamv_target:=$HOME/my_urdf.urdf</code>  <code>roslaunch vrx_gazebo sandisland.launch verbose:=true non_competition_mode:=false urdf:=$HOME/my_urdf.urdf</code> should look the same as usual, maybe slight delay in model spawn</p>\n<p><code>rostopic echo /vrx/debug/wind/direction</code>, <code>rostopic echo /gazebo/model_states</code> these should both NOT be published to</p>\n<p><em>New Test 2</em></p>\n<p><code>source ~/vrx_ws/devel/setup.bash</code> <code>roslaunch vrx_gazebo sandisland.launch verbose:=true non_competition_mode:=false</code> should look the same as usual, maybe slight delay in model spawn</p>\n<p><code>rostopic echo /vrx/debug/wind/direction</code>, <code>rostopic echo /gazebo/model_states</code> these should both NOT be published to</p>\n<p><strong>Key Changes:</strong></p>\n<ol>\n<li>Use <code>non_competition_mode</code> argument instead of <code>competition_mode</code> because would have to negate it for <code>enable_ros_network</code> and <code>VRX_DEBUG</code>. Using $(eval not arg('competition_mode')) did not work for VRX_DEBUG, maybe this part compiles too late and is not recognized. Please let me know if we should change the name to <code>publish_non_competition_topics</code>, or even change it back to <code>competition_mode</code> (and probably use if/unless in tags, but may be messier code)</li>\n<li>Change all instances of <code>package://vrx_gazebo/models/&lt;model&gt;...</code>  to <code>model://&lt;model&gt;...</code>, ensure this doesn\u2019t break anything</li>\n<li>Added comments for clarity</li>\n<li>Tried to move <code>rosrun xacro...</code> before <code>wait_until_gzserver_is_up</code>, but it did not work. Not a big deal and works fine. </li>\n</ol>\n<p>Let me know if you have any concerns or issues.</p>", "type": "rendered"}, "created_on": "2019-08-08T19:56:11.452170+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-08T19:56:11.470642+00:00", "type": "pullrequest_comment", "id": 112493444}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"update": {"description": "Note: This PR does not necessarily need to be merged in, but should be discussed.\r\n\r\n**Description**\r\n\r\nThis PR is to discuss the `enable_ros_network` argument, which is described below.\r\n\r\nFor the purpose of competition, we need to limit the exposed ROS and Gazebo topics to the ones that competitors should be able to use. There are three types:\r\n\r\n1. Gazebo transport topics - being solved by Docker containers that have no Gazebo transport topic communication\r\n2. ROS VRX topics - these can be hidden by setting an environment variable \\(should already be set\\)\r\n3. ROS topics with gazebo namespace - \\(eg. /gazebo/model\\_states\\). This should be handled by `enable_ros_network` parameter for Gazebo. \r\n\r\n**Issue**\r\n\r\nThis should work, but the only issue is that we call `spawn_model` in launch files to spawn the WAM-V. However, this uses one of the topics hidden by `enable_ros_network:=false`. Source code: [https://github.com/ros-simulation/gazebo\\_ros\\_pkgs/blob/melodic-devel/gazebo\\_ros/scripts/spawn\\_model](https://github.com/ros-simulation/gazebo_ros_pkgs/blob/melodic-devel/gazebo_ros/scripts/spawn_model)\r\n\r\n**Question**\r\n\r\nCan we change how we spawn the model or do we have to make another branch of Gazebo?\r\n\r\nAlso, should we even keep this argument, or should we just manually add it to `extra_gazebo_args`?", "title": "Add enable_ros_network argument", "destination": {"commit": {"hash": "d6d78fca245b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/d6d78fca245b.json"}, "html": {"href": "#!/osrf/vrx/commits/d6d78fca245b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f05008561b9e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/f05008561b9e.json"}, "html": {"href": "#!/osrf/vrx/commits/f05008561b9e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Add-Option-To-Hide-Gazebo-Topics"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-08T19:45:40.546236+00:00"}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112489195.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112489195"}}, "parent": {"id": 112488426, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112488426.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112488426"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "Resolving by changing `competition_mode` to `non_competition_mode`", "markup": "markdown", "html": "<p>Resolving by changing <code>competition_mode</code> to <code>non_competition_mode</code></p>", "type": "rendered"}, "created_on": "2019-08-08T19:17:19.350020+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "inline": {}, "updated_on": "2019-08-08T19:17:50.316601+00:00", "type": "pullrequest_comment", "id": 112489195}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112488426.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112488426"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "I just realized that this method of setting the environment variable is not working or at least not working fast enough. It is still publishing /vrx/debug/wind/direction", "markup": "markdown", "html": "<p>I just realized that this method of setting the environment variable is not working or at least not working fast enough. It is still publishing /vrx/debug/wind/direction</p>", "type": "rendered"}, "created_on": "2019-08-08T19:10:01.913253+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "inline": {}, "updated_on": "2019-08-08T19:10:01.924583+00:00", "type": "pullrequest_comment", "id": 112488426}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"update": {"description": "Note: This PR does not necessarily need to be merged in, but should be discussed.\r\n\r\n**Description**\r\n\r\nThis PR is to discuss the `enable_ros_network` argument, which is described below.\r\n\r\nFor the purpose of competition, we need to limit the exposed ROS and Gazebo topics to the ones that competitors should be able to use. There are three types:\r\n\r\n1. Gazebo transport topics - being solved by Docker containers that have no Gazebo transport topic communication\r\n2. ROS VRX topics - these can be hidden by setting an environment variable \\(should already be set\\)\r\n3. ROS topics with gazebo namespace - \\(eg. /gazebo/model\\_states\\). This should be handled by `enable_ros_network` parameter for Gazebo. \r\n\r\n**Issue**\r\n\r\nThis should work, but the only issue is that we call `spawn_model` in launch files to spawn the WAM-V. However, this uses one of the topics hidden by `enable_ros_network:=false`. Source code: [https://github.com/ros-simulation/gazebo\\_ros\\_pkgs/blob/melodic-devel/gazebo\\_ros/scripts/spawn\\_model](https://github.com/ros-simulation/gazebo_ros_pkgs/blob/melodic-devel/gazebo_ros/scripts/spawn_model)\r\n\r\n**Question**\r\n\r\nCan we change how we spawn the model or do we have to make another branch of Gazebo?\r\n\r\nAlso, should we even keep this argument, or should we just manually add it to `extra_gazebo_args`?", "title": "Add enable_ros_network argument", "destination": {"commit": {"hash": "d6d78fca245b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/d6d78fca245b.json"}, "html": {"href": "#!/osrf/vrx/commits/d6d78fca245b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "90e9d27b039a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/90e9d27b039a.json"}, "html": {"href": "#!/osrf/vrx/commits/90e9d27b039a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Add-Option-To-Hide-Gazebo-Topics"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-08T19:01:50.481395+00:00"}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112487486.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112487486"}}, "parent": {"id": 112485209, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112485209.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112485209"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "Strange. It seems to be working fine now. I am not sure if this is still an issue.", "markup": "markdown", "html": "<p>Strange. It seems to be working fine now. I am not sure if this is still an issue.</p>", "type": "rendered"}, "created_on": "2019-08-08T19:00:50.589021+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-08T19:00:50.601422+00:00", "type": "pullrequest_comment", "id": 112487486}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112485209.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112485209"}}, "parent": {"id": 112482686, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112482686.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112482686"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "@{557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd} do you know of any way to properly check for the correct time that `gz model ...` command can be called?\n\nThe checks I use include waiting for `gz topic -l | wc -l` to be greater than a certain number and checking for `pgrep gzserver`, but for some reason calling these too early causes an issue. Let me know if you can recreate this bug.\n\nIf instead I just change it to `sleep 10s` it works every time, but I feel that may be wrong for different situations \\(slower or faster computers, model spawned too late for the competition, etc.\\). ", "markup": "markdown", "html": "<p><span class=\"ap-mention\" data-atlassian-id=\"557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd\">@Carlos Ag\u00fcero</span> do you know of any way to properly check for the correct time that <code>gz model ...</code> command can be called?</p>\n<p>The checks I use include waiting for <code>gz topic -l | wc -l</code> to be greater than a certain number and checking for <code>pgrep gzserver</code>, but for some reason calling these too early causes an issue. Let me know if you can recreate this bug.</p>\n<p>If instead I just change it to <code>sleep 10s</code> it works every time, but I feel that may be wrong for different situations (slower or faster computers, model spawned too late for the competition, etc.). </p>", "type": "rendered"}, "created_on": "2019-08-08T18:41:01.865064+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-08T18:44:51.009868+00:00", "type": "pullrequest_comment", "id": 112485209}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112482686.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112482686"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "It is almost working. The main issue I have is that I am calling a script called `spawn_wamv.bash` and in that script, I am calling `gz model ...`, but i need to call it at the right timing not too early or else for some reason it crashes Gazebo. Not too late so it doesn\u2019t start the competition too late. I am trying to use pgrep gzserver and gz topic -l | wc -l, but it is causing issues, i am not sure why", "markup": "markdown", "html": "<p>It is almost working. The main issue I have is that I am calling a script called <code>spawn_wamv.bash</code> and in that script, I am calling <code>gz model ...</code>, but i need to call it at the right timing not too early or else for some reason it crashes Gazebo. Not too late so it doesn\u2019t start the competition too late. I am trying to use pgrep gzserver and gz topic -l | wc -l, but it is causing issues, i am not sure why</p>", "type": "rendered"}, "created_on": "2019-08-08T18:19:56.700131+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-08T18:19:56.711219+00:00", "type": "pullrequest_comment", "id": 112482686}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112482377.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112482377"}}, "parent": {"id": 112481584, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112481584.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112481584"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "Great will do.", "markup": "markdown", "html": "<p>Great will do.</p>", "type": "rendered"}, "created_on": "2019-08-08T18:17:14.139460+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-08T18:17:14.154288+00:00", "type": "pullrequest_comment", "id": 112482377}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112481584.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112481584"}}, "parent": {"id": 112338937, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112338937.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112338937"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "Maybe `competition_mode`or `enable_competition_mode`. Something that makes sense with a boolean value.", "markup": "markdown", "html": "<p>Maybe <code>competition_mode</code>or <code>enable_competition_mode</code>. Something that makes sense with a boolean value.</p>", "type": "rendered"}, "created_on": "2019-08-08T18:10:47.380075+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-08-08T18:10:47.392211+00:00", "type": "pullrequest_comment", "id": 112481584}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112340084.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112340084"}}, "parent": {"id": 112339758, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112339758.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112339758"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "Actually seems to be working sometimes, investigating.", "markup": "markdown", "html": "<p>Actually seems to be working sometimes, investigating.</p>", "type": "rendered"}, "created_on": "2019-08-08T01:03:17.648536+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-08T01:03:17.658257+00:00", "type": "pullrequest_comment", "id": 112340084}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"update": {"description": "Note: This PR does not necessarily need to be merged in, but should be discussed.\r\n\r\n**Description**\r\n\r\nThis PR is to discuss the `enable_ros_network` argument, which is described below.\r\n\r\nFor the purpose of competition, we need to limit the exposed ROS and Gazebo topics to the ones that competitors should be able to use. There are three types:\r\n\r\n1. Gazebo transport topics - being solved by Docker containers that have no Gazebo transport topic communication\r\n2. ROS VRX topics - these can be hidden by setting an environment variable \\(should already be set\\)\r\n3. ROS topics with gazebo namespace - \\(eg. /gazebo/model\\_states\\). This should be handled by `enable_ros_network` parameter for Gazebo. \r\n\r\n**Issue**\r\n\r\nThis should work, but the only issue is that we call `spawn_model` in launch files to spawn the WAM-V. However, this uses one of the topics hidden by `enable_ros_network:=false`. Source code: [https://github.com/ros-simulation/gazebo\\_ros\\_pkgs/blob/melodic-devel/gazebo\\_ros/scripts/spawn\\_model](https://github.com/ros-simulation/gazebo_ros_pkgs/blob/melodic-devel/gazebo_ros/scripts/spawn_model)\r\n\r\n**Question**\r\n\r\nCan we change how we spawn the model or do we have to make another branch of Gazebo?\r\n\r\nAlso, should we even keep this argument, or should we just manually add it to `extra_gazebo_args`?", "title": "Add enable_ros_network argument", "destination": {"commit": {"hash": "d6d78fca245b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/d6d78fca245b.json"}, "html": {"href": "#!/osrf/vrx/commits/d6d78fca245b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "a1fce7a1d60b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/a1fce7a1d60b.json"}, "html": {"href": "#!/osrf/vrx/commits/a1fce7a1d60b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Add-Option-To-Hide-Gazebo-Topics"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-08T01:00:51.013252+00:00"}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112339758.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112339758"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "From my initial testing, it is not working. I went to vrx, ran grep -r \u201cpackage://vrx\\_gazebo/models\u201d, then edited each to change package://vrx\\_gazebo\\_models/battery\u2026 to model://battery\u2026\n\nroslaunch vrx\\_gazebo sandisland.launch worked, but roslaunch vrx\\_gazebo sandisland.launch enable\\_ros\\_network:=false did not", "markup": "markdown", "html": "<p>From my initial testing, it is not working. I went to vrx, ran grep -r \u201cpackage://vrx_gazebo/models\u201d, then edited each to change package://vrx_gazebo_models/battery\u2026 to model://battery\u2026</p>\n<p>roslaunch vrx_gazebo sandisland.launch worked, but roslaunch vrx_gazebo sandisland.launch enable_ros_network:=false did not</p>", "type": "rendered"}, "created_on": "2019-08-08T00:57:22.363748+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-08T00:57:22.372498+00:00", "type": "pullrequest_comment", "id": 112339758}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112338937.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112338937"}}, "parent": {"id": 112337244, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112337244.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112337244"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "1\\) great i will leave it as is then\n\n2\\) it would be very easy to change the variable name. Does `real_competition_settings` sound right? \\(Would need to change trues to falses, easy fix\\)\n\n3\\) yes it's not a big deal but something to note", "markup": "markdown", "html": "<p>1) great i will leave it as is then</p>\n<p>2) it would be very easy to change the variable name. Does <code>real_competition_settings</code> sound right? (Would need to change trues to falses, easy fix)</p>\n<p>3) yes it's not a big deal but something to note</p>", "type": "rendered"}, "created_on": "2019-08-08T00:40:08.146727+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-08T00:40:08.161037+00:00", "type": "pullrequest_comment", "id": 112338937}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112338693.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112338693"}}, "parent": {"id": 112338447, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112338447.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112338447"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "That's actually much better. I will make that change and test it out.", "markup": "markdown", "html": "<p>That's actually much better. I will make that change and test it out.</p>", "type": "rendered"}, "created_on": "2019-08-08T00:35:14.481688+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-08T00:35:14.493035+00:00", "type": "pullrequest_comment", "id": 112338693}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112338447.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112338447"}}, "parent": {"id": 112338240, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112338240.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112338240"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "I see. Does it make sense to point `GAZEBO_MODEL_PATH` to `/home/developer/vrx_ws/src/vrx/vrx_gazebo/models/` and change the way we\u2019re loading the mesh to `[model://battery/mesh/battery.dae]`?", "markup": "markdown", "html": "<p>I see. Does it make sense to point <code>GAZEBO_MODEL_PATH</code> to <code>/home/developer/vrx_ws/src/vrx/vrx_gazebo/models/</code> and change the way we\u2019re loading the mesh to <code>[model://battery/mesh/battery.dae]</code>?</p>", "type": "rendered"}, "created_on": "2019-08-08T00:29:24.692815+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-08-08T00:30:14.610678+00:00", "type": "pullrequest_comment", "id": 112338447}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112338240.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112338240"}}, "parent": {"id": 112338034, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112338034.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112338034"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "Unfortunately, we do need it. The errors say the models in vrx\\_gazebo are `[model://vrx_gazebo/models/battery/mesh/battery.dae]`. It looks for this relative to the model path.\n\nIf the model path is /home/tylerlum/vrx\\_ws/src/vrx, it would find the file at /home/tylerlum/vrx\\_ws/src/vrx \\+ `/vrx_gazebo/models/battery/mesh/battery.dae`. The issue is that the directories in /home/tylerlum/vrx\\_ws/src/vrx do not have model.config files.\n\nIf the model path is /home/tylerlum/vrx\\_ws/src/vrx/vrx\\_gazebo/models, it would find the file at /home/tylerlum/vrx\\_ws/src/vrx/vrx\\_gazebo/models \\+ `/vrx_gazebo/models/battery/mesh/battery.dae`. The good thing is that all directories in /home/tylerlum/vrx\\_ws/src/vrx/vrx\\_gazebo/models have model.config files to avoid the issue.  We need the extra dirs to make it work /home/tylerlum/vrx\\_ws/src/vrx/vrx\\_gazebo/models \\+ `/vrx_gazebo/models/battery/mesh/battery.da`", "markup": "markdown", "html": "<p>Unfortunately, we do need it. The errors say the models in vrx_gazebo are <code>[model://vrx_gazebo/models/battery/mesh/battery.dae]</code>. It looks for this relative to the model path.</p>\n<p>If the model path is /home/tylerlum/vrx_ws/src/vrx, it would find the file at /home/tylerlum/vrx_ws/src/vrx + <code>/vrx_gazebo/models/battery/mesh/battery.dae</code>. The issue is that the directories in /home/tylerlum/vrx_ws/src/vrx do not have model.config files.</p>\n<p>If the model path is /home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/models, it would find the file at /home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/models + <code>/vrx_gazebo/models/battery/mesh/battery.dae</code>. The good thing is that all directories in /home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/models have model.config files to avoid the issue.  We need the extra dirs to make it work /home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/models + <code>/vrx_gazebo/models/battery/mesh/battery.da</code></p>", "type": "rendered"}, "created_on": "2019-08-08T00:26:02.751779+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-08T00:28:50.341733+00:00", "type": "pullrequest_comment", "id": 112338240}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112338034.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112338034"}}, "parent": {"id": 112337244, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112337244.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112337244"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "Do you need the extra `vrx_gazebo/models/vrx_gazebo` directory? It seems that all content under `vrx_gazebo/models` are Gazebo models, no xacros or mesh files. I don\u2019t see why you need the trick here.", "markup": "markdown", "html": "<p>Do you need the extra <code>vrx_gazebo/models/vrx_gazebo</code> directory? It seems that all content under <code>vrx_gazebo/models</code> are Gazebo models, no xacros or mesh files. I don\u2019t see why you need the trick here.</p>", "type": "rendered"}, "created_on": "2019-08-08T00:21:32.224835+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-08-08T00:23:16.199997+00:00", "type": "pullrequest_comment", "id": 112338034}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112337244.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112337244"}}, "parent": {"id": 112336517, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112336517.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112336517"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "Just out of curiosity? Are you using Z shell? If so that\u2019s totally fine. I want to make sure that you\u2019re not sourcing the wrong setup file if you\u2019re using bash as most of the people use.\n\n\\(1\\) `No model` looks OK to me.\n\n\\(2\\) A more comprehensive name would be better but if it\u2019s more involved, the default one is fine.\n\n\\(3\\) It might be related with the symbolic links created. ~~I\u2019ll try to see if I can reproduce it.~~ Confirmed: It happens to me too. There's a loop because `/home/developer/vrx_ws/src/vrx/vrx_gazebo/models/vrx_gazebo/models` points back to `/home/developer/vrx_ws/src/vrx/vrx_gazebo/models/`.", "markup": "markdown", "html": "<p>Just out of curiosity? Are you using Z shell? If so that\u2019s totally fine. I want to make sure that you\u2019re not sourcing the wrong setup file if you\u2019re using bash as most of the people use.</p>\n<p>(1) <code>No model</code> looks OK to me.</p>\n<p>(2) A more comprehensive name would be better but if it\u2019s more involved, the default one is fine.</p>\n<p>(3) It might be related with the symbolic links created. <del>I\u2019ll try to see if I can reproduce it.</del> Confirmed: It happens to me too. There's a loop because <code>/home/developer/vrx_ws/src/vrx/vrx_gazebo/models/vrx_gazebo/models</code> points back to <code>/home/developer/vrx_ws/src/vrx/vrx_gazebo/models/</code>.</p>", "type": "rendered"}, "created_on": "2019-08-08T00:05:48.685875+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-08-08T00:18:24.924711+00:00", "type": "pullrequest_comment", "id": 112337244}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112337495.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112337495"}}, "parent": {"id": 112337244, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112337244.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112337244"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "Oh yes I use zsh, I find it has good autocompletion. Sorry I should have written bash there", "markup": "markdown", "html": "<p>Oh yes I use zsh, I find it has good autocompletion. Sorry I should have written bash there</p>", "type": "rendered"}, "created_on": "2019-08-08T00:10:22.437546+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-08T00:10:22.450404+00:00", "type": "pullrequest_comment", "id": 112337495}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112336517.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112336517"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "This should be ready for review! The only questions are:\n\n1. What should the fake model names be? \u201cNo Model\u201d or \u201c\\_\u201d?\n2. Is `enable_ros_network` the right variable name? How it is used now, we could even change it to `non_competition_setup` or similar\n3. I get a strange output when I run `source ~/vrx_ws/devel/setup.zsh` then \n\n\u279c  vrx\\_gazebo roslaunch vrx\\_gazebo ......find: File system loop detected; \u2018/home/tylerlum/vrx\\_ws/src/vrx/vrx\\_gazebo/models/vrx\\_gazebo/models\u2019 is part of the same file system loop as \u2018/home/tylerlum/vrx\\_ws/src/vrx/vrx\\_gazebo/models\u2019.\n\nIf I write `roslaunch vrx_gazebo ` then TAB, then I get this output.\n\nOtherwise, it is working very reliably for me.\n\n**Instructions:**\n\n1. `source ~/vrx_ws/devel/setup.zsh` then `roslaunch vrx_gazebo sandisland.launch verbose:=true` \\(runs regular, should be identical to before\\)\n2. `source ~/vrx_ws/devel/setup.zsh` then `roslaunch vrx_gazebo sandisland.launch verbose:=true enable_ros_network:=false` \\(runs diff spawn model node, should ACT identical to before\\)\n\nHow does it look? Also, view the fake models in Insert", "markup": "markdown", "html": "<p>This should be ready for review! The only questions are:</p>\n<ol>\n<li>What should the fake model names be? \u201cNo Model\u201d or \u201c_\u201d?</li>\n<li>Is <code>enable_ros_network</code> the right variable name? How it is used now, we could even change it to <code>non_competition_setup</code> or similar</li>\n<li>I get a strange output when I run <code>source ~/vrx_ws/devel/setup.zsh</code> then </li>\n</ol>\n<p>\u279c  vrx_gazebo roslaunch vrx_gazebo ......find: File system loop detected; \u2018/home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/models/vrx_gazebo/models\u2019 is part of the same file system loop as \u2018/home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/models\u2019.</p>\n<p>If I write <code>roslaunch vrx_gazebo</code> then TAB, then I get this output.</p>\n<p>Otherwise, it is working very reliably for me.</p>\n<p><strong>Instructions:</strong></p>\n<ol>\n<li><code>source ~/vrx_ws/devel/setup.zsh</code> then <code>roslaunch vrx_gazebo sandisland.launch verbose:=true</code> (runs regular, should be identical to before)</li>\n<li><code>source ~/vrx_ws/devel/setup.zsh</code> then <code>roslaunch vrx_gazebo sandisland.launch verbose:=true enable_ros_network:=false</code> (runs diff spawn model node, should ACT identical to before)</li>\n</ol>\n<p>How does it look? Also, view the fake models in Insert</p>", "type": "rendered"}, "created_on": "2019-08-07T23:52:16.783617+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-07T23:52:16.792928+00:00", "type": "pullrequest_comment", "id": 112336517}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112336193.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112336193"}}, "parent": {"id": 112336068, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112336068.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112336068"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "Empty string or a space for string did not work. I could make it just an underscore like so. Which looks better?\n\n![](data/bitbucket.org/repo/BgXLzgM/images/1507066489-image.png)\n", "markup": "markdown", "html": "<p>Empty string or a space for string did not work. I could make it just an underscore like so. Which looks better?</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1507066489-image.png\" /></p>", "type": "rendered"}, "created_on": "2019-08-07T23:45:59.603846+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-07T23:45:59.613330+00:00", "type": "pullrequest_comment", "id": 112336193}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112336068.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112336068"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "With the most recent commit, there are empty fake models in the insert model list like this\n\n![](data/bitbucket.org/repo/BgXLzgM/images/297588799-No_Model.png)\nI called them No Model. Note that Ocean Waves doesnt' work either. If I click on them, I get:\n\n```\nError [parser.cc:334] Error finding file [/home/tylerlum/vrx_ws/src/vrx/wamv_gazebo/models/wamv_gazebo/model.sdf].\nError [parser.cc:334] Error finding file [/home/tylerlum/vrx_ws/src/vrx/wamv_description/models/wamv_description/model.sdf].\nError [parser.cc:334] Error finding file [/home/tylerlum/vrx_ws/src/vrx/wave_gazebo/world_models/ocean_waves/model.sdf].\n```", "markup": "markdown", "html": "<p>With the most recent commit, there are empty fake models in the insert model list like this</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/297588799-No_Model.png\" />\nI called them No Model. Note that Ocean Waves doesnt' work either. If I click on them, I get:</p>\n<div class=\"codehilite\"><pre><span></span>Error [parser.cc:334] Error finding file [/home/tylerlum/vrx_ws/src/vrx/wamv_gazebo/models/wamv_gazebo/model.sdf].\nError [parser.cc:334] Error finding file [/home/tylerlum/vrx_ws/src/vrx/wamv_description/models/wamv_description/model.sdf].\nError [parser.cc:334] Error finding file [/home/tylerlum/vrx_ws/src/vrx/wave_gazebo/world_models/ocean_waves/model.sdf].\n</pre></div>", "type": "rendered"}, "created_on": "2019-08-07T23:44:24.684375+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-07T23:44:24.692091+00:00", "type": "pullrequest_comment", "id": 112336068}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"update": {"description": "Note: This PR does not necessarily need to be merged in, but should be discussed.\r\n\r\n**Description**\r\n\r\nThis PR is to discuss the `enable_ros_network` argument, which is described below.\r\n\r\nFor the purpose of competition, we need to limit the exposed ROS and Gazebo topics to the ones that competitors should be able to use. There are three types:\r\n\r\n1. Gazebo transport topics - being solved by Docker containers that have no Gazebo transport topic communication\r\n2. ROS VRX topics - these can be hidden by setting an environment variable \\(should already be set\\)\r\n3. ROS topics with gazebo namespace - \\(eg. /gazebo/model\\_states\\). This should be handled by `enable_ros_network` parameter for Gazebo. \r\n\r\n**Issue**\r\n\r\nThis should work, but the only issue is that we call `spawn_model` in launch files to spawn the WAM-V. However, this uses one of the topics hidden by `enable_ros_network:=false`. Source code: [https://github.com/ros-simulation/gazebo\\_ros\\_pkgs/blob/melodic-devel/gazebo\\_ros/scripts/spawn\\_model](https://github.com/ros-simulation/gazebo_ros_pkgs/blob/melodic-devel/gazebo_ros/scripts/spawn_model)\r\n\r\n**Question**\r\n\r\nCan we change how we spawn the model or do we have to make another branch of Gazebo?\r\n\r\nAlso, should we even keep this argument, or should we just manually add it to `extra_gazebo_args`?", "title": "Add enable_ros_network argument", "destination": {"commit": {"hash": "d6d78fca245b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/d6d78fca245b.json"}, "html": {"href": "#!/osrf/vrx/commits/d6d78fca245b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "9ca5cabab3ba", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/9ca5cabab3ba.json"}, "html": {"href": "#!/osrf/vrx/commits/9ca5cabab3ba"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Add-Option-To-Hide-Gazebo-Topics"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-07T23:42:40.232974+00:00"}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"update": {"description": "Note: This PR does not necessarily need to be merged in, but should be discussed.\r\n\r\n**Description**\r\n\r\nThis PR is to discuss the `enable_ros_network` argument, which is described below.\r\n\r\nFor the purpose of competition, we need to limit the exposed ROS and Gazebo topics to the ones that competitors should be able to use. There are three types:\r\n\r\n1. Gazebo transport topics - being solved by Docker containers that have no Gazebo transport topic communication\r\n2. ROS VRX topics - these can be hidden by setting an environment variable \\(should already be set\\)\r\n3. ROS topics with gazebo namespace - \\(eg. /gazebo/model\\_states\\). This should be handled by `enable_ros_network` parameter for Gazebo. \r\n\r\n**Issue**\r\n\r\nThis should work, but the only issue is that we call `spawn_model` in launch files to spawn the WAM-V. However, this uses one of the topics hidden by `enable_ros_network:=false`. Source code: [https://github.com/ros-simulation/gazebo\\_ros\\_pkgs/blob/melodic-devel/gazebo\\_ros/scripts/spawn\\_model](https://github.com/ros-simulation/gazebo_ros_pkgs/blob/melodic-devel/gazebo_ros/scripts/spawn_model)\r\n\r\n**Question**\r\n\r\nCan we change how we spawn the model or do we have to make another branch of Gazebo?\r\n\r\nAlso, should we even keep this argument, or should we just manually add it to `extra_gazebo_args`?", "title": "Add enable_ros_network argument", "destination": {"commit": {"hash": "d6d78fca245b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/d6d78fca245b.json"}, "html": {"href": "#!/osrf/vrx/commits/d6d78fca245b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "429d57647942", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/429d57647942.json"}, "html": {"href": "#!/osrf/vrx/commits/429d57647942"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Add-Option-To-Hide-Gazebo-Topics"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-07T23:28:02.842122+00:00"}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112332303.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112332303"}}, "parent": {"id": 112330465, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112330465.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112330465"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": ":ok_hand: ", "markup": "markdown", "html": "<p><img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f44c.png\" alt=\"\ud83d\udc4c\" title=\":ok_hand:\" data-emoji-short-name=\":ok_hand:\" /> </p>", "type": "rendered"}, "created_on": "2019-08-07T22:36:56.919966+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-08-07T22:36:56.930683+00:00", "type": "pullrequest_comment", "id": 112332303}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112330465.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112330465"}}, "parent": {"id": 112318070, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112318070.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112318070"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "I need to give at another look now that my Ogre packages are fixed. I will put a comment here when it's ready ", "markup": "markdown", "html": "<p>I need to give at another look now that my Ogre packages are fixed. I will put a comment here when it's ready </p>", "type": "rendered"}, "created_on": "2019-08-07T22:11:05.305938+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-07T22:11:05.320401+00:00", "type": "pullrequest_comment", "id": 112330465}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112318070.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112318070"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "@{5b96b66385af94340e7cabce} , is this good for another review pass?", "markup": "markdown", "html": "<p><span class=\"ap-mention\" data-atlassian-id=\"5b96b66385af94340e7cabce\">@Tyler Lum</span> , is this good for another review pass?</p>", "type": "rendered"}, "created_on": "2019-08-07T19:56:53.973818+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-08-07T19:57:05.203733+00:00", "type": "pullrequest_comment", "id": 112318070}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112152099.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112152099"}}, "parent": {"id": 112148944, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112148944.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112148944"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "It is still happening when i reverted to default. I think it is something with my system. Going to try to restart it.", "markup": "markdown", "html": "<p>It is still happening when i reverted to default. I think it is something with my system. Going to try to restart it.</p>", "type": "rendered"}, "created_on": "2019-08-06T22:06:37.566535+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-06T22:06:37.577211+00:00", "type": "pullrequest_comment", "id": 112152099}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112148944.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112148944"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "I am having Segmentation Faults from gazebo.\n\n```\nSegmentation fault (core dumped)[gazebo_gui-3] process has died [pid 19594, exit code 139, cmd /opt/ros/melodic/lib/gazebo_ros/gzclient --verbose __name:=gazebo_gui __log:=/home/tylerlum/.ros/log/e0ba648a-b890-11e9-87fd-dcfb48e97aeb/gazebo_gui-3.log].log file: /home/tylerlum/.ros/log/e0ba648a-b890-11e9-87fd-dcfb48e97aeb/gazebo_gui-3*.log\n```", "markup": "markdown", "html": "<p>I am having Segmentation Faults from gazebo.</p>\n<div class=\"codehilite\"><pre><span></span>Segmentation fault (core dumped)[gazebo_gui-3] process has died [pid 19594, exit code 139, cmd /opt/ros/melodic/lib/gazebo_ros/gzclient --verbose __name:=gazebo_gui __log:=/home/tylerlum/.ros/log/e0ba648a-b890-11e9-87fd-dcfb48e97aeb/gazebo_gui-3.log].log file: /home/tylerlum/.ros/log/e0ba648a-b890-11e9-87fd-dcfb48e97aeb/gazebo_gui-3*.log\n</pre></div>", "type": "rendered"}, "created_on": "2019-08-06T21:27:53.621911+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-06T21:27:53.629279+00:00", "type": "pullrequest_comment", "id": 112148944}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"update": {"description": "Note: This PR does not necessarily need to be merged in, but should be discussed.\r\n\r\n**Description**\r\n\r\nThis PR is to discuss the `enable_ros_network` argument, which is described below.\r\n\r\nFor the purpose of competition, we need to limit the exposed ROS and Gazebo topics to the ones that competitors should be able to use. There are three types:\r\n\r\n1. Gazebo transport topics - being solved by Docker containers that have no Gazebo transport topic communication\r\n2. ROS VRX topics - these can be hidden by setting an environment variable \\(should already be set\\)\r\n3. ROS topics with gazebo namespace - \\(eg. /gazebo/model\\_states\\). This should be handled by `enable_ros_network` parameter for Gazebo. \r\n\r\n**Issue**\r\n\r\nThis should work, but the only issue is that we call `spawn_model` in launch files to spawn the WAM-V. However, this uses one of the topics hidden by `enable_ros_network:=false`. Source code: [https://github.com/ros-simulation/gazebo\\_ros\\_pkgs/blob/melodic-devel/gazebo\\_ros/scripts/spawn\\_model](https://github.com/ros-simulation/gazebo_ros_pkgs/blob/melodic-devel/gazebo_ros/scripts/spawn_model)\r\n\r\n**Question**\r\n\r\nCan we change how we spawn the model or do we have to make another branch of Gazebo?\r\n\r\nAlso, should we even keep this argument, or should we just manually add it to `extra_gazebo_args`?", "title": "Add enable_ros_network argument", "destination": {"commit": {"hash": "01261902805c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/01261902805c.json"}, "html": {"href": "#!/osrf/vrx/commits/01261902805c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "bf7c6594c3da", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/bf7c6594c3da.json"}, "html": {"href": "#!/osrf/vrx/commits/bf7c6594c3da"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Add-Option-To-Hide-Gazebo-Topics"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-06T19:53:07.782198+00:00"}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"update": {"description": "Note: This PR does not necessarily need to be merged in, but should be discussed.\r\n\r\n**Description**\r\n\r\nThis PR is to discuss the `enable_ros_network` argument, which is described below.\r\n\r\nFor the purpose of competition, we need to limit the exposed ROS and Gazebo topics to the ones that competitors should be able to use. There are three types:\r\n\r\n1. Gazebo transport topics - being solved by Docker containers that have no Gazebo transport topic communication\r\n2. ROS VRX topics - these can be hidden by setting an environment variable \\(should already be set\\)\r\n3. ROS topics with gazebo namespace - \\(eg. /gazebo/model\\_states\\). This should be handled by `enable_ros_network` parameter for Gazebo. \r\n\r\n**Issue**\r\n\r\nThis should work, but the only issue is that we call `spawn_model` in launch files to spawn the WAM-V. However, this uses one of the topics hidden by `enable_ros_network:=false`. Source code: [https://github.com/ros-simulation/gazebo\\_ros\\_pkgs/blob/melodic-devel/gazebo\\_ros/scripts/spawn\\_model](https://github.com/ros-simulation/gazebo_ros_pkgs/blob/melodic-devel/gazebo_ros/scripts/spawn_model)\r\n\r\n**Question**\r\n\r\nCan we change how we spawn the model or do we have to make another branch of Gazebo?\r\n\r\nAlso, should we even keep this argument, or should we just manually add it to `extra_gazebo_args`?", "title": "Add enable_ros_network argument", "destination": {"commit": {"hash": "01261902805c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/01261902805c.json"}, "html": {"href": "#!/osrf/vrx/commits/01261902805c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "db1f46960a30", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/db1f46960a30.json"}, "html": {"href": "#!/osrf/vrx/commits/db1f46960a30"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Add-Option-To-Hide-Gazebo-Topics"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-06T19:51:26.944034+00:00"}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"update": {"description": "Note: This PR does not necessarily need to be merged in, but should be discussed.\r\n\r\n**Description**\r\n\r\nThis PR is to discuss the `enable_ros_network` argument, which is described below.\r\n\r\nFor the purpose of competition, we need to limit the exposed ROS and Gazebo topics to the ones that competitors should be able to use. There are three types:\r\n\r\n1. Gazebo transport topics - being solved by Docker containers that have no Gazebo transport topic communication\r\n2. ROS VRX topics - these can be hidden by setting an environment variable \\(should already be set\\)\r\n3. ROS topics with gazebo namespace - \\(eg. /gazebo/model\\_states\\). This should be handled by `enable_ros_network` parameter for Gazebo. \r\n\r\n**Issue**\r\n\r\nThis should work, but the only issue is that we call `spawn_model` in launch files to spawn the WAM-V. However, this uses one of the topics hidden by `enable_ros_network:=false`. Source code: [https://github.com/ros-simulation/gazebo\\_ros\\_pkgs/blob/melodic-devel/gazebo\\_ros/scripts/spawn\\_model](https://github.com/ros-simulation/gazebo_ros_pkgs/blob/melodic-devel/gazebo_ros/scripts/spawn_model)\r\n\r\n**Question**\r\n\r\nCan we change how we spawn the model or do we have to make another branch of Gazebo?\r\n\r\nAlso, should we even keep this argument, or should we just manually add it to `extra_gazebo_args`?", "title": "Add enable_ros_network argument", "destination": {"commit": {"hash": "01261902805c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/01261902805c.json"}, "html": {"href": "#!/osrf/vrx/commits/01261902805c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "f108b0c288d0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/f108b0c288d0.json"}, "html": {"href": "#!/osrf/vrx/commits/f108b0c288d0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Add-Option-To-Hide-Gazebo-Topics"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-06T19:33:52.206452+00:00"}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"update": {"description": "Note: This PR does not necessarily need to be merged in, but should be discussed.\r\n\r\n**Description**\r\n\r\nThis PR is to discuss the `enable_ros_network` argument, which is described below.\r\n\r\nFor the purpose of competition, we need to limit the exposed ROS and Gazebo topics to the ones that competitors should be able to use. There are three types:\r\n\r\n1. Gazebo transport topics - being solved by Docker containers that have no Gazebo transport topic communication\r\n2. ROS VRX topics - these can be hidden by setting an environment variable \\(should already be set\\)\r\n3. ROS topics with gazebo namespace - \\(eg. /gazebo/model\\_states\\). This should be handled by `enable_ros_network` parameter for Gazebo. \r\n\r\n**Issue**\r\n\r\nThis should work, but the only issue is that we call `spawn_model` in launch files to spawn the WAM-V. However, this uses one of the topics hidden by `enable_ros_network:=false`. Source code: [https://github.com/ros-simulation/gazebo\\_ros\\_pkgs/blob/melodic-devel/gazebo\\_ros/scripts/spawn\\_model](https://github.com/ros-simulation/gazebo_ros_pkgs/blob/melodic-devel/gazebo_ros/scripts/spawn_model)\r\n\r\n**Question**\r\n\r\nCan we change how we spawn the model or do we have to make another branch of Gazebo?\r\n\r\nAlso, should we even keep this argument, or should we just manually add it to `extra_gazebo_args`?", "title": "Add enable_ros_network argument", "destination": {"commit": {"hash": "01261902805c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/01261902805c.json"}, "html": {"href": "#!/osrf/vrx/commits/01261902805c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "65b06d325b3c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/65b06d325b3c.json"}, "html": {"href": "#!/osrf/vrx/commits/65b06d325b3c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Add-Option-To-Hide-Gazebo-Topics"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-06T19:13:25.729336+00:00"}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"update": {"description": "Note: This PR does not necessarily need to be merged in, but should be discussed.\r\n\r\n**Description**\r\n\r\nThis PR is to discuss the `enable_ros_network` argument, which is described below.\r\n\r\nFor the purpose of competition, we need to limit the exposed ROS and Gazebo topics to the ones that competitors should be able to use. There are three types:\r\n\r\n1. Gazebo transport topics - being solved by Docker containers that have no Gazebo transport topic communication\r\n2. ROS VRX topics - these can be hidden by setting an environment variable \\(should already be set\\)\r\n3. ROS topics with gazebo namespace - \\(eg. /gazebo/model\\_states\\). This should be handled by `enable_ros_network` parameter for Gazebo. \r\n\r\n**Issue**\r\n\r\nThis should work, but the only issue is that we call `spawn_model` in launch files to spawn the WAM-V. However, this uses one of the topics hidden by `enable_ros_network:=false`. Source code: [https://github.com/ros-simulation/gazebo\\_ros\\_pkgs/blob/melodic-devel/gazebo\\_ros/scripts/spawn\\_model](https://github.com/ros-simulation/gazebo_ros_pkgs/blob/melodic-devel/gazebo_ros/scripts/spawn_model)\r\n\r\n**Question**\r\n\r\nCan we change how we spawn the model or do we have to make another branch of Gazebo?\r\n\r\nAlso, should we even keep this argument, or should we just manually add it to `extra_gazebo_args`?", "title": "Add enable_ros_network argument", "destination": {"commit": {"hash": "01261902805c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/01261902805c.json"}, "html": {"href": "#!/osrf/vrx/commits/01261902805c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "07020e7b6c0d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/07020e7b6c0d.json"}, "html": {"href": "#!/osrf/vrx/commits/07020e7b6c0d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Add-Option-To-Hide-Gazebo-Topics"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-06T18:31:41.964992+00:00"}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"update": {"description": "Note: This PR does not necessarily need to be merged in, but should be discussed.\r\n\r\n**Description**\r\n\r\nThis PR is to discuss the `enable_ros_network` argument, which is described below.\r\n\r\nFor the purpose of competition, we need to limit the exposed ROS and Gazebo topics to the ones that competitors should be able to use. There are three types:\r\n\r\n1. Gazebo transport topics - being solved by Docker containers that have no Gazebo transport topic communication\r\n2. ROS VRX topics - these can be hidden by setting an environment variable \\(should already be set\\)\r\n3. ROS topics with gazebo namespace - \\(eg. /gazebo/model\\_states\\). This should be handled by `enable_ros_network` parameter for Gazebo. \r\n\r\n**Issue**\r\n\r\nThis should work, but the only issue is that we call `spawn_model` in launch files to spawn the WAM-V. However, this uses one of the topics hidden by `enable_ros_network:=false`. Source code: [https://github.com/ros-simulation/gazebo\\_ros\\_pkgs/blob/melodic-devel/gazebo\\_ros/scripts/spawn\\_model](https://github.com/ros-simulation/gazebo_ros_pkgs/blob/melodic-devel/gazebo_ros/scripts/spawn_model)\r\n\r\n**Question**\r\n\r\nCan we change how we spawn the model or do we have to make another branch of Gazebo?\r\n\r\nAlso, should we even keep this argument, or should we just manually add it to `extra_gazebo_args`?", "title": "Add enable_ros_network argument", "destination": {"commit": {"hash": "01261902805c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/01261902805c.json"}, "html": {"href": "#!/osrf/vrx/commits/01261902805c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "3d61967fe68b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/3d61967fe68b.json"}, "html": {"href": "#!/osrf/vrx/commits/3d61967fe68b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Add-Option-To-Hide-Gazebo-Topics"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-06T18:11:18.721356+00:00"}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"update": {"description": "Note: This PR does not necessarily need to be merged in, but should be discussed.\r\n\r\n**Description**\r\n\r\nThis PR is to discuss the `enable_ros_network` argument, which is described below.\r\n\r\nFor the purpose of competition, we need to limit the exposed ROS and Gazebo topics to the ones that competitors should be able to use. There are three types:\r\n\r\n1. Gazebo transport topics - being solved by Docker containers that have no Gazebo transport topic communication\r\n2. ROS VRX topics - these can be hidden by setting an environment variable \\(should already be set\\)\r\n3. ROS topics with gazebo namespace - \\(eg. /gazebo/model\\_states\\). This should be handled by `enable_ros_network` parameter for Gazebo. \r\n\r\n**Issue**\r\n\r\nThis should work, but the only issue is that we call `spawn_model` in launch files to spawn the WAM-V. However, this uses one of the topics hidden by `enable_ros_network:=false`. Source code: [https://github.com/ros-simulation/gazebo\\_ros\\_pkgs/blob/melodic-devel/gazebo\\_ros/scripts/spawn\\_model](https://github.com/ros-simulation/gazebo_ros_pkgs/blob/melodic-devel/gazebo_ros/scripts/spawn_model)\r\n\r\n**Question**\r\n\r\nCan we change how we spawn the model or do we have to make another branch of Gazebo?\r\n\r\nAlso, should we even keep this argument, or should we just manually add it to `extra_gazebo_args`?", "title": "Add enable_ros_network argument", "destination": {"commit": {"hash": "01261902805c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/01261902805c.json"}, "html": {"href": "#!/osrf/vrx/commits/01261902805c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "c074983f12de", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/c074983f12de.json"}, "html": {"href": "#!/osrf/vrx/commits/c074983f12de"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Add-Option-To-Hide-Gazebo-Topics"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-06T18:09:53.749454+00:00"}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"update": {"description": "Note: This PR does not necessarily need to be merged in, but should be discussed.\r\n\r\n**Description**\r\n\r\nThis PR is to discuss the `enable_ros_network` argument, which is described below.\r\n\r\nFor the purpose of competition, we need to limit the exposed ROS and Gazebo topics to the ones that competitors should be able to use. There are three types:\r\n\r\n1. Gazebo transport topics - being solved by Docker containers that have no Gazebo transport topic communication\r\n2. ROS VRX topics - these can be hidden by setting an environment variable \\(should already be set\\)\r\n3. ROS topics with gazebo namespace - \\(eg. /gazebo/model\\_states\\). This should be handled by `enable_ros_network` parameter for Gazebo. \r\n\r\n**Issue**\r\n\r\nThis should work, but the only issue is that we call `spawn_model` in launch files to spawn the WAM-V. However, this uses one of the topics hidden by `enable_ros_network:=false`. Source code: [https://github.com/ros-simulation/gazebo\\_ros\\_pkgs/blob/melodic-devel/gazebo\\_ros/scripts/spawn\\_model](https://github.com/ros-simulation/gazebo_ros_pkgs/blob/melodic-devel/gazebo_ros/scripts/spawn_model)\r\n\r\n**Question**\r\n\r\nCan we change how we spawn the model or do we have to make another branch of Gazebo?\r\n\r\nAlso, should we even keep this argument, or should we just manually add it to `extra_gazebo_args`?", "title": "Add enable_ros_network argument", "destination": {"commit": {"hash": "01261902805c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/01261902805c.json"}, "html": {"href": "#!/osrf/vrx/commits/01261902805c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "ccba6da4b6ec", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/ccba6da4b6ec.json"}, "html": {"href": "#!/osrf/vrx/commits/ccba6da4b6ec"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Add-Option-To-Hide-Gazebo-Topics"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-06T18:02:13.277995+00:00"}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112125847.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112125847"}}, "parent": {"id": 112123175, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112123175.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112123175"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "Great I found a working solution. I will add this to the PR and ask for your opinion.", "markup": "markdown", "html": "<p>Great I found a working solution. I will add this to the PR and ask for your opinion.</p>", "type": "rendered"}, "created_on": "2019-08-06T18:01:26.832257+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-06T18:01:26.841246+00:00", "type": "pullrequest_comment", "id": 112125847}, "pull_request": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}}], "next": "data/repositories/osrf/vrx/pullrequests/149/activity_ctx=KpC99hgtb.json"}