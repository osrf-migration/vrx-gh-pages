{"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/111965767.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-111965767"}}, "parent": {"id": 111957437, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/111957437.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-111957437"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "@{557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5} and I were discussing about this. All `package://` lines are converted into `model://` while parsing it by sdformat. That means, all is relative to the model directories specified by `GAZEBO_MODEL_PATH`. I don\u2019t think we have a clean solution here to avoid the errors. One \u201cworkaround\u201d could be to do something like this:\n\n```\nwamv_description\n|-- CHANGELOG.rst\n|-- CMakeLists.txt\n|-- mesh\n|   |-- WAM-V-Base.dae\n|   |-- WamV.png\n|   |-- engine.dae\n|   `-- propeller.dae\n|-- package.xml\n|-- urdf\n|   |-- battery.xacro\n|   |-- cpu_cases.xacro\n|   |-- thrusters\n|   |   `-- engine.xacro\n|   `-- wamv_base.urdf.xacro\n`-- wamv_description\n    |-- mesh -> ../mesh/\n    `-- model.config\n```\n\nand set the `GAZEBO_MODEL_PATH` to the top level `wamv_description` directory. Essentially, a new subdirectory with the Gazebo model structure including a symbolic link to the `mesh` directory for avoiding extra copies of the meshes. I don't think we need the `model.sdf` file, just `model.config` is fine to avoid the errors.", "markup": "markdown", "html": "<p><span class=\"ap-mention\" data-atlassian-id=\"557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5\">@Ian Chen</span> and I were discussing about this. All <code>package://</code> lines are converted into <code>model://</code> while parsing it by sdformat. That means, all is relative to the model directories specified by <code>GAZEBO_MODEL_PATH</code>. I don\u2019t think we have a clean solution here to avoid the errors. One \u201cworkaround\u201d could be to do something like this:</p>\n<div class=\"codehilite\"><pre><span></span>wamv_description\n|-- CHANGELOG.rst\n|-- CMakeLists.txt\n|-- mesh\n|   |-- WAM-V-Base.dae\n|   |-- WamV.png\n|   |-- engine.dae\n|   `-- propeller.dae\n|-- package.xml\n|-- urdf\n|   |-- battery.xacro\n|   |-- cpu_cases.xacro\n|   |-- thrusters\n|   |   `-- engine.xacro\n|   `-- wamv_base.urdf.xacro\n`-- wamv_description\n    |-- mesh -&gt; ../mesh/\n    `-- model.config\n</pre></div>\n\n\n<p>and set the <code>GAZEBO_MODEL_PATH</code> to the top level <code>wamv_description</code> directory. Essentially, a new subdirectory with the Gazebo model structure including a symbolic link to the <code>mesh</code> directory for avoiding extra copies of the meshes. I don't think we need the <code>model.sdf</code> file, just <code>model.config</code> is fine to avoid the errors.</p>", "type": "rendered"}, "created_on": "2019-08-05T20:53:28.127971+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-08-05T20:55:18.979625+00:00", "type": "pullrequest_comment", "id": 111965767}