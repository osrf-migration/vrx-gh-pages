{"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/111957437.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-111957437"}}, "parent": {"id": 111940402, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/111940402.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-111940402"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "At a high-level, the model being spawned is the wamv \\(boat\\), which described by a URDF file created before runtime. \\(eg. $HOME/my\\_urdf.urdf\\).\n\nThe issue is that this urdf includes `.dae` files that it cannot find, unless I set `GAZEBO_MODEL_PATH`. These both include models such as `[model://vrx_gazebo/models/3d_lidar/mesh/3d_lidar.dae]`, but also `.dae` files that are not currently models such as `[model://wamv_description/mesh/engine.dae]`.\n\nFrom what you said, I believe setting `GAZEBO_MODEL_PATH` to /home/tylerlum/vrx\\_ws/src/vrx/vrx\\_gazebo/models makes sense\n\n```\nvrx_gazebo/models\n\u251c\u2500\u2500 3d_lidar\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 mesh\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 3d_lidar.dae\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 3d_lidar.png\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 model.config\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 model.sdf\n\u251c\u2500\u2500 antenna\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 meshes\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 antenna.dae\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 antenna.png\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 model.config\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 model.sdf\n```\n\nbut setting it to /home/tylerlum/vrx\\_ws/src/vrx/wamv\\_description or /home/tylerlum/vrx\\_ws/src/vrx/wamv\\_description/mesh doesn\u2019t\n\n```\nwamv_description\n\u251c\u2500\u2500 CHANGELOG.rst\n\u251c\u2500\u2500 CMakeLists.txt\n\u251c\u2500\u2500 mesh\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 engine.dae\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 propeller.dae\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 WAM-V-Base.dae\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 WamV.png\n\u251c\u2500\u2500 package.xml\n\u2514\u2500\u2500 urdf\n    \u251c\u2500\u2500 battery.xacro\n    \u251c\u2500\u2500 cpu_cases.xacro\n    \u251c\u2500\u2500 thrusters\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 engine.xacro\n    \u2514\u2500\u2500 wamv_base.urdf.xacro\n```\n\nIs there a nice solution to this? Or would we have to restructure these wamv\\_description/mesh/<name>.dae files to wamv\\_description/models/<name>/mesh/<name>.dae? Like\n\n```\nwamv_description/models\n\u251c\u2500\u2500 engine\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 mesh\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 engine.dae\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 engine.png\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 model.config\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 model.sdf\n\u251c\u2500\u2500 propeller\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 meshes\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 propeller.dae\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 propeller.png\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 model.config\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 model.sdf\n```", "markup": "markdown", "html": "<p>At a high-level, the model being spawned is the wamv (boat), which described by a URDF file created before runtime. (eg. $HOME/my_urdf.urdf).</p>\n<p>The issue is that this urdf includes <code>.dae</code> files that it cannot find, unless I set <code>GAZEBO_MODEL_PATH</code>. These both include models such as <code>[model://vrx_gazebo/models/3d_lidar/mesh/3d_lidar.dae]</code>, but also <code>.dae</code> files that are not currently models such as <code>[model://wamv_description/mesh/engine.dae]</code>.</p>\n<p>From what you said, I believe setting <code>GAZEBO_MODEL_PATH</code> to /home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/models makes sense</p>\n<div class=\"codehilite\"><pre><span></span>vrx_gazebo/models\n\u251c\u2500\u2500 3d_lidar\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 mesh\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 3d_lidar.dae\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 3d_lidar.png\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 model.config\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 model.sdf\n\u251c\u2500\u2500 antenna\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 meshes\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 antenna.dae\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 antenna.png\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 model.config\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 model.sdf\n</pre></div>\n\n\n<p>but setting it to /home/tylerlum/vrx_ws/src/vrx/wamv_description or /home/tylerlum/vrx_ws/src/vrx/wamv_description/mesh doesn\u2019t</p>\n<div class=\"codehilite\"><pre><span></span>wamv_description\n\u251c\u2500\u2500 CHANGELOG.rst\n\u251c\u2500\u2500 CMakeLists.txt\n\u251c\u2500\u2500 mesh\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 engine.dae\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 propeller.dae\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 WAM-V-Base.dae\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 WamV.png\n\u251c\u2500\u2500 package.xml\n\u2514\u2500\u2500 urdf\n    \u251c\u2500\u2500 battery.xacro\n    \u251c\u2500\u2500 cpu_cases.xacro\n    \u251c\u2500\u2500 thrusters\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 engine.xacro\n    \u2514\u2500\u2500 wamv_base.urdf.xacro\n</pre></div>\n\n\n<p>Is there a nice solution to this? Or would we have to restructure these wamv_description/mesh/&lt;name&gt;.dae files to wamv_description/models/&lt;name&gt;/mesh/&lt;name&gt;.dae? Like</p>\n<div class=\"codehilite\"><pre><span></span>wamv_description/models\n\u251c\u2500\u2500 engine\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 mesh\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 engine.dae\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 engine.png\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 model.config\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 model.sdf\n\u251c\u2500\u2500 propeller\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 meshes\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 propeller.dae\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 propeller.png\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 model.config\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 model.sdf\n</pre></div>", "type": "rendered"}, "created_on": "2019-08-05T19:28:14.419610+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-05T19:30:35.269365+00:00", "type": "pullrequest_comment", "id": 111957437}