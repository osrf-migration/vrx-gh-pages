{"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments/112493444.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149/_/diff#comment-112493444"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 149, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}}, "title": "Add enable_ros_network argument"}, "content": {"raw": "@{557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd} This PR should be ready for review and merging unless you see any issues with it. \n\n**To Test:**\n\n_Regression test 1_\n\n`source ~/vrx_ws/devel/setup.bash` `roslaunch vrx_gazebo sandisland.launch verbose:=true` should work normally\n\n`rostopic echo /vrx/debug/wind/direction`, `rostopic echo /gazebo/model_states` these should both be published to\n\n_Regression test 2_\n\n`source ~/vrx_ws/devel/setup.bash` `roslaunch vrx_gazebo dock.launch verbose:=true` should work normally\n\n`rostopic echo /vrx/debug/wind/direction`, `rostopic echo /gazebo/model_states` these should both be published to\n\n_New Test 1_\n\n`source ~/vrx_ws/devel/setup.bash`  `roslaunch vrx_gazebo generate_wamv.launch wamv_target:=$HOME/my_urdf.urdf`  `roslaunch vrx_gazebo sandisland.launch verbose:=true non_competition_mode:=false urdf:=$HOME/my_urdf.urdf` should look the same as usual, maybe slight delay in model spawn\n\n`rostopic echo /vrx/debug/wind/direction`, `rostopic echo /gazebo/model_states` these should both NOT be published to\n\n_New Test 2_\n\n`source ~/vrx_ws/devel/setup.bash` `roslaunch vrx_gazebo sandisland.launch verbose:=true non_competition_mode:=false` should look the same as usual, maybe slight delay in model spawn\n\n`rostopic echo /vrx/debug/wind/direction`, `rostopic echo /gazebo/model_states` these should both NOT be published to\n\n**Key Changes:**\n\n1. Use `non_competition_mode` argument instead of `competition_mode` because would have to negate it for `enable_ros_network` and `VRX_DEBUG`. Using $\\(eval not arg\\('competition\\_mode'\\)\\) did not work for VRX\\_DEBUG, maybe this part compiles too late and is not recognized. Please let me know if we should change the name to `publish_non_competition_topics`, or even change it back to `competition_mode` \\(and probably use if/unless in tags, but may be messier code\\)\n2. Change all instances of `package://vrx_gazebo/models/<model>...`  to `model://<model>...`, ensure this doesn\u2019t break anything\n3. Added comments for clarity\n4. Tried to move `rosrun xacro...` before `wait_until_gzserver_is_up`, but it did not work. Not a big deal and works fine. \n\nLet me know if you have any concerns or issues.", "markup": "markdown", "html": "<p><span class=\"ap-mention\" data-atlassian-id=\"557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd\">@Carlos Ag\u00fcero</span> This PR should be ready for review and merging unless you see any issues with it. </p>\n<p><strong>To Test:</strong></p>\n<p><em>Regression test 1</em></p>\n<p><code>source ~/vrx_ws/devel/setup.bash</code> <code>roslaunch vrx_gazebo sandisland.launch verbose:=true</code> should work normally</p>\n<p><code>rostopic echo /vrx/debug/wind/direction</code>, <code>rostopic echo /gazebo/model_states</code> these should both be published to</p>\n<p><em>Regression test 2</em></p>\n<p><code>source ~/vrx_ws/devel/setup.bash</code> <code>roslaunch vrx_gazebo dock.launch verbose:=true</code> should work normally</p>\n<p><code>rostopic echo /vrx/debug/wind/direction</code>, <code>rostopic echo /gazebo/model_states</code> these should both be published to</p>\n<p><em>New Test 1</em></p>\n<p><code>source ~/vrx_ws/devel/setup.bash</code>  <code>roslaunch vrx_gazebo generate_wamv.launch wamv_target:=$HOME/my_urdf.urdf</code>  <code>roslaunch vrx_gazebo sandisland.launch verbose:=true non_competition_mode:=false urdf:=$HOME/my_urdf.urdf</code> should look the same as usual, maybe slight delay in model spawn</p>\n<p><code>rostopic echo /vrx/debug/wind/direction</code>, <code>rostopic echo /gazebo/model_states</code> these should both NOT be published to</p>\n<p><em>New Test 2</em></p>\n<p><code>source ~/vrx_ws/devel/setup.bash</code> <code>roslaunch vrx_gazebo sandisland.launch verbose:=true non_competition_mode:=false</code> should look the same as usual, maybe slight delay in model spawn</p>\n<p><code>rostopic echo /vrx/debug/wind/direction</code>, <code>rostopic echo /gazebo/model_states</code> these should both NOT be published to</p>\n<p><strong>Key Changes:</strong></p>\n<ol>\n<li>Use <code>non_competition_mode</code> argument instead of <code>competition_mode</code> because would have to negate it for <code>enable_ros_network</code> and <code>VRX_DEBUG</code>. Using $(eval not arg('competition_mode')) did not work for VRX_DEBUG, maybe this part compiles too late and is not recognized. Please let me know if we should change the name to <code>publish_non_competition_topics</code>, or even change it back to <code>competition_mode</code> (and probably use if/unless in tags, but may be messier code)</li>\n<li>Change all instances of <code>package://vrx_gazebo/models/&lt;model&gt;...</code>  to <code>model://&lt;model&gt;...</code>, ensure this doesn\u2019t break anything</li>\n<li>Added comments for clarity</li>\n<li>Tried to move <code>rosrun xacro...</code> before <code>wait_until_gzserver_is_up</code>, but it did not work. Not a big deal and works fine. </li>\n</ol>\n<p>Let me know if you have any concerns or issues.</p>", "type": "rendered"}, "created_on": "2019-08-08T19:56:11.452170+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-08T19:56:11.470642+00:00", "type": "pullrequest_comment", "id": 112493444}