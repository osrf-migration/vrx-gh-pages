{"rendered": {"description": {"raw": "**Commits**\r\n\r\n* Add mono\\_camera mesh and .sdf .config files with correct collision and inertia\r\n* Add mono\\_camera mesh to urdf file and onto WAM-V\r\n* Integrate sensor post to camera urdf, with height parameter\r\n* Add adjustment link and joint to make the camera frame match base frame\r\n* Simplify all transformations: base->post->arm->camera\r\n\r\nThis PR is very similar to the **Issue~~#86~~ add 3d lidar mesh** PR. It uses the same sensor post \\+ sensor post arm setup, but instead has a camera mesh.\r\n\r\n**Images**\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/3854322670-Default_Camera_Poses.png)\r\n  \r\n_Figure 1: Default camera positions_\r\n\r\n---\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/1684716592-Close_up_Camera.png)\r\n  \r\n_Figure 2: Close up view of cameras_\r\n\r\n---\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/1148934140-Cameras_with_Roll.png)\r\n  \r\n_Figure 3: Cameras with 15 degrees of roll. y=\"-0.1\" x=\"0.75\" R=\"$\\{radians\\(15\\)\\}_\r\n\r\n---\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/964520771-Camera_Inertia.png)\r\n  \r\n_Figure 4: Camera inertia modeled as box_\r\n\r\n---\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/1221590226-Camera_Collision.png)\r\n\u200c\r\n\r\n  \r\n_Figure 5: Camera collision modeled as cylinder and box_\r\n\r\n---\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/3940807887-Camera_with_Yaw.png)\r\n  \r\n_Figure 6: 45 degree yaw camera and post. y=\"-0.45\" P=\"0\" Y=\"$\\{radians\\(-45\\)\\}\" post\\_Y=\"$\\{radians\\(-45\\)\\}\"_\r\n\r\n---\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/3679749829-Pointing_Backwards_Camera.png)\r\n  \r\n\r\n_Figure 7: Camera pointing backwards. Chosen camera yaw is independent of post\\_Y. y=\"-0.45\" P=\"0\" Y=\"$\\{radians\\(-180\\)\\}\" post\\_Y=\"$\\{radians\\(-45\\)\\}\"_", "markup": "markdown", "html": "<p><strong>Commits</strong></p>\n<ul>\n<li>Add mono_camera mesh and .sdf .config files with correct collision and inertia</li>\n<li>Add mono_camera mesh to urdf file and onto WAM-V</li>\n<li>Integrate sensor post to camera urdf, with height parameter</li>\n<li>Add adjustment link and joint to make the camera frame match base frame</li>\n<li>Simplify all transformations: base-&gt;post-&gt;arm-&gt;camera</li>\n</ul>\n<p>This PR is very similar to the <strong>Issue<del><a href=\"#!/osrf/vrx/issues/86/add-a-3d-lidar-mesh\" rel=\"nofollow\" title=\"Add a 3D lidar mesh\" class=\"ap-connect-link\"><s>#86</s></a></del> add 3d lidar mesh</strong> PR. It uses the same sensor post + sensor post arm setup, but instead has a camera mesh.</p>\n<p><strong>Images</strong></p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3854322670-Default_Camera_Poses.png\" /></p>\n<p><em>Figure 1: Default camera positions</em></p>\n<hr />\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1684716592-Close_up_Camera.png\" /></p>\n<p><em>Figure 2: Close up view of cameras</em></p>\n<hr />\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1148934140-Cameras_with_Roll.png\" /></p>\n<p><em>Figure 3: Cameras with 15 degrees of roll. y=\"-0.1\" x=\"0.75\" R=\"${radians(15)}</em></p>\n<hr />\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/964520771-Camera_Inertia.png\" /></p>\n<p><em>Figure 4: Camera inertia modeled as box</em></p>\n<hr />\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1221590226-Camera_Collision.png\" />\n\u200c</p>\n<p><em>Figure 5: Camera collision modeled as cylinder and box</em></p>\n<hr />\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3940807887-Camera_with_Yaw.png\" /></p>\n<p><em>Figure 6: 45 degree yaw camera and post. y=\"-0.45\" P=\"0\" Y=\"${radians(-45)}\" post_Y=\"${radians(-45)}\"</em></p>\n<hr />\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3679749829-Pointing_Backwards_Camera.png\" /></p>\n<p><em>Figure 7: Camera pointing backwards. Chosen camera yaw is independent of post_Y. y=\"-0.45\" P=\"0\" Y=\"${radians(-180)}\" post_Y=\"${radians(-45)}\"</em></p>", "type": "rendered"}, "title": {"raw": "Issue#85 add monocular camera mesh", "markup": "markdown", "html": "<p>Issue<a href=\"#!/osrf/vrx/issues/85/add-a-monocular-camera-mesh\" rel=\"nofollow\" title=\"Add a monocular camera mesh\" class=\"ap-connect-link\"><s>#85</s></a> add monocular camera mesh</p>", "type": "rendered"}}, "type": "pullrequest", "description": "**Commits**\r\n\r\n* Add mono\\_camera mesh and .sdf .config files with correct collision and inertia\r\n* Add mono\\_camera mesh to urdf file and onto WAM-V\r\n* Integrate sensor post to camera urdf, with height parameter\r\n* Add adjustment link and joint to make the camera frame match base frame\r\n* Simplify all transformations: base->post->arm->camera\r\n\r\nThis PR is very similar to the **Issue~~#86~~ add 3d lidar mesh** PR. It uses the same sensor post \\+ sensor post arm setup, but instead has a camera mesh.\r\n\r\n**Images**\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/3854322670-Default_Camera_Poses.png)\r\n  \r\n_Figure 1: Default camera positions_\r\n\r\n---\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/1684716592-Close_up_Camera.png)\r\n  \r\n_Figure 2: Close up view of cameras_\r\n\r\n---\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/1148934140-Cameras_with_Roll.png)\r\n  \r\n_Figure 3: Cameras with 15 degrees of roll. y=\"-0.1\" x=\"0.75\" R=\"$\\{radians\\(15\\)\\}_\r\n\r\n---\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/964520771-Camera_Inertia.png)\r\n  \r\n_Figure 4: Camera inertia modeled as box_\r\n\r\n---\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/1221590226-Camera_Collision.png)\r\n\u200c\r\n\r\n  \r\n_Figure 5: Camera collision modeled as cylinder and box_\r\n\r\n---\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/3940807887-Camera_with_Yaw.png)\r\n  \r\n_Figure 6: 45 degree yaw camera and post. y=\"-0.45\" P=\"0\" Y=\"$\\{radians\\(-45\\)\\}\" post\\_Y=\"$\\{radians\\(-45\\)\\}\"_\r\n\r\n---\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/3679749829-Pointing_Backwards_Camera.png)\r\n  \r\n\r\n_Figure 7: Camera pointing backwards. Chosen camera yaw is independent of post\\_Y. y=\"-0.45\" P=\"0\" Y=\"$\\{radians\\(-180\\)\\}\" post\\_Y=\"$\\{radians\\(-45\\)\\}\"_", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/pullrequests/101/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/diffstat/osrf/vrx:c225543f90ea%0D5f44b248954d?from_pullrequest_id=101"}, "commits": {"href": "data/repositories/osrf/vrx/pullrequests/101/commits.json"}, "self": {"href": "data/repositories/osrf/vrx/pullrequests/101.json"}, "comments": {"href": "data/repositories/osrf/vrx/pullrequests/101/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/pullrequests/101/merge"}, "html": {"href": "#!/osrf/vrx/pull-requests/101"}, "activity": {"href": "data/repositories/osrf/vrx/pullrequests/101/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/diff/osrf/vrx:c225543f90ea%0D5f44b248954d?from_pullrequest_id=101"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/pullrequests/101/approve"}, "statuses": {"href": "data/repositories/osrf/vrx/pullrequests/101/statuses_page=1.json"}}, "title": "Issue#85 add monocular camera mesh", "close_source_branch": true, "reviewers": [], "id": 101, "destination": {"commit": {"hash": "5f44b248954d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/5f44b248954d.json"}, "html": {"href": "#!/osrf/vrx/commits/5f44b248954d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "created_on": "2019-05-30T19:29:27.178444+00:00", "summary": {"raw": "**Commits**\r\n\r\n* Add mono\\_camera mesh and .sdf .config files with correct collision and inertia\r\n* Add mono\\_camera mesh to urdf file and onto WAM-V\r\n* Integrate sensor post to camera urdf, with height parameter\r\n* Add adjustment link and joint to make the camera frame match base frame\r\n* Simplify all transformations: base->post->arm->camera\r\n\r\nThis PR is very similar to the **Issue~~#86~~ add 3d lidar mesh** PR. It uses the same sensor post \\+ sensor post arm setup, but instead has a camera mesh.\r\n\r\n**Images**\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/3854322670-Default_Camera_Poses.png)\r\n  \r\n_Figure 1: Default camera positions_\r\n\r\n---\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/1684716592-Close_up_Camera.png)\r\n  \r\n_Figure 2: Close up view of cameras_\r\n\r\n---\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/1148934140-Cameras_with_Roll.png)\r\n  \r\n_Figure 3: Cameras with 15 degrees of roll. y=\"-0.1\" x=\"0.75\" R=\"$\\{radians\\(15\\)\\}_\r\n\r\n---\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/964520771-Camera_Inertia.png)\r\n  \r\n_Figure 4: Camera inertia modeled as box_\r\n\r\n---\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/1221590226-Camera_Collision.png)\r\n\u200c\r\n\r\n  \r\n_Figure 5: Camera collision modeled as cylinder and box_\r\n\r\n---\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/3940807887-Camera_with_Yaw.png)\r\n  \r\n_Figure 6: 45 degree yaw camera and post. y=\"-0.45\" P=\"0\" Y=\"$\\{radians\\(-45\\)\\}\" post\\_Y=\"$\\{radians\\(-45\\)\\}\"_\r\n\r\n---\r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/3679749829-Pointing_Backwards_Camera.png)\r\n  \r\n\r\n_Figure 7: Camera pointing backwards. Chosen camera yaw is independent of post\\_Y. y=\"-0.45\" P=\"0\" Y=\"$\\{radians\\(-180\\)\\}\" post\\_Y=\"$\\{radians\\(-45\\)\\}\"_", "markup": "markdown", "html": "<p><strong>Commits</strong></p>\n<ul>\n<li>Add mono_camera mesh and .sdf .config files with correct collision and inertia</li>\n<li>Add mono_camera mesh to urdf file and onto WAM-V</li>\n<li>Integrate sensor post to camera urdf, with height parameter</li>\n<li>Add adjustment link and joint to make the camera frame match base frame</li>\n<li>Simplify all transformations: base-&gt;post-&gt;arm-&gt;camera</li>\n</ul>\n<p>This PR is very similar to the <strong>Issue<del><a href=\"#!/osrf/vrx/issues/86/add-a-3d-lidar-mesh\" rel=\"nofollow\" title=\"Add a 3D lidar mesh\" class=\"ap-connect-link\"><s>#86</s></a></del> add 3d lidar mesh</strong> PR. It uses the same sensor post + sensor post arm setup, but instead has a camera mesh.</p>\n<p><strong>Images</strong></p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3854322670-Default_Camera_Poses.png\" /></p>\n<p><em>Figure 1: Default camera positions</em></p>\n<hr />\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1684716592-Close_up_Camera.png\" /></p>\n<p><em>Figure 2: Close up view of cameras</em></p>\n<hr />\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1148934140-Cameras_with_Roll.png\" /></p>\n<p><em>Figure 3: Cameras with 15 degrees of roll. y=\"-0.1\" x=\"0.75\" R=\"${radians(15)}</em></p>\n<hr />\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/964520771-Camera_Inertia.png\" /></p>\n<p><em>Figure 4: Camera inertia modeled as box</em></p>\n<hr />\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1221590226-Camera_Collision.png\" />\n\u200c</p>\n<p><em>Figure 5: Camera collision modeled as cylinder and box</em></p>\n<hr />\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3940807887-Camera_with_Yaw.png\" /></p>\n<p><em>Figure 6: 45 degree yaw camera and post. y=\"-0.45\" P=\"0\" Y=\"${radians(-45)}\" post_Y=\"${radians(-45)}\"</em></p>\n<hr />\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3679749829-Pointing_Backwards_Camera.png\" /></p>\n<p><em>Figure 7: Camera pointing backwards. Chosen camera yaw is independent of post_Y. y=\"-0.45\" P=\"0\" Y=\"${radians(-180)}\" post_Y=\"${radians(-45)}\"</em></p>", "type": "rendered"}, "source": {"commit": {"hash": "e855a1e98717", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/e855a1e98717.json"}, "html": {"href": "#!/osrf/vrx/commits/e855a1e98717"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#85-add-monocular-camera-mesh"}}, "comment_count": 19, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2019-06-06T00:23:43.525338+00:00", "type": "participant", "approved": true, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "PARTICIPANT", "participated_on": "2019-06-06T00:20:02.706033+00:00", "type": "participant", "approved": false, "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}}], "reason": "", "updated_on": "2019-06-06T00:25:34.670641+00:00", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "merge_commit": {"hash": "c225543f90ea", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/c225543f90ea.json"}, "html": {"href": "#!/osrf/vrx/commits/c225543f90ea"}}}, "closed_by": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}