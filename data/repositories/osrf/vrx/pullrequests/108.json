{"rendered": {"description": {"raw": "**Description of Issue**\r\n\r\nWe\u2019d like to extend both the [usv\\_gazebo\\_thrust\\_plugin](#!/osrf/vrx/src/default/usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc) Gazebo model plugin and the [engine.xacro](#!/osrf/vrx/src/default/wamv_description/urdf/engine.xacro) model so that users can change the thrust angle via a ROS API.\r\n\r\n* The thrust plugin would subscribe to a ROS topic, e.g., \u201cleft\\_ thrust\\_angle\u201d, that would set the angular displacement of the thruster.\r\n\r\n    * The angle, in radians, would be relative to the nominal thruster attitude.\r\n    \r\n* The configuration should allow for angle limits \\(e.g., \\+/- pi/2\\) to be set.\r\n* A new rotation joint should be included in the engine model to facilitate the rotation\r\n\r\n    * The plugin would also set the joint rotation so that the visual model reflects the vectored thrust.\r\n    \r\n\r\n**Design Questions**\r\n\r\n1. How should max angle be set? Currently done by changing `<maxAngle>NUMBER</maxAngle>` in `wamv_gazebo_thruster_config.xacro`\r\n2. Thrust commands currently have a `lastCmdTime` to track the time of last command signal and a `cmdTimeout` to describe how long each command should last for before not putting a force anymore. Should there be something similar for angle? eg. if publish `left_thrust_angle=pi/3` and then stop publishing angle, should the angle remain pi/3 until set otherwise, or should it \u201creset\u201d back to `left_thrust_angle=0` if it does not receive angle messages? Currently there is no \u201creset\u201d, it remains at the last published angle\r\n3. What to do if |published angle| > maxAngle? eg. if publish `left_thrust_angle=5*pi/4`, but we have `<maxAngle>${pi/2}</maxAngle>`, what should it do? Output error/warning message and ignore message \\(keep same angle as it previously was\\)? Or clip it \\(if it is >pi/2, then clip to pi/2. If it is <-pi/2, then clip to -pi/2\\).\r\n4. If published angle = 7\\*pi/4 and maxAngle=pi/2, should this be interpreted as -pi/4 or clipped to pi/2 or output error message and ignore? Currently doing clipping.", "markup": "markdown", "html": "<p><strong>Description of Issue</strong></p>\n<p>We\u2019d like to extend both the <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/src/default/usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc\" rel=\"nofollow\">usv_gazebo_thrust_plugin</a> Gazebo model plugin and the <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/src/default/wamv_description/urdf/engine.xacro\" rel=\"nofollow\">engine.xacro</a> model so that users can change the thrust angle via a ROS API.</p>\n<ul>\n<li>\n<p>The thrust plugin would subscribe to a ROS topic, e.g., \u201cleft_ thrust_angle\u201d, that would set the angular displacement of the thruster.</p>\n<ul>\n<li>The angle, in radians, would be relative to the nominal thruster attitude.</li>\n</ul>\n</li>\n<li>\n<p>The configuration should allow for angle limits (e.g., +/- pi/2) to be set.</p>\n</li>\n<li>\n<p>A new rotation joint should be included in the engine model to facilitate the rotation</p>\n<ul>\n<li>The plugin would also set the joint rotation so that the visual model reflects the vectored thrust.</li>\n</ul>\n</li>\n</ul>\n<p><strong>Design Questions</strong></p>\n<ol>\n<li>How should max angle be set? Currently done by changing <code>&lt;maxAngle&gt;NUMBER&lt;/maxAngle&gt;</code> in <code>wamv_gazebo_thruster_config.xacro</code></li>\n<li>Thrust commands currently have a <code>lastCmdTime</code> to track the time of last command signal and a <code>cmdTimeout</code> to describe how long each command should last for before not putting a force anymore. Should there be something similar for angle? eg. if publish <code>left_thrust_angle=pi/3</code> and then stop publishing angle, should the angle remain pi/3 until set otherwise, or should it \u201creset\u201d back to <code>left_thrust_angle=0</code> if it does not receive angle messages? Currently there is no \u201creset\u201d, it remains at the last published angle</li>\n<li>What to do if |published angle| &gt; maxAngle? eg. if publish <code>left_thrust_angle=5*pi/4</code>, but we have <code>&lt;maxAngle&gt;${pi/2}&lt;/maxAngle&gt;</code>, what should it do? Output error/warning message and ignore message (keep same angle as it previously was)? Or clip it (if it is &gt;pi/2, then clip to pi/2. If it is &lt;-pi/2, then clip to -pi/2).</li>\n<li>If published angle = 7*pi/4 and maxAngle=pi/2, should this be interpreted as -pi/4 or clipped to pi/2 or output error message and ignore? Currently doing clipping.</li>\n</ol>", "type": "rendered"}, "title": {"raw": "Issue#96 Add Thrust Angle and Rotation Joint", "markup": "markdown", "html": "<p>Issue<a href=\"#!/osrf/vrx/issues/96/propulsion-adding-vectored-thrust\" rel=\"nofollow\" title=\"Propulsion: Adding vectored thrust capability\" class=\"ap-connect-link\"><s>#96</s></a> Add Thrust Angle and Rotation Joint</p>", "type": "rendered"}}, "type": "pullrequest", "description": "**Description of Issue**\r\n\r\nWe\u2019d like to extend both the [usv\\_gazebo\\_thrust\\_plugin](#!/osrf/vrx/src/default/usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc) Gazebo model plugin and the [engine.xacro](#!/osrf/vrx/src/default/wamv_description/urdf/engine.xacro) model so that users can change the thrust angle via a ROS API.\r\n\r\n* The thrust plugin would subscribe to a ROS topic, e.g., \u201cleft\\_ thrust\\_angle\u201d, that would set the angular displacement of the thruster.\r\n\r\n    * The angle, in radians, would be relative to the nominal thruster attitude.\r\n    \r\n* The configuration should allow for angle limits \\(e.g., \\+/- pi/2\\) to be set.\r\n* A new rotation joint should be included in the engine model to facilitate the rotation\r\n\r\n    * The plugin would also set the joint rotation so that the visual model reflects the vectored thrust.\r\n    \r\n\r\n**Design Questions**\r\n\r\n1. How should max angle be set? Currently done by changing `<maxAngle>NUMBER</maxAngle>` in `wamv_gazebo_thruster_config.xacro`\r\n2. Thrust commands currently have a `lastCmdTime` to track the time of last command signal and a `cmdTimeout` to describe how long each command should last for before not putting a force anymore. Should there be something similar for angle? eg. if publish `left_thrust_angle=pi/3` and then stop publishing angle, should the angle remain pi/3 until set otherwise, or should it \u201creset\u201d back to `left_thrust_angle=0` if it does not receive angle messages? Currently there is no \u201creset\u201d, it remains at the last published angle\r\n3. What to do if |published angle| > maxAngle? eg. if publish `left_thrust_angle=5*pi/4`, but we have `<maxAngle>${pi/2}</maxAngle>`, what should it do? Output error/warning message and ignore message \\(keep same angle as it previously was\\)? Or clip it \\(if it is >pi/2, then clip to pi/2. If it is <-pi/2, then clip to -pi/2\\).\r\n4. If published angle = 7\\*pi/4 and maxAngle=pi/2, should this be interpreted as -pi/4 or clipped to pi/2 or output error message and ignore? Currently doing clipping.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/pullrequests/108/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/diffstat/osrf/vrx:3e5db9279bc2%0D52119c274d58?from_pullrequest_id=108"}, "commits": {"href": "data/repositories/osrf/vrx/pullrequests/108/commits.json"}, "self": {"href": "data/repositories/osrf/vrx/pullrequests/108.json"}, "comments": {"href": "data/repositories/osrf/vrx/pullrequests/108/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/pullrequests/108/merge"}, "html": {"href": "#!/osrf/vrx/pull-requests/108"}, "activity": {"href": "data/repositories/osrf/vrx/pullrequests/108/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/diff/osrf/vrx:3e5db9279bc2%0D52119c274d58?from_pullrequest_id=108"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/pullrequests/108/approve"}, "statuses": {"href": "data/repositories/osrf/vrx/pullrequests/108/statuses_page=1.json"}}, "title": "Issue#96 Add Thrust Angle and Rotation Joint", "close_source_branch": true, "reviewers": [], "id": 108, "destination": {"commit": {"hash": "52119c274d58", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/52119c274d58.json"}, "html": {"href": "#!/osrf/vrx/commits/52119c274d58"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "created_on": "2019-06-09T17:37:33.781542+00:00", "summary": {"raw": "**Description of Issue**\r\n\r\nWe\u2019d like to extend both the [usv\\_gazebo\\_thrust\\_plugin](#!/osrf/vrx/src/default/usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc) Gazebo model plugin and the [engine.xacro](#!/osrf/vrx/src/default/wamv_description/urdf/engine.xacro) model so that users can change the thrust angle via a ROS API.\r\n\r\n* The thrust plugin would subscribe to a ROS topic, e.g., \u201cleft\\_ thrust\\_angle\u201d, that would set the angular displacement of the thruster.\r\n\r\n    * The angle, in radians, would be relative to the nominal thruster attitude.\r\n    \r\n* The configuration should allow for angle limits \\(e.g., \\+/- pi/2\\) to be set.\r\n* A new rotation joint should be included in the engine model to facilitate the rotation\r\n\r\n    * The plugin would also set the joint rotation so that the visual model reflects the vectored thrust.\r\n    \r\n\r\n**Design Questions**\r\n\r\n1. How should max angle be set? Currently done by changing `<maxAngle>NUMBER</maxAngle>` in `wamv_gazebo_thruster_config.xacro`\r\n2. Thrust commands currently have a `lastCmdTime` to track the time of last command signal and a `cmdTimeout` to describe how long each command should last for before not putting a force anymore. Should there be something similar for angle? eg. if publish `left_thrust_angle=pi/3` and then stop publishing angle, should the angle remain pi/3 until set otherwise, or should it \u201creset\u201d back to `left_thrust_angle=0` if it does not receive angle messages? Currently there is no \u201creset\u201d, it remains at the last published angle\r\n3. What to do if |published angle| > maxAngle? eg. if publish `left_thrust_angle=5*pi/4`, but we have `<maxAngle>${pi/2}</maxAngle>`, what should it do? Output error/warning message and ignore message \\(keep same angle as it previously was\\)? Or clip it \\(if it is >pi/2, then clip to pi/2. If it is <-pi/2, then clip to -pi/2\\).\r\n4. If published angle = 7\\*pi/4 and maxAngle=pi/2, should this be interpreted as -pi/4 or clipped to pi/2 or output error message and ignore? Currently doing clipping.", "markup": "markdown", "html": "<p><strong>Description of Issue</strong></p>\n<p>We\u2019d like to extend both the <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/src/default/usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc\" rel=\"nofollow\">usv_gazebo_thrust_plugin</a> Gazebo model plugin and the <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/src/default/wamv_description/urdf/engine.xacro\" rel=\"nofollow\">engine.xacro</a> model so that users can change the thrust angle via a ROS API.</p>\n<ul>\n<li>\n<p>The thrust plugin would subscribe to a ROS topic, e.g., \u201cleft_ thrust_angle\u201d, that would set the angular displacement of the thruster.</p>\n<ul>\n<li>The angle, in radians, would be relative to the nominal thruster attitude.</li>\n</ul>\n</li>\n<li>\n<p>The configuration should allow for angle limits (e.g., +/- pi/2) to be set.</p>\n</li>\n<li>\n<p>A new rotation joint should be included in the engine model to facilitate the rotation</p>\n<ul>\n<li>The plugin would also set the joint rotation so that the visual model reflects the vectored thrust.</li>\n</ul>\n</li>\n</ul>\n<p><strong>Design Questions</strong></p>\n<ol>\n<li>How should max angle be set? Currently done by changing <code>&lt;maxAngle&gt;NUMBER&lt;/maxAngle&gt;</code> in <code>wamv_gazebo_thruster_config.xacro</code></li>\n<li>Thrust commands currently have a <code>lastCmdTime</code> to track the time of last command signal and a <code>cmdTimeout</code> to describe how long each command should last for before not putting a force anymore. Should there be something similar for angle? eg. if publish <code>left_thrust_angle=pi/3</code> and then stop publishing angle, should the angle remain pi/3 until set otherwise, or should it \u201creset\u201d back to <code>left_thrust_angle=0</code> if it does not receive angle messages? Currently there is no \u201creset\u201d, it remains at the last published angle</li>\n<li>What to do if |published angle| &gt; maxAngle? eg. if publish <code>left_thrust_angle=5*pi/4</code>, but we have <code>&lt;maxAngle&gt;${pi/2}&lt;/maxAngle&gt;</code>, what should it do? Output error/warning message and ignore message (keep same angle as it previously was)? Or clip it (if it is &gt;pi/2, then clip to pi/2. If it is &lt;-pi/2, then clip to -pi/2).</li>\n<li>If published angle = 7*pi/4 and maxAngle=pi/2, should this be interpreted as -pi/4 or clipped to pi/2 or output error message and ignore? Currently doing clipping.</li>\n</ol>", "type": "rendered"}, "source": {"commit": {"hash": "4b7fe5358092", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/4b7fe5358092.json"}, "html": {"href": "#!/osrf/vrx/commits/4b7fe5358092"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#96-add-vector-thrust"}}, "comment_count": 49, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2019-06-12T21:36:28.721354+00:00", "type": "participant", "approved": false, "user": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}}, {"role": "PARTICIPANT", "participated_on": "2019-06-18T16:13:35.637832+00:00", "type": "participant", "approved": true, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "PARTICIPANT", "participated_on": "2019-06-18T01:42:11.588524+00:00", "type": "participant", "approved": false, "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}}], "reason": "", "updated_on": "2019-06-18T16:13:44.483636+00:00", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "merge_commit": {"hash": "3e5db9279bc2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/3e5db9279bc2.json"}, "html": {"href": "#!/osrf/vrx/commits/3e5db9279bc2"}}}, "closed_by": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}