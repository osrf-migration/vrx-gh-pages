{"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/139/comments/108853773.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/139/_/diff#comment-108853773"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 139, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/139.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/139"}}, "title": "Compliance refactor"}, "content": {"raw": "The code is coming along and seems very close to me.  I think we still need to clean up the associated wiki [#!/osrf/vrx/wiki/tutorials/Creating%20a%20custom%20WAM-V%20Thruster%20and%20Sensor%20Configuration%20For%20Competition](#!/osrf/vrx/wiki/tutorials/Creating%20a%20custom%20WAM-V%20Thruster%20and%20Sensor%20Configuration%20For%20Competition)\n\nMy recommendations would be\u2026\n\n* Split into a few examples of increasing complexity\n\n    * 1\\) Generating URDF from default yaml files\n    * 2\\) Generating URDF from standard configuration yaml files \\(standard thruster configs and standard sensor config examples\\)\n    * 3\\) Generate URDF from custom configurations.\n    \n* Reference the VRX Technical Description document as the specification for compliance\n* Illustrate what happens when\n\n    * Things run correctly and are compliant\n    * Things run correctly and are not compliant - explain that compliance is only an issue for VRX\n    \n* Have the examples we use be compliant.  The current example of three thrusters in the rear seems to suggest that this is a viable option.\n\n\u200c\n\nIn general I think this is functionality that the teams will rely upon heavily, so anything we can do to make the process clear to them will save us time in the long run.", "markup": "markdown", "html": "<p>The code is coming along and seems very close to me.  I think we still need to clean up the associated wiki <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/wiki/tutorials/Creating%20a%20custom%20WAM-V%20Thruster%20and%20Sensor%20Configuration%20For%20Competition\" rel=\"nofollow\">#!/osrf/vrx/wiki/tutorials/Creating%20a%20custom%20WAM-V%20Thruster%20and%20Sensor%20Configuration%20For%20Competition</a></p>\n<p>My recommendations would be\u2026</p>\n<ul>\n<li>\n<p>Split into a few examples of increasing complexity</p>\n<ul>\n<li>1) Generating URDF from default yaml files</li>\n<li>2) Generating URDF from standard configuration yaml files (standard thruster configs and standard sensor config examples)</li>\n<li>3) Generate URDF from custom configurations.</li>\n</ul>\n</li>\n<li>\n<p>Reference the VRX Technical Description document as the specification for compliance</p>\n</li>\n<li>\n<p>Illustrate what happens when</p>\n<ul>\n<li>Things run correctly and are compliant</li>\n<li>Things run correctly and are not compliant - explain that compliance is only an issue for VRX</li>\n</ul>\n</li>\n<li>\n<p>Have the examples we use be compliant.  The current example of three thrusters in the rear seems to suggest that this is a viable option.</p>\n</li>\n</ul>\n<p>\u200c</p>\n<p>In general I think this is functionality that the teams will rely upon heavily, so anything we can do to make the process clear to them will save us time in the long run.</p>", "type": "rendered"}, "created_on": "2019-07-10T23:16:04.737388+00:00", "user": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "updated_on": "2019-07-10T23:16:04.746329+00:00", "type": "pullrequest_comment", "id": 108853773}