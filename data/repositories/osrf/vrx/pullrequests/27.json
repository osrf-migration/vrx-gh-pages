{"rendered": {"description": {"raw": "This PR introduces the following features:\r\n\r\n* A new `dock_block` model. This is a static model of the modular floating dock used to build the RobotX docks. It has a simple box as a collision shape. I didn\u2019t add any inertial properties as we\u2019ll create static docks to avoid physics instabilities among all blocks.\r\n* A new `dock_generator.erb` used to generate docks based on a string. As examples, I\u2019ve generated the RobotX 2016 and 2018 docks. I\u2019ll create a tutorial describing how to create a new dock but the process can be summarized as:\r\n\r\n    * Create a new directory under `robotx_gazebo/models`with the name of your dock.\r\n    * Create a `model.config`file.\r\n    * Create a `model.sdf.erb` file using the template from `dock_2016/model.sdf.erb` or `dock_2018_model.sdf.erb`.\r\n    * Modify the `laout` variable with the shape that you want to create.\r\n    * Add the name of your new `erb` file to the `robotx_gazebo/CMakeLists.txt`section in which we add the list of model files to be processed by erb.\r\n    \r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/3052397381-docks.png)", "markup": "markdown", "html": "<p>This PR introduces the following features:</p>\n<ul>\n<li>A new <code>dock_block</code> model. This is a static model of the modular floating dock used to build the RobotX docks. It has a simple box as a collision shape. I didn\u2019t add any inertial properties as we\u2019ll create static docks to avoid physics instabilities among all blocks.</li>\n<li>\n<p>A new <code>dock_generator.erb</code> used to generate docks based on a string. As examples, I\u2019ve generated the RobotX 2016 and 2018 docks. I\u2019ll create a tutorial describing how to create a new dock but the process can be summarized as:</p>\n<ul>\n<li>Create a new directory under <code>robotx_gazebo/models</code>with the name of your dock.</li>\n<li>Create a <code>model.config</code>file.</li>\n<li>Create a <code>model.sdf.erb</code> file using the template from <code>dock_2016/model.sdf.erb</code> or <code>dock_2018_model.sdf.erb</code>.</li>\n<li>Modify the <code>laout</code> variable with the shape that you want to create.</li>\n<li>Add the name of your new <code>erb</code> file to the <code>robotx_gazebo/CMakeLists.txt</code>section in which we add the list of model files to be processed by erb.</li>\n</ul>\n</li>\n</ul>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3052397381-docks.png\" /></p>", "type": "rendered"}, "title": {"raw": "Dock", "markup": "markdown", "html": "<p>Dock</p>", "type": "rendered"}}, "type": "pullrequest", "description": "This PR introduces the following features:\r\n\r\n* A new `dock_block` model. This is a static model of the modular floating dock used to build the RobotX docks. It has a simple box as a collision shape. I didn\u2019t add any inertial properties as we\u2019ll create static docks to avoid physics instabilities among all blocks.\r\n* A new `dock_generator.erb` used to generate docks based on a string. As examples, I\u2019ve generated the RobotX 2016 and 2018 docks. I\u2019ll create a tutorial describing how to create a new dock but the process can be summarized as:\r\n\r\n    * Create a new directory under `robotx_gazebo/models`with the name of your dock.\r\n    * Create a `model.config`file.\r\n    * Create a `model.sdf.erb` file using the template from `dock_2016/model.sdf.erb` or `dock_2018_model.sdf.erb`.\r\n    * Modify the `laout` variable with the shape that you want to create.\r\n    * Add the name of your new `erb` file to the `robotx_gazebo/CMakeLists.txt`section in which we add the list of model files to be processed by erb.\r\n    \r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/3052397381-docks.png)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/pullrequests/27/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/diffstat/osrf/vrx:0ce8742bac2a%0De9be30a0375a?from_pullrequest_id=27"}, "commits": {"href": "data/repositories/osrf/vrx/pullrequests/27/commits.json"}, "self": {"href": "data/repositories/osrf/vrx/pullrequests/27.json"}, "comments": {"href": "data/repositories/osrf/vrx/pullrequests/27/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/pullrequests/27/merge"}, "html": {"href": "#!/osrf/vrx/pull-requests/27"}, "activity": {"href": "data/repositories/osrf/vrx/pullrequests/27/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/diff/osrf/vrx:0ce8742bac2a%0De9be30a0375a?from_pullrequest_id=27"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/pullrequests/27/approve"}, "statuses": {"href": "data/repositories/osrf/vrx/pullrequests/27/statuses_page=1.json"}}, "title": "Dock", "close_source_branch": true, "reviewers": [], "id": 27, "destination": {"commit": {"hash": "e9be30a0375a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/e9be30a0375a.json"}, "html": {"href": "#!/osrf/vrx/commits/e9be30a0375a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "created_on": "2018-07-23T23:24:59.035844+00:00", "summary": {"raw": "This PR introduces the following features:\r\n\r\n* A new `dock_block` model. This is a static model of the modular floating dock used to build the RobotX docks. It has a simple box as a collision shape. I didn\u2019t add any inertial properties as we\u2019ll create static docks to avoid physics instabilities among all blocks.\r\n* A new `dock_generator.erb` used to generate docks based on a string. As examples, I\u2019ve generated the RobotX 2016 and 2018 docks. I\u2019ll create a tutorial describing how to create a new dock but the process can be summarized as:\r\n\r\n    * Create a new directory under `robotx_gazebo/models`with the name of your dock.\r\n    * Create a `model.config`file.\r\n    * Create a `model.sdf.erb` file using the template from `dock_2016/model.sdf.erb` or `dock_2018_model.sdf.erb`.\r\n    * Modify the `laout` variable with the shape that you want to create.\r\n    * Add the name of your new `erb` file to the `robotx_gazebo/CMakeLists.txt`section in which we add the list of model files to be processed by erb.\r\n    \r\n\r\n![](data/bitbucket.org/repo/BgXLzgM/images/3052397381-docks.png)", "markup": "markdown", "html": "<p>This PR introduces the following features:</p>\n<ul>\n<li>A new <code>dock_block</code> model. This is a static model of the modular floating dock used to build the RobotX docks. It has a simple box as a collision shape. I didn\u2019t add any inertial properties as we\u2019ll create static docks to avoid physics instabilities among all blocks.</li>\n<li>\n<p>A new <code>dock_generator.erb</code> used to generate docks based on a string. As examples, I\u2019ve generated the RobotX 2016 and 2018 docks. I\u2019ll create a tutorial describing how to create a new dock but the process can be summarized as:</p>\n<ul>\n<li>Create a new directory under <code>robotx_gazebo/models</code>with the name of your dock.</li>\n<li>Create a <code>model.config</code>file.</li>\n<li>Create a <code>model.sdf.erb</code> file using the template from <code>dock_2016/model.sdf.erb</code> or <code>dock_2018_model.sdf.erb</code>.</li>\n<li>Modify the <code>laout</code> variable with the shape that you want to create.</li>\n<li>Add the name of your new <code>erb</code> file to the <code>robotx_gazebo/CMakeLists.txt</code>section in which we add the list of model files to be processed by erb.</li>\n</ul>\n</li>\n</ul>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3052397381-docks.png\" /></p>", "type": "rendered"}, "source": {"commit": {"hash": "2e7234c8d8b3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/2e7234c8d8b3.json"}, "html": {"href": "#!/osrf/vrx/commits/2e7234c8d8b3"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "dock"}}, "comment_count": 7, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2018-07-26T16:48:29.862865+00:00", "type": "participant", "approved": false, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "PARTICIPANT", "participated_on": "2018-07-26T16:44:01.230539+00:00", "type": "participant", "approved": true, "user": {"display_name": "Kevin Allen", "uuid": "{29f672ad-72f4-434e-bb0e-c6f2f69974f2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B29f672ad-72f4-434e-bb0e-c6f2f69974f2%7D"}, "html": {"href": "https://bitbucket.org/%7B29f672ad-72f4-434e-bb0e-c6f2f69974f2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355d0415f6040ffb168f44275ac2ee2fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsKA-1.png"}}, "nickname": "kev-the-dev", "type": "user", "account_id": "5b04a6cf8a69f52b3ba2e5db"}}], "reason": "", "updated_on": "2018-07-26T16:49:10.211905+00:00", "author": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "merge_commit": {"hash": "0ce8742bac2a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/0ce8742bac2a.json"}, "html": {"href": "#!/osrf/vrx/commits/0ce8742bac2a"}}}, "closed_by": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}