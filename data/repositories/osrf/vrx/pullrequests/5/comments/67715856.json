{"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/5/comments/67715856.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/5/_/diff#comment-67715856"}}, "parent": {"id": 67703722, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/5/comments/67703722.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/5/_/diff#comment-67703722"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/5.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/5"}}, "title": "Add docker utilities"}, "content": {"raw": "I haven\u2019t fixed this yet, but have more information and a start on a troubleshooting section for the wiki. I\u2019m going to see if Micheal can address it since he has experience working with Docker on the NPS network.\n\nShould have a test in the setup wiki to test for network access and determine if there is a DNS problem\n\n# Test Docker\u2019s network access\n\n    docker run busybox nslookup google.com\n\nIf the system returns something like\u2026\n\n    $ docker run busybox nslookup google.com\n    Server:    172.20.20.11\n    Address 1: 172.20.20.11 lee.ern.nps.edu\n    \n    Name:      google.com\n    Address 1: 2607:f8b0:4005:804::200e sfo07s13-in-x0e.1e100.net\n    Address 2: 216.58.195.78 sfo07s16-in-f78.1e100.net\n\nthen the system has network access and we can proceed with building the VMRC container.\n\nIf the system hangs for a long time \\(~5 min\\) and returns something like\n\n    Server:    8.8.8.8\n    Address 1: 8.8.8.8\n    \n    nslookup: can't resolve 'google.com'\n\nthen we have a network problem. The likely cause is that we can\u2019t use the default DNS.\n\n# Temporarily try using host\u2019s DNS\n\nFirst, let\u2019s find out what DNS docker is using\u2026\n\n    docker run busybox less /etc/resolv.conf\n\nwhich will generate something like\u2026\n\n    # Dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)\n    #     DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN\n    \n    nameserver 8.8.8.8\n    nameserver 8.8.4.4\n\nLet\u2019s compare that to the Host DNS. On the host\n\n    $ nmcli dev show | grep 'IP4.DNS'\n    IP4.DNS[1]:                             172.20.20.11\n    IP4.DNS[2]:                             172.10.20.12\n\nNow, let\u2019s see if we can temporarily use the first DNS that our host uses\u2026\n\n    $ docker run --dns 172.20.20.11 busybox nslookup google.com\n    Server:    172.20.20.11\n    Address 1: 172.20.20.11 lee.ern.nps.edu\n    \n    Name:      google.com\n    Address 1: 2607:f8b0:4005:807::200e sfo07s16-in-x0e.1e100.net\n    Address 2: 216.58.195.78 sfo07s16-in-f78.1e100.net\n\n# Configuring Docker to use host DNS\n\nThis would be the permanent fix. I haven\u2019t made this work yet, but the two options I\u2019ve found are\u2026\n\n1. Add the following lines to the `/etc/docker/daemon.json` file\n\n    \\{ \"dns\": \\[\"172.20.20.11\", \"172.10.20.12\"\\] \\}\n\n\n\n2\\) Add the following lines to the `/etc/default/docker` file\n\n    # Use DOCKER_OPTS to modify the daemon startup options.\n    DOCKER_OPTS=\"--dns 172.20.20.11 --dns 172.10.20.12\"\n\nIn either case my test is to restart docker \\(`sudo service docker restart`\\) and then either check the DNS from within the container `docker run busybox less /etc/resolv.conf` or to try to do a lookup `docker run busybox nslookup google.com` - the former is much faster.\n\nReferences:\n\n* [https://stackoverflow.com/questions/24151129/docker-network-calls-fail-during-image-build-on-corporate-network](https://stackoverflow.com/questions/24151129/docker-network-calls-fail-during-image-build-on-corporate-network)\n* [https://development.robinwinslow.uk/2016/06/23/fix-docker-networking-dns/](https://development.robinwinslow.uk/2016/06/23/fix-docker-networking-dns/)\n\nSo far no luck getting docker to recognize the hard coded DNS.\n\n\u200c", "markup": "markdown", "html": "<p>I haven\u2019t fixed this yet, but have more information and a start on a troubleshooting section for the wiki. I\u2019m going to see if Micheal can address it since he has experience working with Docker on the NPS network.</p>\n<p>Should have a test in the setup wiki to test for network access and determine if there is a DNS problem</p>\n<h1 id=\"markdown-header-test-dockers-network-access\">Test Docker\u2019s network access</h1>\n<div class=\"codehilite\"><pre><span></span>docker run busybox nslookup google.com\n</pre></div>\n\n\n<p>If the system returns something like\u2026</p>\n<div class=\"codehilite\"><pre><span></span>$ docker run busybox nslookup google.com\nServer:    <span class=\"m\">172</span>.20.20.11\nAddress <span class=\"m\">1</span>: <span class=\"m\">172</span>.20.20.11 lee.ern.nps.edu\n\nName:      google.com\nAddress <span class=\"m\">1</span>: <span class=\"m\">2607</span>:f8b0:4005:804::200e sfo07s13-in-x0e.1e100.net\nAddress <span class=\"m\">2</span>: <span class=\"m\">216</span>.58.195.78 sfo07s16-in-f78.1e100.net\n</pre></div>\n\n\n<p>then the system has network access and we can proceed with building the VMRC container.</p>\n<p>If the system hangs for a long time (~5 min) and returns something like</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">Server</span><span class=\"o\">:</span>    <span class=\"mf\">8.8</span><span class=\"o\">.</span><span class=\"mf\">8.8</span>\n<span class=\"n\">Address</span> <span class=\"mi\">1</span><span class=\"o\">:</span> <span class=\"mf\">8.8</span><span class=\"o\">.</span><span class=\"mf\">8.8</span>\n\n<span class=\"n\">nslookup</span><span class=\"o\">:</span> <span class=\"n\">can</span><span class=\"s1\">&#39;t resolve &#39;</span><span class=\"n\">google</span><span class=\"o\">.</span><span class=\"na\">com</span><span class=\"err\">&#39;</span>\n</pre></div>\n\n\n<p>then we have a network problem. The likely cause is that we can\u2019t use the default DNS.</p>\n<h1 id=\"markdown-header-temporarily-try-using-hosts-dns\">Temporarily try using host\u2019s DNS</h1>\n<p>First, let\u2019s find out what DNS docker is using\u2026</p>\n<div class=\"codehilite\"><pre><span></span>docker run busybox less /etc/resolv.conf\n</pre></div>\n\n\n<p>which will generate something like\u2026</p>\n<div class=\"codehilite\"><pre><span></span># Dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)\n#     DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN\n\nnameserver 8.8.8.8\nnameserver 8.8.4.4\n</pre></div>\n\n\n<p>Let\u2019s compare that to the Host DNS. On the host</p>\n<div class=\"codehilite\"><pre><span></span>$ nmcli dev show <span class=\"p\">|</span> grep <span class=\"s1\">&#39;IP4.DNS&#39;</span>\nIP4.DNS<span class=\"o\">[</span><span class=\"m\">1</span><span class=\"o\">]</span>:                             <span class=\"m\">172</span>.20.20.11\nIP4.DNS<span class=\"o\">[</span><span class=\"m\">2</span><span class=\"o\">]</span>:                             <span class=\"m\">172</span>.10.20.12\n</pre></div>\n\n\n<p>Now, let\u2019s see if we can temporarily use the first DNS that our host uses\u2026</p>\n<div class=\"codehilite\"><pre><span></span>$ docker run --dns <span class=\"m\">172</span>.20.20.11 busybox nslookup google.com\nServer:    <span class=\"m\">172</span>.20.20.11\nAddress <span class=\"m\">1</span>: <span class=\"m\">172</span>.20.20.11 lee.ern.nps.edu\n\nName:      google.com\nAddress <span class=\"m\">1</span>: <span class=\"m\">2607</span>:f8b0:4005:807::200e sfo07s16-in-x0e.1e100.net\nAddress <span class=\"m\">2</span>: <span class=\"m\">216</span>.58.195.78 sfo07s16-in-f78.1e100.net\n</pre></div>\n\n\n<h1 id=\"markdown-header-configuring-docker-to-use-host-dns\">Configuring Docker to use host DNS</h1>\n<p>This would be the permanent fix. I haven\u2019t made this work yet, but the two options I\u2019ve found are\u2026</p>\n<ol>\n<li>\n<p>Add the following lines to the <code>/etc/docker/daemon.json</code> file</p>\n<p>{ \"dns\": [\"172.20.20.11\", \"172.10.20.12\"] }</p>\n</li>\n</ol>\n<p>2) Add the following lines to the <code>/etc/default/docker</code> file</p>\n<div class=\"codehilite\"><pre><span></span># Use DOCKER_OPTS to modify the daemon startup options.\nDOCKER_OPTS=&quot;--dns 172.20.20.11 --dns 172.10.20.12&quot;\n</pre></div>\n\n\n<p>In either case my test is to restart docker (<code>sudo service docker restart</code>) and then either check the DNS from within the container <code>docker run busybox less /etc/resolv.conf</code> or to try to do a lookup <code>docker run busybox nslookup google.com</code> - the former is much faster.</p>\n<p>References:</p>\n<ul>\n<li><a data-is-external-link=\"true\" href=\"https://stackoverflow.com/questions/24151129/docker-network-calls-fail-during-image-build-on-corporate-network\" rel=\"nofollow\">https://stackoverflow.com/questions/24151129/docker-network-calls-fail-during-image-build-on-corporate-network</a></li>\n<li><a data-is-external-link=\"true\" href=\"https://development.robinwinslow.uk/2016/06/23/fix-docker-networking-dns/\" rel=\"nofollow\">https://development.robinwinslow.uk/2016/06/23/fix-docker-networking-dns/</a></li>\n</ul>\n<p>So far no luck getting docker to recognize the hard coded DNS.</p>\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2018-06-20T17:04:02.221868+00:00", "user": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "updated_on": "2018-06-20T18:30:19.178139+00:00", "type": "pullrequest_comment", "id": 67715856}