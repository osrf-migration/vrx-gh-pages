{"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/5/comments/67974264.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/5/_/diff#comment-67974264"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/5.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/5"}}, "title": "Add docker utilities"}, "content": {"raw": "Testing from home using a fairly new install of Ubuntu GNOME 16.04 \\(no ROS/Gazebo installed on the host!\\) Following the tutorial wiki.\n\nAt the docker build step I run into this error\n\n    brian.bingham@Laptop-Brian:~/vmrc_docker$ ./build.bash vmrc\n    Sending build context to Docker daemon  4.096kB\n    Step 1/12 : FROM nvidia/opengl:1.0-glvnd-devel-ubuntu16.04\n     ---> 9d7b43f0ce07\n    Step 2/12 : RUN apt-get update  && apt-get install -y         build-essential         cmake         lsb-release         gdb         git         mercurial         python3-dbg         python3-pip         python3-venv         software-properties-common         sudo         vim         wget  && apt-get clean\n     ---> Using cache\n     ---> 0fdc080110b8\n    Step 3/12 : ARG user_id\n     ---> Using cache\n     ---> 8089f21554e1\n    Step 4/12 : ENV USERNAME developer\n     ---> Using cache\n     ---> 005db1f4d985\n    Step 5/12 : RUN useradd -U --uid ${user_id} -ms /bin/bash $USERNAME  && echo \"$USERNAME:$USERNAME\" | chpasswd  && adduser $USERNAME sudo  && echo \"$USERNAME ALL=NOPASSWD: ALL\" >> /etc/sudoers.d/$USERNAME\n     ---> Using cache\n     ---> f8099c5c4cf2\n    Step 6/12 : USER $USERNAME\n     ---> Using cache\n     ---> 66e25ca0a763\n    Step 7/12 : WORKDIR /home/$USERNAME\n     ---> Using cache\n     ---> 96bb52138996\n    Step 8/12 : RUN sudo /bin/sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list'  && sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116  && sudo /bin/sh -c 'echo \"deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main\" > /etc/apt/sources.list.d/gazebo-stable.list  && wget http://packages.osrfoundation.org/gazebo.key -O - | apt-key add -'  && sudo apt-get update  && sudo apt-get install -y     ros-kinetic-desktop-full     ros-kinetic-joy-teleop     gazebo7     libgazebo7-dev  && sudo rosdep init  && sudo apt-get clean\n     ---> Using cache\n     ---> f99ad2c9ce6e\n    Step 9/12 : RUN rosdep update\n     ---> Using cache\n     ---> 7bb24bd73ede\n    Step 10/12 : RUN mkdir -p vmrc_ws/src  && cd vmrc_ws  && hg clone #!/osrf/vmrc src/vmrc\n     ---> Using cache\n     ---> 454f2812cc76\n    Step 11/12 : RUN /bin/bash -c \". /opt/ros/kinetic/setup.bash && cd vmrc_ws && catkin_make\"\n     ---> Running in c70c71a96f98\n    -- The C compiler identification is GNU 5.4.0\n    -- The CXX compiler identification is GNU 5.4.0\n    -- Check for working C compiler: /usr/bin/cc\n    -- Check for working C compiler: /usr/bin/cc -- works\n    -- Detecting C compiler ABI info\n    -- Detecting C compiler ABI info - done\n    -- Detecting C compile features\n    -- Detecting C compile features - done\n    -- Check for working CXX compiler: /usr/bin/c++\n    -- Check for working CXX compiler: /usr/bin/c++ -- works\n    -- Detecting CXX compiler ABI info\n    -- Detecting CXX compiler ABI info - done\n    -- Detecting CXX compile features\n    -- Detecting CXX compile features - done\n    -- Using CATKIN_DEVEL_PREFIX: /home/developer/vmrc_ws/devel\n    -- Using CMAKE_PREFIX_PATH: /opt/ros/kinetic\n    -- This workspace overlays: /opt/ros/kinetic\n    -- Found PythonInterp: /usr/bin/python (found version \"2.7.12\") \n    -- Using PYTHON_EXECUTABLE: /usr/bin/python\n    -- Using Debian Python package layout\n    -- Using empy: /usr/bin/empy\n    -- Using CATKIN_ENABLE_TESTING: ON\n    -- Call enable_testing()\n    -- Using CATKIN_TEST_RESULTS_DIR: /home/developer/vmrc_ws/build/test_results\n    -- Found gmock sources under '/usr/src/gmock': gmock will be built\n    -- Looking for pthread.h\n    -- Looking for pthread.h - found\n    -- Looking for pthread_create\n    -- Looking for pthread_create - not found\n    -- Looking for pthread_create in pthreads\n    -- Looking for pthread_create in pthreads - not found\n    -- Looking for pthread_create in pthread\n    -- Looking for pthread_create in pthread - found\n    -- Found Threads: TRUE  \n    -- Found gtest sources under '/usr/src/gmock': gtests will be built\n    -- Using Python nosetests: /usr/bin/nosetests-2.7\n    -- catkin 0.7.11\n    -- BUILD_SHARED_LIBS is on\n    -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    -- ~~  traversing 4 packages in topological order:\n    -- ~~  - usv_gazebo_plugins\n    -- ~~  - wamv_description\n    -- ~~  - wamv_gazebo\n    -- ~~  - robotx_gazebo\n    -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    -- +++ processing catkin package: 'usv_gazebo_plugins'\n    -- ==> add_subdirectory(vmrc/usv_gazebo_plugins)\n    -- Using these message generators: gencpp;geneus;genlisp;gennodejs;genpy\n    -- Boost version: 1.58.0\n    -- Found the following Boost libraries:\n    --   thread\n    --   signals\n    --   system\n    --   filesystem\n    --   program_options\n    --   regex\n    --   iostreams\n    --   date_time\n    --   chrono\n    --   atomic\n    -- Found Protobuf: /usr/lib/x86_64-linux-gnu/libprotobuf.so  \n    -- Boost version: 1.58.0\n    -- Looking for OGRE...\n    -- OGRE_PREFIX_WATCH changed.\n    -- Found PkgConfig: /usr/bin/pkg-config (found version \"0.29.1\") \n    -- Checking for module 'OGRE'\n    --   Found OGRE, version 1.9.0\n    -- Found Ogre Ghadamon (1.9.0)\n    -- Found OGRE: optimized;/usr/lib/x86_64-linux-gnu/libOgreMain.so;debug;/usr/lib/x86_64-linux-gnu/libOgreMain.so\n    -- Looking for OGRE_Paging...\n    -- Found OGRE_Paging: optimized;/usr/lib/x86_64-linux-gnu/libOgrePaging.so;debug;/usr/lib/x86_64-linux-gnu/libOgrePaging.so\n    -- Looking for OGRE_Terrain...\n    -- Found OGRE_Terrain: optimized;/usr/lib/x86_64-linux-gnu/libOgreTerrain.so;debug;/usr/lib/x86_64-linux-gnu/libOgreTerrain.so\n    -- Looking for OGRE_Property...\n    -- Found OGRE_Property: optimized;/usr/lib/x86_64-linux-gnu/libOgreProperty.so;debug;/usr/lib/x86_64-linux-gnu/libOgreProperty.so\n    -- Looking for OGRE_RTShaderSystem...\n    -- Found OGRE_RTShaderSystem: optimized;/usr/lib/x86_64-linux-gnu/libOgreRTShaderSystem.so;debug;/usr/lib/x86_64-linux-gnu/libOgreRTShaderSystem.so\n    -- Looking for OGRE_Volume...\n    -- Found OGRE_Volume: optimized;/usr/lib/x86_64-linux-gnu/libOgreVolume.so;debug;/usr/lib/x86_64-linux-gnu/libOgreVolume.so\n    -- Looking for OGRE_Overlay...\n    -- Found OGRE_Overlay: optimized;/usr/lib/x86_64-linux-gnu/libOgreOverlay.so;debug;/usr/lib/x86_64-linux-gnu/libOgreOverlay.so\n    -- usv_gazebo_plugins: 1 messages, 0 services\n    -- +++ processing catkin package: 'wamv_description'\n    -- ==> add_subdirectory(vmrc/wamv_description)\n    -- xacro: determining deps for: urdf/wamv_base.urdf.xacro ...\n    -- +++ processing catkin package: 'wamv_gazebo'\n    -- ==> add_subdirectory(vmrc/wamv_gazebo)\n    -- Using these message generators: gencpp;geneus;genlisp;gennodejs;genpy\n    -- xacro: determining deps for: urdf/wamv_gazebo.urdf.xacro ...\n    -- +++ processing catkin package: 'robotx_gazebo'\n    -- ==> add_subdirectory(vmrc/robotx_gazebo)\n    -- Using these message generators: gencpp;geneus;genlisp;gennodejs;genpy\n    -- xacro: determining deps for: worlds/sandisland_buoys.world.xacro ...\n    -- xacro: determining deps for: worlds/sandisland.world.xacro ...\n    -- Configuring done\n    -- Generating done\n    -- Build files have been written to: /home/developer/vmrc_ws/build\n    Scanning dependencies of target _usv_gazebo_plugins_generate_messages_check_deps_UsvDrive\n    [  0%] Built target _usv_gazebo_plugins_generate_messages_check_deps_UsvDrive\n    Scanning dependencies of target usv_gazebo_thrust_plugin\n    Scanning dependencies of target usv_gazebo_dynamics_plugin\n    Scanning dependencies of target usv_gazebo_wind_plugin\n    [  3%] Building CXX object vmrc/usv_gazebo_plugins/CMakeFiles/usv_gazebo_thrust_plugin.dir/src/usv_gazebo_thrust_plugin.cc.o\n    [  7%] Building CXX object vmrc/usv_gazebo_plugins/CMakeFiles/usv_gazebo_dynamics_plugin.dir/src/usv_gazebo_dynamics_plugin.cc.o\n    Scanning dependencies of target buoyancy_gazebo_plugin\n    [ 11%] Building CXX object vmrc/usv_gazebo_plugins/CMakeFiles/usv_gazebo_wind_plugin.dir/src/usv_gazebo_wind_plugin.cc.o\n    [ 14%] Building CXX object vmrc/usv_gazebo_plugins/CMakeFiles/buoyancy_gazebo_plugin.dir/src/buoyancy_gazebo_plugin.cc.o\n    In file included from /home/developer/vmrc_ws/src/vmrc/usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc:26:0:\n    /home/developer/vmrc_ws/src/vmrc/usv_gazebo_plugins/include/usv_gazebo_plugins/usv_gazebo_thrust_plugin.hh:36:41: fatal error: usv_gazebo_plugins/UsvDrive.h: No such file or directory\n    compilation terminated.\n    vmrc/usv_gazebo_plugins/CMakeFiles/usv_gazebo_thrust_plugin.dir/build.make:62: recipe for target 'vmrc/usv_gazebo_plugins/CMakeFiles/usv_gazebo_thrust_plugin.dir/src/usv_gazebo_thrust_plugin.cc.o' failed\n    make[2]: *** [vmrc/usv_gazebo_plugins/CMakeFiles/usv_gazebo_thrust_plugin.dir/src/usv_gazebo_thrust_plugin.cc.o] Error 1\n    CMakeFiles/Makefile2:2636: recipe for target 'vmrc/usv_gazebo_plugins/CMakeFiles/usv_gazebo_thrust_plugin.dir/all' failed\n    make[1]: *** [vmrc/usv_gazebo_plugins/CMakeFiles/usv_gazebo_thrust_plugin.dir/all] Error 2\n    make[1]: *** Waiting for unfinished jobs....\n    [ 18%] Linking CXX shared library /home/developer/vmrc_ws/devel/lib/libbuoyancy_gazebo_plugin.so\n    [ 18%] Built target buoyancy_gazebo_plugin\n    [ 22%] Linking CXX shared library /home/developer/vmrc_ws/devel/lib/libusv_gazebo_wind_plugin.so\n    [ 22%] Built target usv_gazebo_wind_plugin\n    [ 25%] Linking CXX shared library /home/developer/vmrc_ws/devel/lib/libusv_gazebo_dynamics_plugin.so\n    [ 25%] Built target usv_gazebo_dynamics_plugin\n    Makefile:138: recipe for target 'all' failed\n    make: *** [all] Error 2\n    Invoking \"make -j4 -l4\" failed\n    Base path: /home/developer/vmrc_ws\n    Source space: /home/developer/vmrc_ws/src\n    Build space: /home/developer/vmrc_ws/build\n    Devel space: /home/developer/vmrc_ws/devel\n    Install space: /home/developer/vmrc_ws/install\n    Creating symlink \"/home/developer/vmrc_ws/src/CMakeLists.txt\" pointing to \"/opt/ros/kinetic/share/catkin/cmake/toplevel.cmake\"\n    ####\n    #### Running command: \"cmake /home/developer/vmrc_ws/src -DCATKIN_DEVEL_PREFIX=/home/developer/vmrc_ws/devel -DCMAKE_INSTALL_PREFIX=/home/developer/vmrc_ws/install -G Unix Makefiles\" in \"/home/developer/vmrc_ws/build\"\n    ####\n    ####\n    #### Running command: \"make -j4 -l4\" in \"/home/developer/vmrc_ws/build\"\n    ####\n    The command '/bin/sh -c /bin/bash -c \". /opt/ros/kinetic/setup.bash && cd vmrc_ws && catkin_make\"' returned a non-zero code: 1\n    Error response from daemon: No such image: vmrc:2018_Jun_22_0819\n    Built vmrc:2018_Jun_22_0819 and tagged as vmrc:latest\n\nCould be related to this issue [#!/osrf/vmrc/issues/9/cmake-error-with-usvdriveh](#!/osrf/vmrc/issues/9/cmake-error-with-usvdriveh)\n\nI tried running multiple times to see if that took care of the error.\n\n\u200c\n\nAlso tried skipping to the run step to see if I could go ahead and run the container and got another error\u2026\n\n    brian.bingham@Laptop-Brian:~/vmrc_docker$ ./run.bash vmrc\n    xauth:  file /tmp/.docker.xauth does not exist\n    [sudo] password for brian.bingham: \n    Unable to find image 'vmrc:latest' locally\n    docker: Error response from daemon: pull access denied for vmrc, repository does not exist or may require 'docker login'.\n    See 'docker run --help'.\n    \n\n\u200c", "markup": "markdown", "html": "<p>Testing from home using a fairly new install of Ubuntu GNOME 16.04 (no ROS/Gazebo installed on the host!) Following the tutorial wiki.</p>\n<p>At the docker build step I run into this error</p>\n<div class=\"codehilite\"><pre><span></span>brian.bingham@Laptop-Brian:~/vmrc_docker$ ./build.bash vmrc\nSending build context to Docker daemon  4.096kB\nStep 1/12 : FROM nvidia/opengl:1.0-glvnd-devel-ubuntu16.04\n ---&gt; 9d7b43f0ce07\nStep 2/12 : RUN apt-get update  <span class=\"err\">&amp;&amp;</span> apt-get install -y         build-essential         cmake         lsb-release         gdb         git         mercurial         python3-dbg         python3-pip         python3-venv         software-properties-common         sudo         vim         wget  <span class=\"err\">&amp;&amp;</span> apt-get clean\n ---&gt; Using cache\n ---&gt; 0fdc080110b8\nStep 3/12 : ARG user_id\n ---&gt; Using cache\n ---&gt; 8089f21554e1\nStep 4/12 : ENV USERNAME developer\n ---&gt; Using cache\n ---&gt; 005db1f4d985\nStep 5/12 : RUN useradd -U --uid <span class=\"cp\">${</span><span class=\"n\">user_id</span><span class=\"cp\">}</span> -ms /bin/bash <span class=\"nv\">$USERNAME</span>  <span class=\"err\">&amp;&amp;</span> echo &quot;<span class=\"nv\">$USERNAME</span>:<span class=\"nv\">$USERNAME</span>&quot; | chpasswd  <span class=\"err\">&amp;&amp;</span> adduser <span class=\"nv\">$USERNAME</span> sudo  <span class=\"err\">&amp;&amp;</span> echo &quot;<span class=\"nv\">$USERNAME</span> ALL=NOPASSWD: ALL&quot; &gt;&gt; /etc/sudoers.d/<span class=\"nv\">$USERNAME</span>\n ---&gt; Using cache\n ---&gt; f8099c5c4cf2\nStep 6/12 : USER <span class=\"nv\">$USERNAME</span>\n ---&gt; Using cache\n ---&gt; 66e25ca0a763\nStep 7/12 : WORKDIR /home/<span class=\"nv\">$USERNAME</span>\n ---&gt; Using cache\n ---&gt; 96bb52138996\nStep 8/12 : RUN sudo /bin/sh -c &#39;echo &quot;deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&#39;  <span class=\"err\">&amp;&amp;</span> sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116  <span class=\"err\">&amp;&amp;</span> sudo /bin/sh -c &#39;echo &quot;deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main&quot; &gt; /etc/apt/sources.list.d/gazebo-stable.list  <span class=\"err\">&amp;&amp;</span> wget http://packages.osrfoundation.org/gazebo.key -O - | apt-key add -&#39;  <span class=\"err\">&amp;&amp;</span> sudo apt-get update  <span class=\"err\">&amp;&amp;</span> sudo apt-get install -y     ros-kinetic-desktop-full     ros-kinetic-joy-teleop     gazebo7     libgazebo7-dev  <span class=\"err\">&amp;&amp;</span> sudo rosdep init  <span class=\"err\">&amp;&amp;</span> sudo apt-get clean\n ---&gt; Using cache\n ---&gt; f99ad2c9ce6e\nStep 9/12 : RUN rosdep update\n ---&gt; Using cache\n ---&gt; 7bb24bd73ede\nStep 10/12 : RUN mkdir -p vmrc_ws/src  <span class=\"err\">&amp;&amp;</span> cd vmrc_ws  <span class=\"err\">&amp;&amp;</span> hg clone #!/osrf/vmrc src/vmrc\n ---&gt; Using cache\n ---&gt; 454f2812cc76\nStep 11/12 : RUN /bin/bash -c &quot;. /opt/ros/kinetic/setup.bash <span class=\"err\">&amp;&amp;</span> cd vmrc_ws <span class=\"err\">&amp;&amp;</span> catkin_make&quot;\n ---&gt; Running in c70c71a96f98\n-- The C compiler identification is GNU 5.4.0\n-- The CXX compiler identification is GNU 5.4.0\n-- Check for working C compiler: /usr/bin/cc\n-- Check for working C compiler: /usr/bin/cc -- works\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Detecting C compile features\n-- Detecting C compile features - done\n-- Check for working CXX compiler: /usr/bin/c++\n-- Check for working CXX compiler: /usr/bin/c++ -- works\n-- Detecting CXX compiler ABI info\n-- Detecting CXX compiler ABI info - done\n-- Detecting CXX compile features\n-- Detecting CXX compile features - done\n-- Using CATKIN_DEVEL_PREFIX: /home/developer/vmrc_ws/devel\n-- Using CMAKE_PREFIX_PATH: /opt/ros/kinetic\n-- This workspace overlays: /opt/ros/kinetic\n-- Found PythonInterp: /usr/bin/python (found version &quot;2.7.12&quot;) \n-- Using PYTHON_EXECUTABLE: /usr/bin/python\n-- Using Debian Python package layout\n-- Using empy: /usr/bin/empy\n-- Using CATKIN_ENABLE_TESTING: ON\n-- Call enable_testing()\n-- Using CATKIN_TEST_RESULTS_DIR: /home/developer/vmrc_ws/build/test_results\n-- Found gmock sources under &#39;/usr/src/gmock&#39;: gmock will be built\n-- Looking for pthread.h\n-- Looking for pthread.h - found\n-- Looking for pthread_create\n-- Looking for pthread_create - not found\n-- Looking for pthread_create in pthreads\n-- Looking for pthread_create in pthreads - not found\n-- Looking for pthread_create in pthread\n-- Looking for pthread_create in pthread - found\n-- Found Threads: TRUE  \n-- Found gtest sources under &#39;/usr/src/gmock&#39;: gtests will be built\n-- Using Python nosetests: /usr/bin/nosetests-2.7\n-- catkin 0.7.11\n-- BUILD_SHARED_LIBS is on\n-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n-- ~~  traversing 4 packages in topological order:\n-- ~~  - usv_gazebo_plugins\n-- ~~  - wamv_description\n-- ~~  - wamv_gazebo\n-- ~~  - robotx_gazebo\n-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n-- +++ processing catkin package: &#39;usv_gazebo_plugins&#39;\n-- ==&gt; add_subdirectory(vmrc/usv_gazebo_plugins)\n-- Using these message generators: gencpp;geneus;genlisp;gennodejs;genpy\n-- Boost version: 1.58.0\n-- Found the following Boost libraries:\n--   thread\n--   signals\n--   system\n--   filesystem\n--   program_options\n--   regex\n--   iostreams\n--   date_time\n--   chrono\n--   atomic\n-- Found Protobuf: /usr/lib/x86_64-linux-gnu/libprotobuf.so  \n-- Boost version: 1.58.0\n-- Looking for OGRE...\n-- OGRE_PREFIX_WATCH changed.\n-- Found PkgConfig: /usr/bin/pkg-config (found version &quot;0.29.1&quot;) \n-- Checking for module &#39;OGRE&#39;\n--   Found OGRE, version 1.9.0\n-- Found Ogre Ghadamon (1.9.0)\n-- Found OGRE: optimized;/usr/lib/x86_64-linux-gnu/libOgreMain.so;debug;/usr/lib/x86_64-linux-gnu/libOgreMain.so\n-- Looking for OGRE_Paging...\n-- Found OGRE_Paging: optimized;/usr/lib/x86_64-linux-gnu/libOgrePaging.so;debug;/usr/lib/x86_64-linux-gnu/libOgrePaging.so\n-- Looking for OGRE_Terrain...\n-- Found OGRE_Terrain: optimized;/usr/lib/x86_64-linux-gnu/libOgreTerrain.so;debug;/usr/lib/x86_64-linux-gnu/libOgreTerrain.so\n-- Looking for OGRE_Property...\n-- Found OGRE_Property: optimized;/usr/lib/x86_64-linux-gnu/libOgreProperty.so;debug;/usr/lib/x86_64-linux-gnu/libOgreProperty.so\n-- Looking for OGRE_RTShaderSystem...\n-- Found OGRE_RTShaderSystem: optimized;/usr/lib/x86_64-linux-gnu/libOgreRTShaderSystem.so;debug;/usr/lib/x86_64-linux-gnu/libOgreRTShaderSystem.so\n-- Looking for OGRE_Volume...\n-- Found OGRE_Volume: optimized;/usr/lib/x86_64-linux-gnu/libOgreVolume.so;debug;/usr/lib/x86_64-linux-gnu/libOgreVolume.so\n-- Looking for OGRE_Overlay...\n-- Found OGRE_Overlay: optimized;/usr/lib/x86_64-linux-gnu/libOgreOverlay.so;debug;/usr/lib/x86_64-linux-gnu/libOgreOverlay.so\n-- usv_gazebo_plugins: 1 messages, 0 services\n-- +++ processing catkin package: &#39;wamv_description&#39;\n-- ==&gt; add_subdirectory(vmrc/wamv_description)\n-- xacro: determining deps for: urdf/wamv_base.urdf.xacro ...\n-- +++ processing catkin package: &#39;wamv_gazebo&#39;\n-- ==&gt; add_subdirectory(vmrc/wamv_gazebo)\n-- Using these message generators: gencpp;geneus;genlisp;gennodejs;genpy\n-- xacro: determining deps for: urdf/wamv_gazebo.urdf.xacro ...\n-- +++ processing catkin package: &#39;robotx_gazebo&#39;\n-- ==&gt; add_subdirectory(vmrc/robotx_gazebo)\n-- Using these message generators: gencpp;geneus;genlisp;gennodejs;genpy\n-- xacro: determining deps for: worlds/sandisland_buoys.world.xacro ...\n-- xacro: determining deps for: worlds/sandisland.world.xacro ...\n-- Configuring done\n-- Generating done\n-- Build files have been written to: /home/developer/vmrc_ws/build\nScanning dependencies of target _usv_gazebo_plugins_generate_messages_check_deps_UsvDrive\n[  0%] Built target _usv_gazebo_plugins_generate_messages_check_deps_UsvDrive\nScanning dependencies of target usv_gazebo_thrust_plugin\nScanning dependencies of target usv_gazebo_dynamics_plugin\nScanning dependencies of target usv_gazebo_wind_plugin\n[  3%] Building CXX object vmrc/usv_gazebo_plugins/CMakeFiles/usv_gazebo_thrust_plugin.dir/src/usv_gazebo_thrust_plugin.cc.o\n[  7%] Building CXX object vmrc/usv_gazebo_plugins/CMakeFiles/usv_gazebo_dynamics_plugin.dir/src/usv_gazebo_dynamics_plugin.cc.o\nScanning dependencies of target buoyancy_gazebo_plugin\n[ 11%] Building CXX object vmrc/usv_gazebo_plugins/CMakeFiles/usv_gazebo_wind_plugin.dir/src/usv_gazebo_wind_plugin.cc.o\n[ 14%] Building CXX object vmrc/usv_gazebo_plugins/CMakeFiles/buoyancy_gazebo_plugin.dir/src/buoyancy_gazebo_plugin.cc.o\nIn file included from /home/developer/vmrc_ws/src/vmrc/usv_gazebo_plugins/src/usv_gazebo_thrust_plugin.cc:26:0:\n/home/developer/vmrc_ws/src/vmrc/usv_gazebo_plugins/include/usv_gazebo_plugins/usv_gazebo_thrust_plugin.hh:36:41: fatal error: usv_gazebo_plugins/UsvDrive.h: No such file or directory\ncompilation terminated.\nvmrc/usv_gazebo_plugins/CMakeFiles/usv_gazebo_thrust_plugin.dir/build.make:62: recipe for target &#39;vmrc/usv_gazebo_plugins/CMakeFiles/usv_gazebo_thrust_plugin.dir/src/usv_gazebo_thrust_plugin.cc.o&#39; failed\nmake[2]: *** [vmrc/usv_gazebo_plugins/CMakeFiles/usv_gazebo_thrust_plugin.dir/src/usv_gazebo_thrust_plugin.cc.o] Error 1\nCMakeFiles/Makefile2:2636: recipe for target &#39;vmrc/usv_gazebo_plugins/CMakeFiles/usv_gazebo_thrust_plugin.dir/all&#39; failed\nmake[1]: *** [vmrc/usv_gazebo_plugins/CMakeFiles/usv_gazebo_thrust_plugin.dir/all] Error 2\nmake[1]: *** Waiting for unfinished jobs....\n[ 18%] Linking CXX shared library /home/developer/vmrc_ws/devel/lib/libbuoyancy_gazebo_plugin.so\n[ 18%] Built target buoyancy_gazebo_plugin\n[ 22%] Linking CXX shared library /home/developer/vmrc_ws/devel/lib/libusv_gazebo_wind_plugin.so\n[ 22%] Built target usv_gazebo_wind_plugin\n[ 25%] Linking CXX shared library /home/developer/vmrc_ws/devel/lib/libusv_gazebo_dynamics_plugin.so\n[ 25%] Built target usv_gazebo_dynamics_plugin\nMakefile:138: recipe for target &#39;all&#39; failed\nmake: *** [all] Error 2\nInvoking &quot;make -j4 -l4&quot; failed\nBase path: /home/developer/vmrc_ws\nSource space: /home/developer/vmrc_ws/src\nBuild space: /home/developer/vmrc_ws/build\nDevel space: /home/developer/vmrc_ws/devel\nInstall space: /home/developer/vmrc_ws/install\nCreating symlink &quot;/home/developer/vmrc_ws/src/CMakeLists.txt&quot; pointing to &quot;/opt/ros/kinetic/share/catkin/cmake/toplevel.cmake&quot;\n####\n#### Running command: &quot;cmake /home/developer/vmrc_ws/src -DCATKIN_DEVEL_PREFIX=/home/developer/vmrc_ws/devel -DCMAKE_INSTALL_PREFIX=/home/developer/vmrc_ws/install -G Unix Makefiles&quot; in &quot;/home/developer/vmrc_ws/build&quot;\n####\n####\n#### Running command: &quot;make -j4 -l4&quot; in &quot;/home/developer/vmrc_ws/build&quot;\n####\nThe command &#39;/bin/sh -c /bin/bash -c &quot;. /opt/ros/kinetic/setup.bash <span class=\"err\">&amp;&amp;</span> cd vmrc_ws <span class=\"err\">&amp;&amp;</span> catkin_make&quot;&#39; returned a non-zero code: 1\nError response from daemon: No such image: vmrc:2018_Jun_22_0819\nBuilt vmrc:2018_Jun_22_0819 and tagged as vmrc:latest\n</pre></div>\n\n\n<p>Could be related to this issue <a data-is-external-link=\"true\" href=\"#!/osrf/vmrc/issues/9/cmake-error-with-usvdriveh\" rel=\"nofollow\">#!/osrf/vmrc/issues/9/cmake-error-with-usvdriveh</a></p>\n<p>I tried running multiple times to see if that took care of the error.</p>\n<p>\u200c</p>\n<p>Also tried skipping to the run step to see if I could go ahead and run the container and got another error\u2026</p>\n<div class=\"codehilite\"><pre><span></span>brian.bingham@Laptop-Brian:~/vmrc_docker$ ./run.bash vmrc\nxauth:  file /tmp/.docker.xauth does not exist\n[sudo] password for brian.bingham: \nUnable to find image &#39;vmrc:latest&#39; locally\ndocker: Error response from daemon: pull access denied for vmrc, repository does not exist or may require &#39;docker login&#39;.\nSee &#39;docker run --help&#39;.\n</pre></div>\n\n\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2018-06-22T18:23:09.323115+00:00", "user": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "updated_on": "2018-06-22T18:25:02.276217+00:00", "type": "pullrequest_comment", "id": 67974264}