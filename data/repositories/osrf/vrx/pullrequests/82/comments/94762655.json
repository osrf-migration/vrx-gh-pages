{"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/82/comments/94762655.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/diff/osrf/vrx:f7c2b64ecfbd..fcd4b5a7c05f?path=docker%2FDockerfile"}, "html": {"href": "#!/osrf/vrx/pull-requests/82/_/diff#comment-94762655"}}, "parent": {"id": 94761612, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/82/comments/94761612.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/82/_/diff#comment-94761612"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 82, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/82.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/82"}}, "title": "modified Docker scripts to streamline developer workflow"}, "content": {"raw": "I was thinking maybe it would be helpful to elaborate a bit more. The process I would like to put in our tutorial for your use case is this:\n\n1. Build the image:\n\n    1. `$ hg clone #!/osrf/vrx`\n    2. `$ docker/build.bash .`\n    \n2. Open the docker/run.bash script and uncomment the line that mounts the current directory into the image at runtime.\n3. Run the image.\n\n    1. `docker/run.bash .`\n    \n\nWhen the above is complete, the image will be built and the repository on the host will mounted inside the image. This will include all the hidden files since they are on the host. The user will be able to use all hg commands inside or outside the container and all changes/edits will be available both in the container and on the host. You can also continue to mount your editor into the container if you prefer that. It shouldn\u2019t make a difference.\n\nFor users who have reasons not to mount the repository in from the host, it is also possible to log in to the container and run hg clone to make an ephemeral copy of the repository inside the container. They could also use tools like rsync or scp if desired to copy from the host into the container. I think this would be a little slower but it should still work fine.", "markup": "markdown", "html": "<p>I was thinking maybe it would be helpful to elaborate a bit more. The process I would like to put in our tutorial for your use case is this:</p>\n<ol>\n<li>\n<p>Build the image:</p>\n<ol>\n<li><code>$ hg clone #!/osrf/vrx</code></li>\n<li><code>$ docker/build.bash .</code></li>\n</ol>\n</li>\n<li>\n<p>Open the docker/run.bash script and uncomment the line that mounts the current directory into the image at runtime.</p>\n</li>\n<li>\n<p>Run the image.</p>\n<ol>\n<li><code>docker/run.bash .</code></li>\n</ol>\n</li>\n</ol>\n<p>When the above is complete, the image will be built and the repository on the host will mounted inside the image. This will include all the hidden files since they are on the host. The user will be able to use all hg commands inside or outside the container and all changes/edits will be available both in the container and on the host. You can also continue to mount your editor into the container if you prefer that. It shouldn\u2019t make a difference.</p>\n<p>For users who have reasons not to mount the repository in from the host, it is also possible to log in to the container and run hg clone to make an ephemeral copy of the repository inside the container. They could also use tools like rsync or scp if desired to copy from the host into the container. I think this would be a little slower but it should still work fine.</p>", "type": "rendered"}, "created_on": "2019-03-13T01:29:07.100311+00:00", "user": {"display_name": "Michael McCarrin", "uuid": "{3c3f500d-bbf6-472c-b8f7-627e5eabc226}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D"}, "html": {"href": "https://bitbucket.org/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a50abc93a3175f92c79e7521dfe089c0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "m1chaelm", "type": "user", "account_id": "5b2a9176467c9a09caa71ab1"}, "inline": {"to": 101, "from": null, "outdated": false, "path": "docker/Dockerfile"}, "updated_on": "2019-03-13T01:29:07.120563+00:00", "type": "pullrequest_comment", "id": 94762655}