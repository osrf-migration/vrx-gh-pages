{"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/94/comments/103204963.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/diff/ykhky/vrx:0465e5106ce9..76b4cb73809c?path=vrx_gazebo%2Fsrc%2Fscoring_plugin.cc"}, "html": {"href": "#!/osrf/vrx/pull-requests/94/_/diff#comment-103204963"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 94, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/94.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/94"}}, "title": "Issue#49 collision detection"}, "content": {"raw": "For generality, I think we will want to make the world name avoid hardcoding the world name \\(\u201crobotx\\_example\\_course\u201d\\).  IPerhaps that would mean that we need to move the node initialization and subscription to the Load function and get the world name there to create the subscription topic?", "markup": "markdown", "html": "<p>For generality, I think we will want to make the world name avoid hardcoding the world name (\u201crobotx_example_course\u201d).  IPerhaps that would mean that we need to move the node initialization and subscription to the Load function and get the world name there to create the subscription topic?</p>", "type": "rendered"}, "created_on": "2019-05-23T17:52:42.121695+00:00", "user": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "inline": {"to": 29, "from": null, "outdated": true, "path": "vrx_gazebo/src/scoring_plugin.cc"}, "updated_on": "2019-05-23T17:52:42.130575+00:00", "type": "pullrequest_comment", "id": 103204963}