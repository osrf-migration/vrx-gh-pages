{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113982893.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113982893"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "In 1606:964c5fe71770, I added a simple reflection to the ocean, and turned the mesh->plane for simplicity. It worked exactly as expected. However, as disussed with Ian, the waves look much better on a mesh than the plane because there are more vertices, so we need to switch back. \n\n![](data/bitbucket.org/repo/BgXLzgM/images/2314997288-image.png)\nIn 1607:afa265c873e2, I switched from plane->mesh, which resulted in the correct texture being shown, but projected onto the plane incorrectly. I need to investigate why this happens.\n\n![](data/bitbucket.org/repo/BgXLzgM/images/1029870392-image.png)\n", "markup": "markdown", "html": "<p>In 1606:<a href=\"#!/osrf/vrx/commits/964c5fe71770\" rel=\"nofollow\" class=\"ap-connect-link\">964c5fe71770</a>, I added a simple reflection to the ocean, and turned the mesh-&gt;plane for simplicity. It worked exactly as expected. However, as disussed with Ian, the waves look much better on a mesh than the plane because there are more vertices, so we need to switch back. </p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/2314997288-image.png\" />\nIn 1607:<a href=\"#!/osrf/vrx/commits/afa265c873e2\" rel=\"nofollow\" class=\"ap-connect-link\">afa265c873e2</a>, I switched from plane-&gt;mesh, which resulted in the correct texture being shown, but projected onto the plane incorrectly. I need to investigate why this happens.</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1029870392-image.png\" /></p>", "type": "rendered"}, "created_on": "2019-08-21T22:16:55.920256+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-21T22:16:55.926825+00:00", "type": "pullrequest_comment", "id": 113982893}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113983356.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113983356"}}, "parent": {"id": 113982893, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113982893.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113982893"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "It\u2019s likely to do with how the mesh\u2019s texture coords are set up. You can try changing the sign of `projectionCoord`'s `x` or `y`  and see if it makes any difference.", "markup": "markdown", "html": "<p>It\u2019s likely to do with how the mesh\u2019s texture coords are set up. You can try changing the sign of <code>projectionCoord</code>'s <code>x</code> or <code>y</code>  and see if it makes any difference.</p>", "type": "rendered"}, "created_on": "2019-08-21T22:23:00.397868+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-08-21T22:23:00.408239+00:00", "type": "pullrequest_comment", "id": 113983356}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113983615.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113983615"}}, "parent": {"id": 113983356, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113983356.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113983356"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Yeah I plan to try that next, looks like it's not terribly distorted or anything, but probably just a coordinate system change", "markup": "markdown", "html": "<p>Yeah I plan to try that next, looks like it's not terribly distorted or anything, but probably just a coordinate system change</p>", "type": "rendered"}, "created_on": "2019-08-21T22:26:40.929556+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-21T22:26:40.940521+00:00", "type": "pullrequest_comment", "id": 113983615}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113990301.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113990301"}}, "parent": {"id": 113983615, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113983615.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113983615"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Adding negative signs, just on x, just on y, on both, but it left me with worse, not understandable water.\n\n\u200c\n\nIn 1608:c5825ef4edaa, I changed it to only show refraction. This led to a good refraction. This likely means that something about reflection alone is causing the issue. It is reflecting along the wrong plane somehow.\n\n![](data/bitbucket.org/repo/BgXLzgM/images/2154789393-image.png)\n", "markup": "markdown", "html": "<p>Adding negative signs, just on x, just on y, on both, but it left me with worse, not understandable water.</p>\n<p>\u200c</p>\n<p>In 1608:<a href=\"#!/osrf/vrx/commits/c5825ef4edaa\" rel=\"nofollow\" class=\"ap-connect-link\">c5825ef4edaa</a>, I changed it to only show refraction. This led to a good refraction. This likely means that something about reflection alone is causing the issue. It is reflecting along the wrong plane somehow.</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/2154789393-image.png\" /></p>", "type": "rendered"}, "created_on": "2019-08-22T00:13:42.967541+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-22T00:27:23.248601+00:00", "type": "pullrequest_comment", "id": 113990301}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113991172.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113991172"}}, "parent": {"id": 113983615, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113983615.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113983615"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Another strange thing is that from some angles, it appears that the reflection is working perfectly. I am not sure if this is because the mesh is being dynamically casted as a plane in the C\\+\\+ code and it is changing back and forth. \n\n![](data/bitbucket.org/repo/BgXLzgM/images/1449551901-image.png)\n![](data/bitbucket.org/repo/BgXLzgM/images/3148584092-image.png)\n", "markup": "markdown", "html": "<p>Another strange thing is that from some angles, it appears that the reflection is working perfectly. I am not sure if this is because the mesh is being dynamically casted as a plane in the C++ code and it is changing back and forth. </p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1449551901-image.png\" />\n<img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3148584092-image.png\" /></p>", "type": "rendered"}, "created_on": "2019-08-22T00:29:41.509884+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-22T00:29:41.519423+00:00", "type": "pullrequest_comment", "id": 113991172}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113993059.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113993059"}}, "parent": {"id": 113991172, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113991172.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113991172"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "In 1609:15440d5dffd5, I write contents to hardcoded path \u201c/home/tylerlum/reflection.png\u201d \\(change for your own use\\). It shows the reflection texture wrong sometimes.@{557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5} do you have any idea what this might be from? I have a sense it is how Ogre treats the mesh vs. the plane. I haven\u2019t been able to fix by switching the projective texturing ordering of coordinates. If that was the issue, I believe the refraction would also be wrong, but it appears to be okay.\n\n**Simulation**\n\n![](data/bitbucket.org/repo/BgXLzgM/images/1815000560-image.png)\n**Reflection Texture**\n\n![](data/bitbucket.org/repo/BgXLzgM/images/7130169-image.png)\n", "markup": "markdown", "html": "<p>In 1609:<a href=\"#!/osrf/vrx/commits/15440d5dffd5\" rel=\"nofollow\" class=\"ap-connect-link\">15440d5dffd5</a>, I write contents to hardcoded path \u201c/home/tylerlum/reflection.png\u201d (change for your own use). It shows the reflection texture wrong sometimes.<span class=\"ap-mention\" data-atlassian-id=\"557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5\">@Ian Chen</span> do you have any idea what this might be from? I have a sense it is how Ogre treats the mesh vs. the plane. I haven\u2019t been able to fix by switching the projective texturing ordering of coordinates. If that was the issue, I believe the refraction would also be wrong, but it appears to be okay.</p>\n<p><strong>Simulation</strong></p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1815000560-image.png\" />\n<strong>Reflection Texture</strong></p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/7130169-image.png\" /></p>", "type": "rendered"}, "created_on": "2019-08-22T01:04:01.793201+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-22T01:12:16.553599+00:00", "type": "pullrequest_comment", "id": 113993059}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113993808.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113993808"}}, "parent": {"id": 113993059, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113993059.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113993059"}}, "depth": 5}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "What it should look like \\(from 1606:[964c5fe71770](#!/osrf/vrx/commits/964c5fe71770)\\)\n\n![](data/bitbucket.org/repo/BgXLzgM/images/737260438-image.png)\n", "markup": "markdown", "html": "<p>What it should look like (from 1606:<a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/964c5fe71770\" rel=\"nofollow\">964c5fe71770</a>)</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/737260438-image.png\" /></p>", "type": "rendered"}, "created_on": "2019-08-22T01:17:50.882909+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-22T01:17:50.892540+00:00", "type": "pullrequest_comment", "id": 113993808}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113993864.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113993864"}}, "parent": {"id": 113993059, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113993059.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113993059"}}, "depth": 5}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "so I tried commenting out the `ocean_waves_below_visual` visual and enabled reflection in the shaders, and things are looking better:\n\n\u200c\n\n![](data/bitbucket.org/repo/BgXLzgM/images/969734235-vrx_reflection2.jpg)\n", "markup": "markdown", "html": "<p>so I tried commenting out the <code>ocean_waves_below_visual</code> visual and enabled reflection in the shaders, and things are looking better:</p>\n<p>\u200c</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/969734235-vrx_reflection2.jpg\" /></p>", "type": "rendered"}, "created_on": "2019-08-22T01:19:09.618719+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-08-22T01:19:09.630631+00:00", "type": "pullrequest_comment", "id": 113993864}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113993892.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113993892"}}, "parent": {"id": 113993864, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113993864.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113993864"}}, "depth": 6}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "I guess we don\u2019t want the ocean bottom  to be also doing reflections", "markup": "markdown", "html": "<p>I guess we don\u2019t want the ocean bottom  to be also doing reflections</p>", "type": "rendered"}, "created_on": "2019-08-22T01:19:50.222265+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-08-22T01:19:50.231074+00:00", "type": "pullrequest_comment", "id": 113993892}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113994199.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113994199"}}, "parent": {"id": 113993892, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113993892.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113993892"}}, "depth": 7}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "It worked for me as well. Is there any purpose for `ocean_waves_below_visual`? ", "markup": "markdown", "html": "<p>It worked for me as well. Is there any purpose for <code>ocean_waves_below_visual</code>? </p>", "type": "rendered"}, "created_on": "2019-08-22T01:26:09.277107+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-22T01:26:09.285275+00:00", "type": "pullrequest_comment", "id": 113994199}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113994897.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113994897"}}, "parent": {"id": 113994199, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113994199.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113994199"}}, "depth": 8}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "I\u2019m not actually sure, I have not looked closely at the existing ocean model in detail. Something to investigate", "markup": "markdown", "html": "<p>I\u2019m not actually sure, I have not looked closely at the existing ocean model in detail. Something to investigate</p>", "type": "rendered"}, "created_on": "2019-08-22T01:39:23.857797+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-08-22T01:39:23.867224+00:00", "type": "pullrequest_comment", "id": 113994897}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113993938.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113993938"}}, "parent": {"id": 113993864, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113993864.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113993864"}}, "depth": 6}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Oh yes, that must be it, it was reflecting the other direction with the other visual link", "markup": "markdown", "html": "<p>Oh yes, that must be it, it was reflecting the other direction with the other visual link</p>", "type": "rendered"}, "created_on": "2019-08-22T01:20:42.053311+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-22T01:20:42.064995+00:00", "type": "pullrequest_comment", "id": 113993938}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113996289.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113996289"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "In 1610:1000dada03b7, I was able to resolve some material issues and get the waves integrated with the reflections and refractions, the results are much better!\n\n![](data/bitbucket.org/repo/BgXLzgM/images/1574632031-image.png)\nRefraction included\n\n![](data/bitbucket.org/repo/BgXLzgM/images/345191923-image.png)\nRefraction excluded", "markup": "markdown", "html": "<p>In 1610:<a href=\"#!/osrf/vrx/commits/1000dada03b7\" rel=\"nofollow\" class=\"ap-connect-link\">1000dada03b7</a>, I was able to resolve some material issues and get the waves integrated with the reflections and refractions, the results are much better!</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1574632031-image.png\" />\nRefraction included</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/345191923-image.png\" />\nRefraction excluded</p>", "type": "rendered"}, "created_on": "2019-08-22T02:02:39.419897+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-22T20:26:58.984448+00:00", "type": "pullrequest_comment", "id": 113996289}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114000945.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114000945"}}, "parent": {"id": 113996289, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113996289.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113996289"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": ":astonished: :clap: ", "markup": "markdown", "html": "<p><img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f632.png\" alt=\"\ud83d\ude32\" title=\":astonished:\" data-emoji-short-name=\":astonished:\" /> <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f44f.png\" alt=\"\ud83d\udc4f\" title=\":clap:\" data-emoji-short-name=\":clap:\" /> </p>", "type": "rendered"}, "created_on": "2019-08-22T03:37:59.778760+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-08-22T03:37:59.788378+00:00", "type": "pullrequest_comment", "id": 114000945}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114003983.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114003983"}}, "parent": {"id": 113996289, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113996289.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113996289"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "nice, looks good!", "markup": "markdown", "html": "<p>nice, looks good!</p>", "type": "rendered"}, "created_on": "2019-08-22T04:31:41.099706+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-08-22T04:31:41.109161+00:00", "type": "pullrequest_comment", "id": 114003983}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114127564.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114127564"}}, "parent": {"id": 114003983, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114003983.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114003983"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "How hard is to make the effect even more subtle? It\u2019s really cool but we should apply it carefully based on how this effect is noticed in real images.", "markup": "markdown", "html": "<p>How hard is to make the effect even more subtle? It\u2019s really cool but we should apply it carefully based on how this effect is noticed in real images.</p>", "type": "rendered"}, "created_on": "2019-08-22T16:48:27.151509+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-08-22T16:49:04.613092+00:00", "type": "pullrequest_comment", "id": 114127564}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114148157.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114148157"}}, "parent": {"id": 114127564, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114127564.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114127564"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "This is very doable. I just have to change the ratio of reflectionColour and waterColour to show less reflection. I will make that change.", "markup": "markdown", "html": "<p>This is very doable. I just have to change the ratio of reflectionColour and waterColour to show less reflection. I will make that change.</p>", "type": "rendered"}, "created_on": "2019-08-22T19:45:24.899354+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-22T19:45:24.915740+00:00", "type": "pullrequest_comment", "id": 114148157}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114148515.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114148515"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "TODOs:\n\n1. Investigate why `cean_waves_below_visual` is there. Either remove it or keep it and only reflection/refraction setup once\n2. Change reflection/water ratio for more subtle reflections\n3. Clean unnecessary parts of code\n4. Check how water looks from camera \\(rviz/image viewer\\)\n\n", "markup": "markdown", "html": "<p>TODOs:</p>\n<ol>\n<li>Investigate why <code>cean_waves_below_visual</code> is there. Either remove it or keep it and only reflection/refraction setup once</li>\n<li>Change reflection/water ratio for more subtle reflections</li>\n<li>Clean unnecessary parts of code</li>\n<li>Check how water looks from camera (rviz/image viewer)</li>\n</ol>", "type": "rendered"}, "created_on": "2019-08-22T19:48:29.440093+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-22T19:52:56.426921+00:00", "type": "pullrequest_comment", "id": 114148515}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114151361.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114151361"}}, "parent": {"id": 114148515, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114148515.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114148515"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "For \\(1\\), this shows the difference between default and the newest reflection commit. \n\n**New \\(shouldn\u2019t be like this\\)**\n\n![](data/bitbucket.org/repo/BgXLzgM/images/3505622058-image_1.png)\n**Old \\(should be like this\\)**\n\n![](data/bitbucket.org/repo/BgXLzgM/images/2435987399-image.png)\n", "markup": "markdown", "html": "<p>For (1), this shows the difference between default and the newest reflection commit. </p>\n<p><strong>New (shouldn\u2019t be like this)</strong></p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3505622058-image_1.png\" />\n<strong>Old (should be like this)</strong></p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/2435987399-image.png\" /></p>", "type": "rendered"}, "created_on": "2019-08-22T20:14:35.311282+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-22T20:14:35.322850+00:00", "type": "pullrequest_comment", "id": 114151361}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114151987.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114151987"}}, "parent": {"id": 114151361, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114151361.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114151361"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "\\(4\\) The camera image shows this. The simulation looks completely fine, but the camera must not be finding the texture. It might be related to how we define the camera used for rendering to texture. This must be resolved\n\n![](data/bitbucket.org/repo/BgXLzgM/images/3227666059-image.png)\n", "markup": "markdown", "html": "<p>(4) The camera image shows this. The simulation looks completely fine, but the camera must not be finding the texture. It might be related to how we define the camera used for rendering to texture. This must be resolved</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3227666059-image.png\" /></p>", "type": "rendered"}, "created_on": "2019-08-22T20:20:16.827665+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-22T20:20:16.839320+00:00", "type": "pullrequest_comment", "id": 114151987}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114159470.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114159470"}}, "parent": {"id": 114151987, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114151987.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114151987"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "yeah in the \\``etupReflectionRefraction ` function, it's hardcoded to apply the effect to the user camera only. I originally added that check to simplify the problem. To get it working for camera sensors, you may have to track all cameras in the scene and create a render texture for each of them since each camera sees the reflection differently.  You'll then need to update the ocean material\u2019s textures on every preRenderUpdate \\(e.g. `reflectTex->setTexture(reflectionTextureForCameraX)`\\) to make sure the ocean is rendered using the right reflection/refraction texture for that the camera associated with the current render target.\n\nIt\u2019s a stretch goal. I suggest focusing on 1-3 for now.", "markup": "markdown", "html": "<p>yeah in the `<code>etupReflectionRefraction</code> function, it's hardcoded to apply the effect to the user camera only. I originally added that check to simplify the problem. To get it working for camera sensors, you may have to track all cameras in the scene and create a render texture for each of them since each camera sees the reflection differently.  You'll then need to update the ocean material\u2019s textures on every preRenderUpdate (e.g. <code>reflectTex-&gt;setTexture(reflectionTextureForCameraX)</code>) to make sure the ocean is rendered using the right reflection/refraction texture for that the camera associated with the current render target.</p>\n<p>It\u2019s a stretch goal. I suggest focusing on 1-3 for now.</p>", "type": "rendered"}, "created_on": "2019-08-22T21:34:30.795781+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-08-22T21:34:30.808858+00:00", "type": "pullrequest_comment", "id": 114159470}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114168725.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114168725"}}, "parent": {"id": 114159470, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114159470.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114159470"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "I see. Thank you for the information. I am finished up 1-3 now, so I would like to try to work on this and see if it is doable. I understand how I will get the camera and make the textures. My only question is how do I know which texture to set it to. Eg. If i have 2 cameras, there would be `reflectTex->setTexture(reflectionTextureForCamera0)` and `reflectTex->setTexture(reflectionTextureForCamera1)`. Is there a way for me to know which one to set the texture to? ", "markup": "markdown", "html": "<p>I see. Thank you for the information. I am finished up 1-3 now, so I would like to try to work on this and see if it is doable. I understand how I will get the camera and make the textures. My only question is how do I know which texture to set it to. Eg. If i have 2 cameras, there would be <code>reflectTex-&gt;setTexture(reflectionTextureForCamera0)</code> and <code>reflectTex-&gt;setTexture(reflectionTextureForCamera1)</code>. Is there a way for me to know which one to set the texture to? </p>", "type": "rendered"}, "created_on": "2019-08-23T00:06:43.258728+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-23T00:06:43.268269+00:00", "type": "pullrequest_comment", "id": 114168725}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114168902.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114168902"}}, "parent": {"id": 114168725, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114168725.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114168725"}}, "depth": 5}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "I have not tested but in the `pre/postRenderTargetUpdate` function, you could do something like `if (rte.source == this->data->reflectionRt0)`", "markup": "markdown", "html": "<p>I have not tested but in the <code>pre/postRenderTargetUpdate</code> function, you could do something like <code>if (rte.source == this-&gt;data-&gt;reflectionRt0)</code></p>", "type": "rendered"}, "created_on": "2019-08-23T00:10:35.686943+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-08-23T00:10:35.696527+00:00", "type": "pullrequest_comment", "id": 114168902}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114168991.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114168991"}}, "parent": {"id": 114168902, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114168902.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114168902"}}, "depth": 6}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Oh I see, I will try this out. I really hope I can get this part working", "markup": "markdown", "html": "<p>Oh I see, I will try this out. I really hope I can get this part working</p>", "type": "rendered"}, "created_on": "2019-08-23T00:12:29.739391+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-23T00:12:29.750654+00:00", "type": "pullrequest_comment", "id": 114168991}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114156147.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114156147"}}, "parent": {"id": 114148515, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114148515.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114148515"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "In 1611:173ef317af11, more subtle effects\n\n![](data/bitbucket.org/repo/BgXLzgM/images/3211707776-image.png)\n![](data/bitbucket.org/repo/BgXLzgM/images/1336140944-image.png)\n![](data/bitbucket.org/repo/BgXLzgM/images/628494674-image.png)\n", "markup": "markdown", "html": "<p>In 1611:<a href=\"#!/osrf/vrx/commits/173ef317af11\" rel=\"nofollow\" class=\"ap-connect-link\">173ef317af11</a>, more subtle effects</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3211707776-image.png\" />\n<img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1336140944-image.png\" />\n<img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/628494674-image.png\" /></p>", "type": "rendered"}, "created_on": "2019-08-22T21:00:34.263054+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-22T21:00:34.276013+00:00", "type": "pullrequest_comment", "id": 114156147}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114168461.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114168461"}}, "parent": {"id": 114156147, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114156147.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114156147"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "\\(1\\) In changeset:   1623:189614cd2e27, I Added back ocean\\_waves\\_below\\_visual, without Visual Plugin, working as expected.\n\n![](data/bitbucket.org/repo/BgXLzgM/images/2643693318-image.png)\n", "markup": "markdown", "html": "<p>(1) In changeset:   1623:<a href=\"#!/osrf/vrx/commits/189614cd2e27\" rel=\"nofollow\" class=\"ap-connect-link\">189614cd2e27</a>, I Added back ocean_waves_below_visual, without Visual Plugin, working as expected.</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/2643693318-image.png\" /></p>", "type": "rendered"}, "created_on": "2019-08-23T00:01:09.153793+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-23T00:01:09.163319+00:00", "type": "pullrequest_comment", "id": 114168461}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114171843.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114171843"}}, "parent": {"id": 114168461, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114168461.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114168461"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "in 1624:c26560f70d1f, needed to offset visual below slightly so that there would not be cutting in/out of the visual. ", "markup": "markdown", "html": "<p>in 1624:<a href=\"#!/osrf/vrx/commits/c26560f70d1f\" rel=\"nofollow\" class=\"ap-connect-link\">c26560f70d1f</a>, needed to offset visual below slightly so that there would not be cutting in/out of the visual. </p>", "type": "rendered"}, "created_on": "2019-08-23T01:15:05.534197+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-23T01:15:05.543503+00:00", "type": "pullrequest_comment", "id": 114171843}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114165596.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114165596"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "This image is from default. Is there a reason why the propellers aren\u2019t showing? They show up when you view from below, but can\u2019t be seen here.\n\n![](data/bitbucket.org/repo/BgXLzgM/images/1698495362-image_2.png)\n\u200c\n\n![](data/bitbucket.org/repo/BgXLzgM/images/3339592680-image.png)\n\u200c\n\nChecking older commits like hg update ebce412, nothing is shown at all. I just find it a bit strange that just propellers are not being shown. They are there \\(eg. when I turn on refraction to be high, I see them clearly\\), but not seen.\n\n![](data/bitbucket.org/repo/BgXLzgM/images/2092780129-image_3.png)\n\u200c\n\n@{557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1} do you have any idea where this is from? I looked at a very old commit and it used to now show anything below the water \\(", "markup": "markdown", "html": "<p>This image is from default. Is there a reason why the propellers aren\u2019t showing? They show up when you view from below, but can\u2019t be seen here.</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1698495362-image_2.png\" />\n\u200c</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3339592680-image.png\" />\n\u200c</p>\n<p>Checking older commits like hg update <a href=\"#!/osrf/vrx/commits/ebce412\" rel=\"nofollow\" class=\"ap-connect-link\">ebce412</a>, nothing is shown at all. I just find it a bit strange that just propellers are not being shown. They are there (eg. when I turn on refraction to be high, I see them clearly), but not seen.</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/2092780129-image_3.png\" />\n\u200c</p>\n<p><span class=\"ap-mention\" data-atlassian-id=\"557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1\">@Brian Bingham</span> do you have any idea where this is from? I looked at a very old commit and it used to now show anything below the water (</p>", "type": "rendered"}, "created_on": "2019-08-22T23:05:33.770916+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-22T23:09:09.165643+00:00", "type": "pullrequest_comment", "id": 114165596}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114169805.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114169805"}}, "parent": {"id": 114165596, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114165596.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114165596"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "About the missing propellers, it's a common problem with semi-transparent objects \\(at least in ogre\\). Semi-transparent objects are usually drawn after opaque objects. In this case, the engine does not know that the ocean is semi-transparent since we're setting the alpha value ourselves in the shaders. To workaround this, you can manually set its render queue, something like `this->data->planeEntity->setRenderQueueGroup(this->data->planeEntity->getRenderQueueGroup()+1);`", "markup": "markdown", "html": "<p>About the missing propellers, it's a common problem with semi-transparent objects (at least in ogre). Semi-transparent objects are usually drawn after opaque objects. In this case, the engine does not know that the ocean is semi-transparent since we're setting the alpha value ourselves in the shaders. To workaround this, you can manually set its render queue, something like <code>this-&gt;data-&gt;planeEntity-&gt;setRenderQueueGroup(this-&gt;data-&gt;planeEntity-&gt;getRenderQueueGroup()+1);</code></p>", "type": "rendered"}, "created_on": "2019-08-23T00:30:11.582400+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-08-23T00:31:13.517992+00:00", "type": "pullrequest_comment", "id": 114169805}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114170974.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114170974"}}, "parent": {"id": 114169805, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114169805.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114169805"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Great I will try this out.", "markup": "markdown", "html": "<p>Great I will try this out.</p>", "type": "rendered"}, "created_on": "2019-08-23T00:55:00.241236+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-23T00:55:00.249420+00:00", "type": "pullrequest_comment", "id": 114170974}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114171806.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114171806"}}, "parent": {"id": 114170974, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114170974.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114170974"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "It worked perfectly, fixed 1625:e2534638329c", "markup": "markdown", "html": "<p>It worked perfectly, fixed 1625:<a href=\"#!/osrf/vrx/commits/e2534638329c\" rel=\"nofollow\" class=\"ap-connect-link\">e2534638329c</a></p>", "type": "rendered"}, "created_on": "2019-08-23T01:14:16.754590+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-23T01:14:16.764121+00:00", "type": "pullrequest_comment", "id": 114171806}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114166374.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114166374"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "I have a question about something in the C\\+\\+ code. In numerous sections I see something like\n\n```\n#if 0\n      this->data->visual->SetMaterialShaderParam(\n        \"time\", shaderType, std::to_string(simTime));\n#else\n      auto simTime = this->data->visual->GetScene()->SimTime();\n      rendering::SetMaterialShaderParam(*this->data->visual,\n        \"time\", \"vertex\",\n        std::to_string(static_cast<float>(simTime.Double())));\n#endif\n```\n\nI understand there are if/else checks depending on GZ version, but can I simply remove these ones that always do the else statement?", "markup": "markdown", "html": "<p>I have a question about something in the C++ code. In numerous sections I see something like</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">#</span><span class=\"nn\">if</span> <span class=\"nt\">0</span>\n      <span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">visual-</span><span class=\"o\">&gt;</span><span class=\"nt\">SetMaterialShaderParam</span><span class=\"o\">(</span>\n        <span class=\"s2\">&quot;time&quot;</span><span class=\"o\">,</span> <span class=\"nt\">shaderType</span><span class=\"o\">,</span> <span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">to_string</span><span class=\"o\">(</span><span class=\"nt\">simTime</span><span class=\"o\">));</span>\n<span class=\"p\">#</span><span class=\"nn\">else</span>\n      <span class=\"nt\">auto</span> <span class=\"nt\">simTime</span> <span class=\"o\">=</span> <span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">visual-</span><span class=\"o\">&gt;</span><span class=\"nt\">GetScene</span><span class=\"o\">()</span><span class=\"nt\">-</span><span class=\"o\">&gt;</span><span class=\"nt\">SimTime</span><span class=\"o\">();</span>\n      <span class=\"nt\">rendering</span><span class=\"p\">::</span><span class=\"nd\">SetMaterialShaderParam</span><span class=\"o\">(*</span><span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">visual</span><span class=\"o\">,</span>\n        <span class=\"s2\">&quot;time&quot;</span><span class=\"o\">,</span> <span class=\"s2\">&quot;vertex&quot;</span><span class=\"o\">,</span>\n        <span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">to_string</span><span class=\"o\">(</span><span class=\"nt\">static_cast</span><span class=\"o\">&lt;</span><span class=\"nt\">float</span><span class=\"o\">&gt;(</span><span class=\"nt\">simTime</span><span class=\"p\">.</span><span class=\"nc\">Double</span><span class=\"o\">())));</span>\n<span class=\"p\">#</span><span class=\"nn\">endif</span>\n</pre></div>\n\n\n<p>I understand there are if/else checks depending on GZ version, but can I simply remove these ones that always do the else statement?</p>", "type": "rendered"}, "created_on": "2019-08-22T23:21:37.046236+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-22T23:23:38.656505+00:00", "type": "pullrequest_comment", "id": 114166374}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114168824.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114168824"}}, "parent": {"id": 114166374, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114166374.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114166374"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "I see that the `SetMaterialShaderParam` function defined [Gazebo.cc](#!/osrf/vrx/src/189614cd2e275e059320f68578adbf7859729139/wave_gazebo_plugins/src/Gazebo.cc#lines-33) in this repo, and it looks just like a copy of the one in [Visual.cc](https://bitbucket.org/osrf/gazebo/src/2b59492f96fcf121b33f290fd5cf0b70b42f4e22/gazebo/rendering/Visual.cc#lines-1128). I wonder if the original author of the plugin had problem using the version in gazebo and had to duplicate here. The code looks very similar to me though.", "markup": "markdown", "html": "<p>I see that the <code>SetMaterialShaderParam</code> function defined <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/src/189614cd2e275e059320f68578adbf7859729139/wave_gazebo_plugins/src/Gazebo.cc#lines-33\" rel=\"nofollow\">Gazebo.cc</a> in this repo, and it looks just like a copy of the one in <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/2b59492f96fcf121b33f290fd5cf0b70b42f4e22/gazebo/rendering/Visual.cc#lines-1128\" rel=\"nofollow\">Visual.cc</a>. I wonder if the original author of the plugin had problem using the version in gazebo and had to duplicate here. The code looks very similar to me though.</p>", "type": "rendered"}, "created_on": "2019-08-23T00:08:51.983643+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-08-23T00:09:00.235957+00:00", "type": "pullrequest_comment", "id": 114168824}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114168958.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114168958"}}, "parent": {"id": 114168824, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114168824.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114168824"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "In the Gazbo.hh file, it says:\n\n```\n/// \\file Gazebo.hh\n/// \\brief Support for methods not available in legacy versions of Gazebo.\n```\n\nthis makes sense, but I just don\u2019t understand what #if 0 is for. I believe this code is not even compiled, can I remove it or is it useful?", "markup": "markdown", "html": "<p>In the Gazbo.hh file, it says:</p>\n<div class=\"codehilite\"><pre><span></span>/// \\file Gazebo.hh\n/// \\brief Support for methods not available in legacy versions of Gazebo.\n</pre></div>\n\n\n<p>this makes sense, but I just don\u2019t understand what #if 0 is for. I believe this code is not even compiled, can I remove it or is it useful?</p>", "type": "rendered"}, "created_on": "2019-08-23T00:11:53.328093+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-23T00:11:53.336717+00:00", "type": "pullrequest_comment", "id": 114168958}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114169902.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114169902"}}, "parent": {"id": 114168958, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114168958.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114168958"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "this maybe a question for @{557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd} . Does vrx need to support legacy versions of Gazebo?", "markup": "markdown", "html": "<p>this maybe a question for <span class=\"ap-mention\" data-atlassian-id=\"557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd\">@Carlos Ag\u00fcero</span> . Does vrx need to support legacy versions of Gazebo?</p>", "type": "rendered"}, "created_on": "2019-08-23T00:32:18.833686+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-08-23T00:32:18.845728+00:00", "type": "pullrequest_comment", "id": 114169902}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114174729.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114174729"}}, "parent": {"id": 114169902, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114169902.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114169902"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "We support two combinations:\n\n* Gazebo 9 \\+ ROS Melodic\n* Gazebo 7 \\+ ROS Kinectic\n\n", "markup": "markdown", "html": "<p>We support two combinations:</p>\n<ul>\n<li>Gazebo 9 + ROS Melodic</li>\n<li>Gazebo 7 + ROS Kinectic</li>\n</ul>", "type": "rendered"}, "created_on": "2019-08-23T02:10:00.288305+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-08-23T02:10:00.297194+00:00", "type": "pullrequest_comment", "id": 114174729}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114168155.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114168155"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "The reflection and refraction amount are settable in the model.xacro file like so:\n\n```\n    <plugin name=\"ocean_waves_visual_plugin\" filename=\"libWavefieldVisualPlugin.so\">\n      <shallowRefractRatio>0.2</shallowRefractRatio>\n      <envReflectRatio>0.2</envReflectRatio>\n      <wave>\n```\n\nDocumented in the header:\n\n```\n  /// 2. <shallowRefractRatio> (double, default: 0.2)\n  ///   Ratio between shallow water color and refraction color to use\n  ///   In [0, 1], where 0 is no refraction and 1 is maximum refraction\n  ///\n  /// 3. <envReflectRatio> (double, default: 0.2)\n  ///    Ratio between environment color and reflection color to use\n  ///    In [0, 1], where 0 is no reflection and 1 is maximum reflection\n```", "markup": "markdown", "html": "<p>The reflection and refraction amount are settable in the model.xacro file like so:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&quot;ocean_waves_visual_plugin&quot;</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;libWavefieldVisualPlugin.so&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;shallowRefractRatio&gt;</span>0.2<span class=\"nt\">&lt;/shallowRefractRatio&gt;</span>\n      <span class=\"nt\">&lt;envReflectRatio&gt;</span>0.2<span class=\"nt\">&lt;/envReflectRatio&gt;</span>\n      <span class=\"nt\">&lt;wave&gt;</span>\n</pre></div>\n\n\n<p>Documented in the header:</p>\n<div class=\"codehilite\"><pre><span></span>  /// 2. &lt;shallowRefractRatio&gt; (double, default: 0.2)\n  ///   Ratio between shallow water color and refraction color to use\n  ///   In [0, 1], where 0 is no refraction and 1 is maximum refraction\n  ///\n  /// 3. &lt;envReflectRatio&gt; (double, default: 0.2)\n  ///    Ratio between environment color and reflection color to use\n  ///    In [0, 1], where 0 is no reflection and 1 is maximum reflection\n</pre></div>", "type": "rendered"}, "created_on": "2019-08-22T23:55:35.268318+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-22T23:55:35.275716+00:00", "type": "pullrequest_comment", "id": 114168155}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114168868.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114168868"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Summary of current status: \n\n* TODOs above 1-3 are complete\n\n    * Only remaining would be to make the reflection more dependent on amount of waves, which could be done but is more optional. Easier to just tune the current parameters\n    \n* TODO 4 is a big task that I would like to try to finish \\(make the reflections work for camera sensors\n* Question above about propellers not shown\n* Question above about `#if 0` code in the plugin\n\n", "markup": "markdown", "html": "<p>Summary of current status: </p>\n<ul>\n<li>\n<p>TODOs above 1-3 are complete</p>\n<ul>\n<li>Only remaining would be to make the reflection more dependent on amount of waves, which could be done but is more optional. Easier to just tune the current parameters</li>\n</ul>\n</li>\n<li>\n<p>TODO 4 is a big task that I would like to try to finish (make the reflections work for camera sensors</p>\n</li>\n<li>Question above about propellers not shown</li>\n<li>Question above about <code>#if 0</code> code in the plugin</li>\n</ul>", "type": "rendered"}, "created_on": "2019-08-23T00:09:50.690755+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-23T00:09:50.697766+00:00", "type": "pullrequest_comment", "id": 114168868}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114170957.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114170957"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "@{557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5} I am getting started on getting the reflections to work on cameras sensors. I am trying to find a way to get a list of the sensors, but I can\u2019t find it. What i have tried:\n\nthis->data->visual->GetScene\\(\\)->CameraCount\\(\\)\n\nthis->data->visual->GetScene\\(\\)->UserCameraCount\\(\\)\n\n\u200c\n\nthis->data->visual->GetNthAncestor\\(0\\)->GetScene\\(\\)->CameraCount\\(\\)\n\nthis->data->visual->GetNthAncestor\\(0\\)->GetScene\\(\\)->UserCameraCount\\(\\)\n\n\u200c\n\nthis->data->visual->GetRootVisual\\(\\)->GetScene\\(\\)->->CameraCount\\(\\)\n\nthis->data->visual->GetRootVisual\\(\\)->GetScene\\(\\)->UserCameraCount\\(\\)\n\n\u200c\n\nIt always outputs 0 for cameras and 1 for user cameras, even when there are camera sensors existing on the WAM-V. Is there a way to access a list of sensors or a list of models in gazebo?", "markup": "markdown", "html": "<p><span class=\"ap-mention\" data-atlassian-id=\"557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5\">@Ian Chen</span> I am getting started on getting the reflections to work on cameras sensors. I am trying to find a way to get a list of the sensors, but I can\u2019t find it. What i have tried:</p>\n<p>this-&gt;data-&gt;visual-&gt;GetScene()-&gt;CameraCount()</p>\n<p>this-&gt;data-&gt;visual-&gt;GetScene()-&gt;UserCameraCount()</p>\n<p>\u200c</p>\n<p>this-&gt;data-&gt;visual-&gt;GetNthAncestor(0)-&gt;GetScene()-&gt;CameraCount()</p>\n<p>this-&gt;data-&gt;visual-&gt;GetNthAncestor(0)-&gt;GetScene()-&gt;UserCameraCount()</p>\n<p>\u200c</p>\n<p>this-&gt;data-&gt;visual-&gt;GetRootVisual()-&gt;GetScene()-&gt;-&gt;CameraCount()</p>\n<p>this-&gt;data-&gt;visual-&gt;GetRootVisual()-&gt;GetScene()-&gt;UserCameraCount()</p>\n<p>\u200c</p>\n<p>It always outputs 0 for cameras and 1 for user cameras, even when there are camera sensors existing on the WAM-V. Is there a way to access a list of sensors or a list of models in gazebo?</p>", "type": "rendered"}, "created_on": "2019-08-23T00:54:44.854442+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-23T00:54:44.866645+00:00", "type": "pullrequest_comment", "id": 114170957}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114172268.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114172268"}}, "parent": {"id": 114170957, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114170957.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114170957"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "I believe this can be done with the gazebo sensor manager. [https://bitbucket.org/osrf/gazebo/src/default/gazebo/sensors/SensorManager.hh](https://bitbucket.org/osrf/gazebo/src/default/gazebo/sensors/SensorManager.hh) I will try this out later tonight", "markup": "markdown", "html": "<p>I believe this can be done with the gazebo sensor manager. <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/default/gazebo/sensors/SensorManager.hh\" rel=\"nofollow\">https://bitbucket.org/osrf/gazebo/src/default/gazebo/sensors/SensorManager.hh</a> I will try this out later tonight</p>", "type": "rendered"}, "created_on": "2019-08-23T01:23:53.932932+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-23T01:24:18.928512+00:00", "type": "pullrequest_comment", "id": 114172268}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114188344.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114188344"}}, "parent": {"id": 114172268, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114172268.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114172268"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "I tried out using the SensorManager, using\n\n`gazebo::sensors::SensorManager::Instance()` and trying out these functions with vrx.launch \\(has sensors\\)\n\n```\n      /// \\brief Get all the sensor types\n      /// \\param[out] All the sensor types.\n      public: void GetSensorTypes(std::vector<std::string> &_types)\n\n      /// \\return Vector of all the sensors.\n      public: Sensor_V GetSensors() const;\n\n      /// \\brief Get whether there's at least one sensor container running.\n      /// \\return True if running.\n      public: bool Running() const;\n```\n\nThey showed 0 sensors and not running. I ran that check in the OnRender function checking continuously, perhaps I need to init or there is a different way for me to access the sensors.\n\n\u200c\n\nI also tried adding `gazebo::sensors::SensorManager::Instance()::Init()` in Load\\(\\) with no change.", "markup": "markdown", "html": "<p>I tried out using the SensorManager, using</p>\n<p><code>gazebo::sensors::SensorManager::Instance()</code> and trying out these functions with vrx.launch (has sensors)</p>\n<div class=\"codehilite\"><pre><span></span>      <span class=\"o\">///</span> <span class=\"err\">\\</span><span class=\"nt\">brief</span> <span class=\"nt\">Get</span> <span class=\"nt\">all</span> <span class=\"nt\">the</span> <span class=\"nt\">sensor</span> <span class=\"nt\">types</span>\n      <span class=\"o\">///</span> <span class=\"err\">\\</span><span class=\"nt\">param</span><span class=\"cp\">[</span><span class=\"nx\">out</span><span class=\"cp\">]</span> <span class=\"nt\">All</span> <span class=\"nt\">the</span> <span class=\"nt\">sensor</span> <span class=\"nt\">types</span><span class=\"o\">.</span>\n      <span class=\"nt\">public</span><span class=\"o\">:</span> <span class=\"nt\">void</span> <span class=\"nt\">GetSensorTypes</span><span class=\"o\">(</span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">vector</span><span class=\"o\">&lt;</span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">string</span><span class=\"o\">&gt;</span> <span class=\"o\">&amp;</span><span class=\"nt\">_types</span><span class=\"o\">)</span>\n\n      <span class=\"o\">///</span> <span class=\"err\">\\</span><span class=\"nt\">return</span> <span class=\"nt\">Vector</span> <span class=\"nt\">of</span> <span class=\"nt\">all</span> <span class=\"nt\">the</span> <span class=\"nt\">sensors</span><span class=\"o\">.</span>\n      <span class=\"nt\">public</span><span class=\"o\">:</span> <span class=\"nt\">Sensor_V</span> <span class=\"nt\">GetSensors</span><span class=\"o\">()</span> <span class=\"nt\">const</span><span class=\"o\">;</span>\n\n      <span class=\"o\">///</span> <span class=\"err\">\\</span><span class=\"nt\">brief</span> <span class=\"nt\">Get</span> <span class=\"nt\">whether</span> <span class=\"nt\">there</span><span class=\"err\">&#39;</span><span class=\"nt\">s</span> <span class=\"nt\">at</span> <span class=\"nt\">least</span> <span class=\"nt\">one</span> <span class=\"nt\">sensor</span> <span class=\"nt\">container</span> <span class=\"nt\">running</span><span class=\"o\">.</span>\n      <span class=\"o\">///</span> <span class=\"err\">\\</span><span class=\"nt\">return</span> <span class=\"nt\">True</span> <span class=\"nt\">if</span> <span class=\"nt\">running</span><span class=\"o\">.</span>\n      <span class=\"nt\">public</span><span class=\"o\">:</span> <span class=\"nt\">bool</span> <span class=\"nt\">Running</span><span class=\"o\">()</span> <span class=\"nt\">const</span><span class=\"o\">;</span>\n</pre></div>\n\n\n<p>They showed 0 sensors and not running. I ran that check in the OnRender function checking continuously, perhaps I need to init or there is a different way for me to access the sensors.</p>\n<p>\u200c</p>\n<p>I also tried adding <code>gazebo::sensors::SensorManager::Instance()::Init()</code> in Load() with no change.</p>", "type": "rendered"}, "created_on": "2019-08-23T06:15:06.233055+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-23T06:19:12.856643+00:00", "type": "pullrequest_comment", "id": 114188344}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114189074.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114189074"}}, "parent": {"id": 114188344, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114188344.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114188344"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Tried [https://bitbucket.org/osrf/gazebo/src/default/gazebo/sensors/SensorsIface.hh](https://bitbucket.org/osrf/gazebo/src/default/gazebo/sensors/SensorsIface.hh), but does the same thing. Actually uses the same source code.", "markup": "markdown", "html": "<p>Tried <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/default/gazebo/sensors/SensorsIface.hh\" rel=\"nofollow\">https://bitbucket.org/osrf/gazebo/src/default/gazebo/sensors/SensorsIface.hh</a>, but does the same thing. Actually uses the same source code.</p>", "type": "rendered"}, "created_on": "2019-08-23T06:21:45.216747+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-23T06:21:45.227893+00:00", "type": "pullrequest_comment", "id": 114189074}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114204045.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114204045"}}, "parent": {"id": 114189074, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114189074.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114189074"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Tried getting the world to get the models, then get the wamv, then get the correct link. However, I can\u2019t even get the world\n\n```\n    auto world = physics::get_world(); // or auto world = physics::get_world(\"robotx_example_course); \n    if (world) { gzerr << \"FOUND w\" << std::endl; }\n    else { gzerr << \"NOT FOUND w\" << std::endl; }\n    gzerr << world->ModelCount() << std::endl;\n    \n[Err] [PhysicsIface.cc:69] no worlds\n[Err] [PhysicsIface.cc:82] Unable to find world by name in physics::get_world[]\n[Err] [PhysicsIface.cc:84] EXCEPTION: Unable to find world by name in physics::get_world(world_name)\n```\n\n[https://bitbucket.org/osrf/gazebo/src/gazebo9\\_9.10.0/gazebo/physics/PhysicsIface.cc](https://bitbucket.org/osrf/gazebo/src/gazebo9_9.10.0/gazebo/physics/PhysicsIface.cc)", "markup": "markdown", "html": "<p>Tried getting the world to get the models, then get the wamv, then get the correct link. However, I can\u2019t even get the world</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"nt\">auto</span> <span class=\"nt\">world</span> <span class=\"o\">=</span> <span class=\"nt\">physics</span><span class=\"p\">::</span><span class=\"nd\">get_world</span><span class=\"o\">();</span> <span class=\"o\">//</span> <span class=\"nt\">or</span> <span class=\"nt\">auto</span> <span class=\"nt\">world</span> <span class=\"o\">=</span> <span class=\"nt\">physics</span><span class=\"p\">::</span><span class=\"nd\">get_world</span><span class=\"o\">(</span><span class=\"s2\">&quot;robotx_example_course); </span>\n<span class=\"s2\">    if (world) { gzerr &lt;&lt; &quot;</span><span class=\"nt\">FOUND</span> <span class=\"nt\">w</span><span class=\"s2\">&quot; &lt;&lt; std::endl; }</span>\n<span class=\"s2\">    else { gzerr &lt;&lt; &quot;</span><span class=\"nt\">NOT</span> <span class=\"nt\">FOUND</span> <span class=\"nt\">w</span><span class=\"err\">&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">endl</span><span class=\"o\">;</span> <span class=\"err\">}</span>\n    <span class=\"nt\">gzerr</span> <span class=\"o\">&lt;&lt;</span> <span class=\"nt\">world-</span><span class=\"o\">&gt;</span><span class=\"nt\">ModelCount</span><span class=\"o\">()</span> <span class=\"o\">&lt;&lt;</span> <span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">endl</span><span class=\"o\">;</span>\n\n<span class=\"cp\">[</span><span class=\"nx\">Err</span><span class=\"cp\">]</span> <span class=\"cp\">[</span><span class=\"nx\">PhysicsIface.cc</span><span class=\"p\">:</span><span class=\"mi\">69</span><span class=\"cp\">]</span> <span class=\"nt\">no</span> <span class=\"nt\">worlds</span>\n<span class=\"cp\">[</span><span class=\"nx\">Err</span><span class=\"cp\">]</span> <span class=\"cp\">[</span><span class=\"nx\">PhysicsIface.cc</span><span class=\"p\">:</span><span class=\"mi\">82</span><span class=\"cp\">]</span> <span class=\"nt\">Unable</span> <span class=\"nt\">to</span> <span class=\"nt\">find</span> <span class=\"nt\">world</span> <span class=\"nt\">by</span> <span class=\"nt\">name</span> <span class=\"nt\">in</span> <span class=\"nt\">physics</span><span class=\"p\">::</span><span class=\"nd\">get_world</span><span class=\"cp\">[]</span>\n<span class=\"cp\">[</span><span class=\"nx\">Err</span><span class=\"cp\">]</span> <span class=\"cp\">[</span><span class=\"nx\">PhysicsIface.cc</span><span class=\"p\">:</span><span class=\"mi\">84</span><span class=\"cp\">]</span> <span class=\"nt\">EXCEPTION</span><span class=\"o\">:</span> <span class=\"nt\">Unable</span> <span class=\"nt\">to</span> <span class=\"nt\">find</span> <span class=\"nt\">world</span> <span class=\"nt\">by</span> <span class=\"nt\">name</span> <span class=\"nt\">in</span> <span class=\"nt\">physics</span><span class=\"p\">::</span><span class=\"nd\">get_world</span><span class=\"o\">(</span><span class=\"nt\">world_name</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<p><a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/gazebo9_9.10.0/gazebo/physics/PhysicsIface.cc\" rel=\"nofollow\">https://bitbucket.org/osrf/gazebo/src/gazebo9_9.10.0/gazebo/physics/PhysicsIface.cc</a></p>", "type": "rendered"}, "created_on": "2019-08-23T08:09:37.587326+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-23T08:09:37.604104+00:00", "type": "pullrequest_comment", "id": 114204045}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114291886.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114291886"}}, "parent": {"id": 114172268, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114172268.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114172268"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "It does not look like in this example world the WAMV is equipped with a camera sensor? After commenting out the check for user camera and Scene's `EnableVisualizations()` \\(so that the plugin can be loaded on the server side where camera sensors are simulated\\), I inserted a camera sensor myself \\(which forces the scene to be created on the server side\\) and saw that the visual plugin is then loaded and `this->data->visual->GetScene()->CameraCount()` returns 1.\n\nI also suggest checking for new cameras on preRender callback so that so we can generate reflection/refraction for any new cameras added to the scene.", "markup": "markdown", "html": "<p>It does not look like in this example world the WAMV is equipped with a camera sensor? After commenting out the check for user camera and Scene's <code>EnableVisualizations()</code> (so that the plugin can be loaded on the server side where camera sensors are simulated), I inserted a camera sensor myself (which forces the scene to be created on the server side) and saw that the visual plugin is then loaded and <code>this-&gt;data-&gt;visual-&gt;GetScene()-&gt;CameraCount()</code> returns 1.</p>\n<p>I also suggest checking for new cameras on preRender callback so that so we can generate reflection/refraction for any new cameras added to the scene.</p>", "type": "rendered"}, "created_on": "2019-08-23T17:52:13.912059+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-08-23T17:53:24.674032+00:00", "type": "pullrequest_comment", "id": 114291886}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114295906.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114295906"}}, "parent": {"id": 114291886, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114291886.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114291886"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Oh i see, when I put in `gzerr << this->data->visual->GetScene()->CameraCount() << std::endl;` into OnRender\\(\\), and run `source ~/vrx_ws/devel/setup.zsh && cd ~/vrx_ws && catkin_make && source ~/vrx_ws/devel/setup.zsh && roslaunch vrx_gazebo vrx.launch verbose:=true` \\(has camera sensors\\) it shows:\n\n```\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n```\n\n when I put in `gzerr << this->data->visual->GetScene()->CameraCount() << std::endl;` into OnRender\\(\\), and run `source ~/vrx_ws/devel/setup.zsh && cd ~/vrx_ws && catkin_make && source ~/vrx_ws/devel/setup.zsh && roslaunch vrx_gazebo vrx.launch verbose:=true` \\(has camera sensors\\) it shows:\n\n```\n[Err] [WavefieldVisualPlugin.cc:333] 0\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 0\n[Err] [WavefieldVisualPlugin.cc:333] 4\n```\n\nThanks! I was always checking in onrender. Not sure why this is, but I am glad it is showing up", "markup": "markdown", "html": "<p>Oh i see, when I put in <code>gzerr &lt;&lt; this-&gt;data-&gt;visual-&gt;GetScene()-&gt;CameraCount() &lt;&lt; std::endl;</code> into OnRender(), and run <code>source ~/vrx_ws/devel/setup.zsh &amp;&amp; cd ~/vrx_ws &amp;&amp; catkin_make &amp;&amp; source ~/vrx_ws/devel/setup.zsh &amp;&amp; roslaunch vrx_gazebo vrx.launch verbose:=true</code> (has camera sensors) it shows:</p>\n<div class=\"codehilite\"><pre><span></span>[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n</pre></div>\n\n\n<p>when I put in <code>gzerr &lt;&lt; this-&gt;data-&gt;visual-&gt;GetScene()-&gt;CameraCount() &lt;&lt; std::endl;</code> into OnRender(), and run <code>source ~/vrx_ws/devel/setup.zsh &amp;&amp; cd ~/vrx_ws &amp;&amp; catkin_make &amp;&amp; source ~/vrx_ws/devel/setup.zsh &amp;&amp; roslaunch vrx_gazebo vrx.launch verbose:=true</code> (has camera sensors) it shows:</p>\n<div class=\"codehilite\"><pre><span></span>[Err] [WavefieldVisualPlugin.cc:333] 0\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 0\n[Err] [WavefieldVisualPlugin.cc:333] 4\n</pre></div>\n\n\n<p>Thanks! I was always checking in onrender. Not sure why this is, but I am glad it is showing up</p>", "type": "rendered"}, "created_on": "2019-08-23T18:32:45.922614+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-23T18:32:45.936073+00:00", "type": "pullrequest_comment", "id": 114295906}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114328680.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114328680"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Stable commit at [e253463](#!/osrf/vrx/commits/e2534638329c8575f4ae2626c2d4a748f38d1273?at=default), all working except the camerasensors. Next commits will be building off of it.", "markup": "markdown", "html": "<p>Stable commit at <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/e2534638329c8575f4ae2626c2d4a748f38d1273?at=default\" rel=\"nofollow\">e253463</a>, all working except the camerasensors. Next commits will be building off of it.</p>", "type": "rendered"}, "created_on": "2019-08-25T05:47:19.570091+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-25T05:47:19.577167+00:00", "type": "pullrequest_comment", "id": 114328680}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114338646.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114338646"}}, "parent": {"id": 114328680, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114328680.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114328680"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "New stable commit at [a5cce7d](#!/osrf/vrx/commits/a5cce7d9b39744e050315fbd982c5af461d029c5?at=default), after fixing multiple heads issue. Next commits will be exploring camera sensors.", "markup": "markdown", "html": "<p>New stable commit at <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/a5cce7d9b39744e050315fbd982c5af461d029c5?at=default\" rel=\"nofollow\">a5cce7d</a>, after fixing multiple heads issue. Next commits will be exploring camera sensors.</p>", "type": "rendered"}, "created_on": "2019-08-25T22:57:22.185216+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-25T22:57:22.195505+00:00", "type": "pullrequest_comment", "id": 114338646}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114463150.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114463150"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Hi @{557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5} I have been trying to get the plugin to work with the camera sensors over the weekend.\n\n**What works**  \nSo far I have gotten the camera sensors to show valid water \\(no missing texture issues like before\\), but they still do not have reflections.\n\n**High-level plan**  \nMy plan at a high level was to:  \n\u2022 rather than store 1 cam, 1 rttTex, 1 rt, instead I could store a vector of cameras, a vector of cams, vector of rttTexs, vector of rts  \n\u2022 At load, setup private variables such as background color, material, etc. currently in SetupRefl\\(\\)  \n\u2022 Continuously check for new cameras \\(usercams, cameras, and camera sensors\\) and add new ones to a vector of cameras in OnPreRender\\(\\)  \n\u2022 When a new camera is found, create its corresponding rttTex and rt and store it in the vector  \n\u2022 At preRenderTargetUpdate\\(\\) and postRenderTargetUpdate\\(\\), iterate through list of rts, see which one matches the source, then use the correct corresponding camera\n\n**Issues**\n\n1. My primary issue right now relates to the plugin structure. From how I understand it, the plugin is created on both the server and client. The part that confuses me is that certain functions only run on the client or the server. As well, only certain variables are accessible by the server or the client.\n\n    1. This means that there are two vectors of cameras, one on server and one on client. This is a problem\n    \n        1. The major problem is that sensors::SensorManger::Instance\\(\\)->GetSensors\\(\\) is always empty on the client, but is correct on the server. When I get new sensors, I try to add them to the vector, but this only works on the server. On the client, I never see the new cameras. As a result, inside of preRenderTargetUpdate\\(\\) and postRenderTargetUpdate\\(\\), the cameras.size\\(\\) == 1 always \\(just the one user cam I add, not any of the sensors\\). It seems that these functions are always run on the client side. Does what I am saying make sense? Is there a simple solution?\n        2. This can be shown by running `hg update e876de8` \\(this commit shows best fully what I am trying to do\\), then adding `gzerr << \"post - this->data->cameras.size(): \" << this->data->cameras.size() << std::endl;` in postRenderTargetUpdate, `gzerr << \"pre - this->data->cameras.size(): \" << this->data->cameras.size() << std::endl;` in preRenderTargetUpdate, and `gzerr << \"onPre - this->data->cameras.size(): \" << this->data->cameras.size() << std::endl; gzerr << \"onpre - new_cameras.size(): \" << new_cameras.size() << std::endl;`\n        \n    \n\n```\n[Err] [WavefieldVisualPlugin.cc:349] onpre - this->data->cameras.size(): 3  // there are actually 3 camera sensors, guessing this is on server\n[Err] [WavefieldVisualPlugin.cc:350] onpre - new_cameras.size(): 3  // first time being added\n[Err] [WavefieldVisualPlugin.cc:621] pre - this->data->cameras.size(): 1  // there is 1 user camera, no camera sensors\n[Err] [WavefieldVisualPlugin.cc:621] post - this->data->cameras.size(): 1\n[Err] [WavefieldVisualPlugin.cc:349] onpre - this->data->cameras.size(): 3  // on server, still 3 cameras\n[Err] [WavefieldVisualPlugin.cc:350] onpre - new_cameras.size(): 0 // no more new cams\n[Err] [WavefieldVisualPlugin.cc:621] pre - this->data->cameras.size(): 1  // still just 1\n[Err] [WavefieldVisualPlugin.cc:621] post - this->data->cameras.size(): 1\n[Err] [WavefieldVisualPlugin.cc:349] onpre - this->data->cameras.size(): 3\n[Err] [WavefieldVisualPlugin.cc:350] onpre - new_cameras.size(): 0 // no more new cams\n[Err] [WavefieldVisualPlugin.cc:621] pre - this->data->cameras.size(): 1 \n[Err] [WavefieldVisualPlugin.cc:621] post - this->data->cameras.size(): 1\n```\n\n* If you run add `gzerr << sensors::SensorManager::Instance()->GetSensors.size() << std::endl;` in OnPreRender and run `roslaunch vrx_gazebo vrx.launch verbose:=true` \\(has camera sensors\\), it shows something like this, with intermittent 0s which I believe correspond to the client. I don\u2019t fully understand how these 2 plugins \\(on server and client\\) are supposed to function and communicate and how I should structure this plugin for this problem\n\n```\n[Err] [WavefieldVisualPlugin.cc:333] 0\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 0\n[Err] [WavefieldVisualPlugin.cc:333] 4\n```\n\n\u200c\n\n1. I am getting some very strange behavior. In case I made some much simpler mistakes, starting from [a5cce7d](#!/osrf/vrx/commits/a5cce7d9b39744e050315fbd982c5af461d029c5?at=default), I tried to slowly increment towards what I am trying to do. I restructured the code to do the exact same thing and it was working.\n\n    1. The part with issues was going from storing `camera` to `cameras`, etc \\(should be quite simple\\). The goal was to just put only 1 camera into `cameras`, then replace `camera` with `cameras.at(0)` at all instances to maintain the exact same functionality, but have the pointers stored in vectors.\n    \n        1. The strangest thing is that I have [1b8b510](#!/osrf/vrx/commits/1b8b51023d43982f1639b3da217e90768af40980?at=default) \\(working\\) \u2192 [dcf83cc](#!/osrf/vrx/commits/dcf83cc184088ec811ae3c448bc62ef70dd3329e?at=default) \\(not working half the time\\) \u2192 [5f78b8d](#!/osrf/vrx/commits/5f78b8d33b9c53ccebac5453f36938e067d72e7d?at=default) \\(working\\), with very simple differences. By working I mean that the waves are moving. WIth the working commits, it works every time. Reflections and wave movement. In [dcf83cc](#!/osrf/vrx/commits/dcf83cc184088ec811ae3c448bc62ef70dd3329e?at=default) \\(not working half the time\\), upon running multiple times, sometimes the waves don\u2019t move and sometimes they do. I am literally commenting out completely unused variables. Any idea what this could be caused by? Do you have the same symptoms that I have?\n        2. I know it is very strange that uncommenting unused variables makes this change, but I have tested it dozens of times. The working commits work and the non-working commit works half the time.\n        \n    \n\nI really hope to be able to complete the reflections part of the camera sensor before the summer, and these issues are very strange. If you have some time I would really appreciate your input. Thank you!\n\n\u200c\n\n**Summary:** I hope to store multiple cameras, textures and rendertargets. Then at preRenderTargetUpdate\\(\\) and postRenderTargetUpdate\\(\\), check which stored rendertarget matches the renderTargetEvent source. From there, apply the correct stored textures to material on the ocean and use the correct stored camera for clipPlane and reflection.\n\nThe issue is that there are two VisualPlugin objects \\(server and client\\). It seems that preRenderTargetUpdate\\(\\) and postRenderTargetUpdate\\(\\) are always run on client, but the client also doesn\u2019t have access to the camera sensors stored to do the above checks \\(because of issues explained above\\). If the preRenderTargetUpdate\\(\\) and postRenderTargetUpdate\\(\\) functions do all the hard work of switching the textures appropriately, but they also do not have any information about the camera sensors, it is impossible to create the desired effect. \n\nPerhaps I am missing sometimes about how Gazebo plugins work, but so far I haven\u2019t been able to find any helpful information online or in the source code.", "markup": "markdown", "html": "<p>Hi <span class=\"ap-mention\" data-atlassian-id=\"557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5\">@Ian Chen</span> I have been trying to get the plugin to work with the camera sensors over the weekend.</p>\n<p><strong>What works</strong><br />\nSo far I have gotten the camera sensors to show valid water (no missing texture issues like before), but they still do not have reflections.</p>\n<p><strong>High-level plan</strong><br />\nMy plan at a high level was to:<br />\n\u2022 rather than store 1 cam, 1 rttTex, 1 rt, instead I could store a vector of cameras, a vector of cams, vector of rttTexs, vector of rts<br />\n\u2022 At load, setup private variables such as background color, material, etc. currently in SetupRefl()<br />\n\u2022 Continuously check for new cameras (usercams, cameras, and camera sensors) and add new ones to a vector of cameras in OnPreRender()<br />\n\u2022 When a new camera is found, create its corresponding rttTex and rt and store it in the vector<br />\n\u2022 At preRenderTargetUpdate() and postRenderTargetUpdate(), iterate through list of rts, see which one matches the source, then use the correct corresponding camera</p>\n<p><strong>Issues</strong></p>\n<ol>\n<li>\n<p>My primary issue right now relates to the plugin structure. From how I understand it, the plugin is created on both the server and client. The part that confuses me is that certain functions only run on the client or the server. As well, only certain variables are accessible by the server or the client.</p>\n<ol>\n<li>\n<p>This means that there are two vectors of cameras, one on server and one on client. This is a problem</p>\n<ol>\n<li>The major problem is that sensors::SensorManger::Instance()-&gt;GetSensors() is always empty on the client, but is correct on the server. When I get new sensors, I try to add them to the vector, but this only works on the server. On the client, I never see the new cameras. As a result, inside of preRenderTargetUpdate() and postRenderTargetUpdate(), the cameras.size() == 1 always (just the one user cam I add, not any of the sensors). It seems that these functions are always run on the client side. Does what I am saying make sense? Is there a simple solution?</li>\n<li>This can be shown by running <code>hg update e876de8</code> (this commit shows best fully what I am trying to do), then adding <code>gzerr &lt;&lt; \"post - this-&gt;data-&gt;cameras.size(): \" &lt;&lt; this-&gt;data-&gt;cameras.size() &lt;&lt; std::endl;</code> in postRenderTargetUpdate, <code>gzerr &lt;&lt; \"pre - this-&gt;data-&gt;cameras.size(): \" &lt;&lt; this-&gt;data-&gt;cameras.size() &lt;&lt; std::endl;</code> in preRenderTargetUpdate, and <code>gzerr &lt;&lt; \"onPre - this-&gt;data-&gt;cameras.size(): \" &lt;&lt; this-&gt;data-&gt;cameras.size() &lt;&lt; std::endl; gzerr &lt;&lt; \"onpre - new_cameras.size(): \" &lt;&lt; new_cameras.size() &lt;&lt; std::endl;</code></li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span>[Err] [WavefieldVisualPlugin.cc:349] onpre - this-&gt;data-&gt;cameras.size(): 3  // there are actually 3 camera sensors, guessing this is on server\n[Err] [WavefieldVisualPlugin.cc:350] onpre - new_cameras.size(): 3  // first time being added\n[Err] [WavefieldVisualPlugin.cc:621] pre - this-&gt;data-&gt;cameras.size(): 1  // there is 1 user camera, no camera sensors\n[Err] [WavefieldVisualPlugin.cc:621] post - this-&gt;data-&gt;cameras.size(): 1\n[Err] [WavefieldVisualPlugin.cc:349] onpre - this-&gt;data-&gt;cameras.size(): 3  // on server, still 3 cameras\n[Err] [WavefieldVisualPlugin.cc:350] onpre - new_cameras.size(): 0 // no more new cams\n[Err] [WavefieldVisualPlugin.cc:621] pre - this-&gt;data-&gt;cameras.size(): 1  // still just 1\n[Err] [WavefieldVisualPlugin.cc:621] post - this-&gt;data-&gt;cameras.size(): 1\n[Err] [WavefieldVisualPlugin.cc:349] onpre - this-&gt;data-&gt;cameras.size(): 3\n[Err] [WavefieldVisualPlugin.cc:350] onpre - new_cameras.size(): 0 // no more new cams\n[Err] [WavefieldVisualPlugin.cc:621] pre - this-&gt;data-&gt;cameras.size(): 1 \n[Err] [WavefieldVisualPlugin.cc:621] post - this-&gt;data-&gt;cameras.size(): 1\n</pre></div>\n\n\n<ul>\n<li>If you run add <code>gzerr &lt;&lt; sensors::SensorManager::Instance()-&gt;GetSensors.size() &lt;&lt; std::endl;</code> in OnPreRender and run <code>roslaunch vrx_gazebo vrx.launch verbose:=true</code> (has camera sensors), it shows something like this, with intermittent 0s which I believe correspond to the client. I don\u2019t fully understand how these 2 plugins (on server and client) are supposed to function and communicate and how I should structure this plugin for this problem</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span>[Err] [WavefieldVisualPlugin.cc:333] 0\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 0\n[Err] [WavefieldVisualPlugin.cc:333] 4\n</pre></div>\n\n\n<p>\u200c</p>\n<ol>\n<li>\n<p>I am getting some very strange behavior. In case I made some much simpler mistakes, starting from <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/a5cce7d9b39744e050315fbd982c5af461d029c5?at=default\" rel=\"nofollow\">a5cce7d</a>, I tried to slowly increment towards what I am trying to do. I restructured the code to do the exact same thing and it was working.</p>\n<ol>\n<li>\n<p>The part with issues was going from storing <code>camera</code> to <code>cameras</code>, etc (should be quite simple). The goal was to just put only 1 camera into <code>cameras</code>, then replace <code>camera</code> with <code>cameras.at(0)</code> at all instances to maintain the exact same functionality, but have the pointers stored in vectors.</p>\n<ol>\n<li>The strangest thing is that I have <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/1b8b51023d43982f1639b3da217e90768af40980?at=default\" rel=\"nofollow\">1b8b510</a> (working) \u2192 <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/dcf83cc184088ec811ae3c448bc62ef70dd3329e?at=default\" rel=\"nofollow\">dcf83cc</a> (not working half the time) \u2192 <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/5f78b8d33b9c53ccebac5453f36938e067d72e7d?at=default\" rel=\"nofollow\">5f78b8d</a> (working), with very simple differences. By working I mean that the waves are moving. WIth the working commits, it works every time. Reflections and wave movement. In <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/dcf83cc184088ec811ae3c448bc62ef70dd3329e?at=default\" rel=\"nofollow\">dcf83cc</a> (not working half the time), upon running multiple times, sometimes the waves don\u2019t move and sometimes they do. I am literally commenting out completely unused variables. Any idea what this could be caused by? Do you have the same symptoms that I have?</li>\n<li>I know it is very strange that uncommenting unused variables makes this change, but I have tested it dozens of times. The working commits work and the non-working commit works half the time.</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p>I really hope to be able to complete the reflections part of the camera sensor before the summer, and these issues are very strange. If you have some time I would really appreciate your input. Thank you!</p>\n<p>\u200c</p>\n<p><strong>Summary:</strong> I hope to store multiple cameras, textures and rendertargets. Then at preRenderTargetUpdate() and postRenderTargetUpdate(), check which stored rendertarget matches the renderTargetEvent source. From there, apply the correct stored textures to material on the ocean and use the correct stored camera for clipPlane and reflection.</p>\n<p>The issue is that there are two VisualPlugin objects (server and client). It seems that preRenderTargetUpdate() and postRenderTargetUpdate() are always run on client, but the client also doesn\u2019t have access to the camera sensors stored to do the above checks (because of issues explained above). If the preRenderTargetUpdate() and postRenderTargetUpdate() functions do all the hard work of switching the textures appropriately, but they also do not have any information about the camera sensors, it is impossible to create the desired effect. </p>\n<p>Perhaps I am missing sometimes about how Gazebo plugins work, but so far I haven\u2019t been able to find any helpful information online or in the source code.</p>", "type": "rendered"}, "created_on": "2019-08-26T17:54:20.657165+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-26T18:24:12.267590+00:00", "type": "pullrequest_comment", "id": 114463150}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114464412.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114464412"}}, "parent": {"id": 114463150, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114463150.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114463150"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "![](data/bitbucket.org/repo/BgXLzgM/images/4275719201-image.png)\n\u200c\n\nNo more yellow color from missing texture error.", "markup": "markdown", "html": "<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/4275719201-image.png\" />\n\u200c</p>\n<p>No more yellow color from missing texture error.</p>", "type": "rendered"}, "created_on": "2019-08-26T18:05:08.193753+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-26T18:05:08.203715+00:00", "type": "pullrequest_comment", "id": 114464412}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114466737.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114466737"}}, "parent": {"id": 114463150, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114463150.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114463150"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Also, we use the `EnableVisualizations()` method, which I understand to be a check if the plugin is on client or server. Can that be used here to solve our problem? Which parts of this plugin should/shouldn\u2019t be on the client/server?", "markup": "markdown", "html": "<p>Also, we use the <code>EnableVisualizations()</code> method, which I understand to be a check if the plugin is on client or server. Can that be used here to solve our problem? Which parts of this plugin should/shouldn\u2019t be on the client/server?</p>", "type": "rendered"}, "created_on": "2019-08-26T18:25:55.548675+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-26T18:25:55.562332+00:00", "type": "pullrequest_comment", "id": 114466737}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114471647.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114471647"}}, "parent": {"id": 114466737, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114466737.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114466737"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "On client side, it\u2019s expected that there is only one user camera. There should be no 'camera sensors' so you should not have to check for new cameras. Sensor simulation is all done on the server side. You can use `EnableVisualizations` to check if you\u2019re on the client side or not. If so, just create render texture for the user camera. On the server side, check for new cameras on PreRender and create a new render texture for each of them.", "markup": "markdown", "html": "<p>On client side, it\u2019s expected that there is only one user camera. There should be no 'camera sensors' so you should not have to check for new cameras. Sensor simulation is all done on the server side. You can use <code>EnableVisualizations</code> to check if you\u2019re on the client side or not. If so, just create render texture for the user camera. On the server side, check for new cameras on PreRender and create a new render texture for each of them.</p>", "type": "rendered"}, "created_on": "2019-08-26T19:07:41.155756+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-08-26T19:07:41.177060+00:00", "type": "pullrequest_comment", "id": 114471647}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114834255.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114834255"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "![](data/bitbucket.org/repo/BgXLzgM/images/3497492717-image.png)\n\u200c\n\nThe ocean reflections are showing on the camera sensors.\n\n`hg update 20cdac7d9b92` `source ~/vrx_ws/devel/setup.zsh && cd ~/vrx_ws && catkin_make && source ~/vrx_ws/devel/setup.zsh && roslaunch vrx_gazebo vrx.launch` `rosrun image_view image_view image:=/wamv/sensors/cameras/front_left_camera/image_raw`\n\nThe only issues now are:\n\n1. When another image\\_view is run, the reflection textures get mixed up. Eg. `rosrun image_view image_view image:=/wamv/sensors/cameras/middle_right_camera/image_raw`\n2. There is much higher latency in this reflection than usercamera reflection, so the bobbing of the WAM-V makes the reflections look a bit strange for certain objects.\n\n", "markup": "markdown", "html": "<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3497492717-image.png\" />\n\u200c</p>\n<p>The ocean reflections are showing on the camera sensors.</p>\n<p><code>hg update 20cdac7d9b92</code> <code>source ~/vrx_ws/devel/setup.zsh &amp;&amp; cd ~/vrx_ws &amp;&amp; catkin_make &amp;&amp; source ~/vrx_ws/devel/setup.zsh &amp;&amp; roslaunch vrx_gazebo vrx.launch</code> <code>rosrun image_view image_view image:=/wamv/sensors/cameras/front_left_camera/image_raw</code></p>\n<p>The only issues now are:</p>\n<ol>\n<li>When another image_view is run, the reflection textures get mixed up. Eg. <code>rosrun image_view image_view image:=/wamv/sensors/cameras/middle_right_camera/image_raw</code></li>\n<li>There is much higher latency in this reflection than usercamera reflection, so the bobbing of the WAM-V makes the reflections look a bit strange for certain objects.</li>\n</ol>", "type": "rendered"}, "created_on": "2019-08-28T18:34:16.066642+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-29T00:39:54.685662+00:00", "type": "pullrequest_comment", "id": 114834255}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114866268.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114866268"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "I have fixed build issues related to code\\_check and making it compatible with gz7. Still not fix for the mixup or latency.", "markup": "markdown", "html": "<p>I have fixed build issues related to code_check and making it compatible with gz7. Still not fix for the mixup or latency.</p>", "type": "rendered"}, "created_on": "2019-08-29T00:39:30.704067+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-29T00:39:30.711667+00:00", "type": "pullrequest_comment", "id": 114866268}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114871562.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114871562"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "I did a quick, rough performance test. I simply added:\n\n```\n    <physics type=\"ode\">\n      <real_time_update_rate>0.000000</real_time_update_rate>\n      <max_step_size>0.001000</max_step_size>\n    </physics>\n```\n\nTo simply run it as high real\\_time\\_factor as I could. On default, the real\\_time\\_factor was between 3.3-3.85. It started around 3.5, then stayed at 3.85 for a while, then dropped to 3.3 for a while.\n\nOn this branch, the real\\_time\\_factor was between 3.5-3.75. It is hard to say, as it kept moving up and down, but overall the performance seems unaffected on my sysytem.", "markup": "markdown", "html": "<p>I did a quick, rough performance test. I simply added:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"nt\">&lt;physics</span> <span class=\"na\">type=</span><span class=\"s\">&quot;ode&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;real_time_update_rate&gt;</span>0.000000<span class=\"nt\">&lt;/real_time_update_rate&gt;</span>\n      <span class=\"nt\">&lt;max_step_size&gt;</span>0.001000<span class=\"nt\">&lt;/max_step_size&gt;</span>\n    <span class=\"nt\">&lt;/physics&gt;</span>\n</pre></div>\n\n\n<p>To simply run it as high real_time_factor as I could. On default, the real_time_factor was between 3.3-3.85. It started around 3.5, then stayed at 3.85 for a while, then dropped to 3.3 for a while.</p>\n<p>On this branch, the real_time_factor was between 3.5-3.75. It is hard to say, as it kept moving up and down, but overall the performance seems unaffected on my sysytem.</p>", "type": "rendered"}, "created_on": "2019-08-29T02:35:23.083863+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-29T02:35:23.093801+00:00", "type": "pullrequest_comment", "id": 114871562}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114871646.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114871646"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Also, Ian was able to find a solution to the above issues, but it requires some functions not yet defined in Gazebo \\(Ian used a different branch of gazebo\\). This required a preCameraRender event to rendering the rtts for the camerasensors correctly. Carlos wanted to wait for the reflections PR to be merged in before the VRX release, but I'm not sure it can wait for the `camera_render_event_9`new gazebo branch to be added to the release. I was thinking we could actually just set `envReflectRatio` and `shallowRefractRatio` to 0.0 to completely turn them off and then merge in the changes, noting this required change. What are your thoughts on this?", "markup": "markdown", "html": "<p>Also, Ian was able to find a solution to the above issues, but it requires some functions not yet defined in Gazebo (Ian used a different branch of gazebo). This required a preCameraRender event to rendering the rtts for the camerasensors correctly. Carlos wanted to wait for the reflections PR to be merged in before the VRX release, but I'm not sure it can wait for the <code>camera_render_event_9</code>new gazebo branch to be added to the release. I was thinking we could actually just set <code>envReflectRatio</code> and <code>shallowRefractRatio</code> to 0.0 to completely turn them off and then merge in the changes, noting this required change. What are your thoughts on this?</p>", "type": "rendered"}, "created_on": "2019-08-29T02:37:19.009899+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-29T02:37:19.018061+00:00", "type": "pullrequest_comment", "id": 114871646}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114873204.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114873204"}}, "parent": {"id": 114871646, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114871646.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114871646"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "@{557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd} when do you plan to make the next release?", "markup": "markdown", "html": "<p><span class=\"ap-mention\" data-atlassian-id=\"557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd\">@Carlos Ag\u00fcero</span> when do you plan to make the next release?</p>", "type": "rendered"}, "created_on": "2019-08-29T03:12:45.587642+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-08-29T03:12:45.603339+00:00", "type": "pullrequest_comment", "id": 114873204}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114873277.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114873277"}}, "parent": {"id": 114873204, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114873204.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114873204"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "We can wait a few days if needed.", "markup": "markdown", "html": "<p>We can wait a few days if needed.</p>", "type": "rendered"}, "created_on": "2019-08-29T03:14:21.752209+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-08-29T03:14:21.762148+00:00", "type": "pullrequest_comment", "id": 114873277}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114993329.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114993329"}}, "parent": {"id": 114873204, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114873204.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114873204"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "@{557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5} what would be the process of getting `camera_render_event_9` merged in and released for people not building from source?", "markup": "markdown", "html": "<p><span class=\"ap-mention\" data-atlassian-id=\"557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5\">@Ian Chen</span> what would be the process of getting <code>camera_render_event_9</code> merged in and released for people not building from source?</p>", "type": "rendered"}, "created_on": "2019-08-29T16:09:31.279526+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-29T16:09:31.297794+00:00", "type": "pullrequest_comment", "id": 114993329}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115006842.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115006842"}}, "parent": {"id": 114993329, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114993329.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114993329"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "I\u2019ve just created a [gazebo pull request](https://bitbucket.org/osrf/gazebo/pull-requests/3118) for the render events. I can make a gazebo release once that PR is merged.", "markup": "markdown", "html": "<p>I\u2019ve just created a <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/pull-requests/3118\" rel=\"nofollow\">gazebo pull request</a> for the render events. I can make a gazebo release once that PR is merged.</p>", "type": "rendered"}, "created_on": "2019-08-29T17:57:03.518465+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-08-29T17:57:03.531953+00:00", "type": "pullrequest_comment", "id": 115006842}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115315598.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115315598"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Ian has added the `ConnectCameraPreRender` method to the most recent gazebo release. To get this, I ran: \n\n```\n    $ sudo apt update\n    $ sudo apt full-upgrade\n```\n\nThen, I added an `enableRtt` variable and sdf parameter, which defaults to true. It is false for gz7, so we can avoid this build issue. Essentially, reflection/refraction will always be turned off for gz7.\n\n```\n/tmp/vrx_ws/src/build/wave_gazebo_plugins/src/WavefieldVisualPlugin.cc:301:7: error: 'ConnectCameraPreRender' is not a member of 'gazebo::rendering::Events'\n      rendering::Events::ConnectCameraPreRender(\n      ^\nbuild/wave_gazebo_plugins/CMakeFiles/WavefieldVisualPlugin.dir/build.make:62: recipe for target 'build/wave_gazebo_plugins/CMakeFiles/WavefieldVisualPlugin.dir/src/WavefieldVisualPlugin.cc.o' failed\nmake[2]: *** [build/wave_gazebo_plugins/CMakeFiles/WavefieldVisualPlugin.dir/src/WavefieldVisualPlugin.cc.o] Error 1\nmake[1]: *** [build/wave_gazebo_plugins/CMakeFiles/WavefieldVisualPlugin.dir/all] Error 2\nCMakeFiles/Makefile2:1149: recipe for target 'build/wave_gazebo_plugins/CMakeFiles/WavefieldVisualPlugin.dir/all' failed\nMakefile:138: recipe for target 'all' failed\n```", "markup": "markdown", "html": "<p>Ian has added the <code>ConnectCameraPreRender</code> method to the most recent gazebo release. To get this, I ran: </p>\n<div class=\"codehilite\"><pre><span></span>    $ sudo apt update\n    $ sudo apt full-upgrade\n</pre></div>\n\n\n<p>Then, I added an <code>enableRtt</code> variable and sdf parameter, which defaults to true. It is false for gz7, so we can avoid this build issue. Essentially, reflection/refraction will always be turned off for gz7.</p>\n<div class=\"codehilite\"><pre><span></span>/tmp/vrx_ws/src/build/wave_gazebo_plugins/src/WavefieldVisualPlugin.cc:301:7: error: &#39;ConnectCameraPreRender&#39; is not a member of &#39;gazebo::rendering::Events&#39;\n      rendering::Events::ConnectCameraPreRender(\n      ^\nbuild/wave_gazebo_plugins/CMakeFiles/WavefieldVisualPlugin.dir/build.make:62: recipe for target &#39;build/wave_gazebo_plugins/CMakeFiles/WavefieldVisualPlugin.dir/src/WavefieldVisualPlugin.cc.o&#39; failed\nmake[2]: *** [build/wave_gazebo_plugins/CMakeFiles/WavefieldVisualPlugin.dir/src/WavefieldVisualPlugin.cc.o] Error 1\nmake[1]: *** [build/wave_gazebo_plugins/CMakeFiles/WavefieldVisualPlugin.dir/all] Error 2\nCMakeFiles/Makefile2:1149: recipe for target &#39;build/wave_gazebo_plugins/CMakeFiles/WavefieldVisualPlugin.dir/all&#39; failed\nMakefile:138: recipe for target &#39;all&#39; failed\n</pre></div>", "type": "rendered"}, "created_on": "2019-09-02T20:52:57.462640+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-09-02T20:52:57.471855+00:00", "type": "pullrequest_comment", "id": 115315598}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115315690.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115315690"}}, "parent": {"id": 115315598, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115315598.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115315598"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Unfortunately, it\u2019s still not passing the pipeline, likely because it is not using the most up to date version of gazebo. It passes for kinetic, but not melodic.", "markup": "markdown", "html": "<p>Unfortunately, it\u2019s still not passing the pipeline, likely because it is not using the most up to date version of gazebo. It passes for kinetic, but not melodic.</p>", "type": "rendered"}, "created_on": "2019-09-02T20:56:02.864147+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-09-02T20:59:42.756068+00:00", "type": "pullrequest_comment", "id": 115315690}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115316837.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115316837"}}, "parent": {"id": 115315690, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115315690.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115315690"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "This issue has been resolved by checking that the Gazebo version is >=9.11. Versions earlier than this will have no reflection/refraction.", "markup": "markdown", "html": "<p>This issue has been resolved by checking that the Gazebo version is &gt;=9.11. Versions earlier than this will have no reflection/refraction.</p>", "type": "rendered"}, "created_on": "2019-09-02T21:37:48.594478+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-09-02T21:37:48.602032+00:00", "type": "pullrequest_comment", "id": 115316837}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115454713.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115454713"}}, "parent": {"id": 115316837, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115316837.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115316837"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "created a [PR](https://bitbucket.org/osrf/gazebo/pull-requests/3119) to backport the render events to gazebo7", "markup": "markdown", "html": "<p>created a <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/pull-requests/3119\" rel=\"nofollow\">PR</a> to backport the render events to gazebo7</p>", "type": "rendered"}, "created_on": "2019-09-03T17:03:19.808265+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-09-03T17:03:19.819370+00:00", "type": "pullrequest_comment", "id": 115454713}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115517598.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115517598"}}, "parent": {"id": 115454713, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115454713.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115454713"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Great! @{557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd} would you be able to make the change to the #if statements and test it on gz7? I don\u2019t have it setup on my system, so it would probably be much more effective to do it from your end.", "markup": "markdown", "html": "<p>Great! <span class=\"ap-mention\" data-atlassian-id=\"557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd\">@Carlos Ag\u00fcero</span> would you be able to make the change to the #if statements and test it on gz7? I don\u2019t have it setup on my system, so it would probably be much more effective to do it from your end.</p>", "type": "rendered"}, "created_on": "2019-09-04T06:33:55.998038+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-09-04T06:33:56.018572+00:00", "type": "pullrequest_comment", "id": 115517598}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115821736.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115821736"}}, "parent": {"id": 115517598, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115517598.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115517598"}}, "depth": 5}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "gazebo7 xenial debs are out. I\u2019ve removed the version check in the plugin code. [4591dd](#!/osrf/vrx/commits/34591dd56f433c06d00191688a56b9f24993cf79)", "markup": "markdown", "html": "<p>gazebo7 xenial debs are out. I\u2019ve removed the version check in the plugin code. <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/34591dd56f433c06d00191688a56b9f24993cf79\" rel=\"nofollow\">4591dd</a></p>", "type": "rendered"}, "created_on": "2019-09-05T17:47:46.498788+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-09-05T17:47:46.548991+00:00", "type": "pullrequest_comment", "id": 115821736}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115316998.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115316998"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "This PR should be good to go! Please test it out and let me know if anything else needs to be added :slight_smile: Thanks to Ian for all of the help.\n\nIn `wave_gazebo/world_models/ocean_waves/model.xacro`, we now have \n\n```\n  /// 1. <enableRtt> (bool, default: true)\n  ///    Display reflection and reflections if set to true.\n  ///\n  /// 2. <shallowRefractRatio> (double, default: 0.2)\n  ///    Ratio between shallow water color and refraction color to use\n  ///    In [0, 1], where 0 is no refraction and 1 is maximum refraction\n  ///\n  /// 3. <envReflectRatio> (double, default: 0.2)\n  ///    Ratio between environment color and reflection color to use\n  ///    In [0, 1], where 0 is no reflection and 1 is maximum reflection\n```\n\nPlay with this if needed. Make sure that you have the most up to date version of Gazebo or it will not have the reflections. \n\n```\n    $ sudo apt update\n    $ sudo apt full-upgrade\n```\n\nThen you can run with `source ~/vrx_ws/devel/setup.bash && cd ~/vrx_ws && catkin_make && source ~/vrx_ws/devel/setup.bash && roslaunch vrx_gazebo vrx.launch verbose:=true`. Confirm that the reflections look good in the client and by running `rosrun image_view image_view image:=/wamv/sensors/cameras/middle_right_camera/image_raw` and `rosrun image_view image_view image:=/wamv/sensors/cameras/front_right_camera/image_raw`", "markup": "markdown", "html": "<p>This PR should be good to go! Please test it out and let me know if anything else needs to be added <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f642.png\" alt=\"\ud83d\ude42\" title=\":slight_smile:\" data-emoji-short-name=\":slight_smile:\" /> Thanks to Ian for all of the help.</p>\n<p>In <code>wave_gazebo/world_models/ocean_waves/model.xacro</code>, we now have </p>\n<div class=\"codehilite\"><pre><span></span>  /// 1. &lt;enableRtt&gt; (bool, default: true)\n  ///    Display reflection and reflections if set to true.\n  ///\n  /// 2. &lt;shallowRefractRatio&gt; (double, default: 0.2)\n  ///    Ratio between shallow water color and refraction color to use\n  ///    In [0, 1], where 0 is no refraction and 1 is maximum refraction\n  ///\n  /// 3. &lt;envReflectRatio&gt; (double, default: 0.2)\n  ///    Ratio between environment color and reflection color to use\n  ///    In [0, 1], where 0 is no reflection and 1 is maximum reflection\n</pre></div>\n\n\n<p>Play with this if needed. Make sure that you have the most up to date version of Gazebo or it will not have the reflections. </p>\n<div class=\"codehilite\"><pre><span></span>    $ sudo apt update\n    $ sudo apt full-upgrade\n</pre></div>\n\n\n<p>Then you can run with <code>source ~/vrx_ws/devel/setup.bash &amp;&amp; cd ~/vrx_ws &amp;&amp; catkin_make &amp;&amp; source ~/vrx_ws/devel/setup.bash &amp;&amp; roslaunch vrx_gazebo vrx.launch verbose:=true</code>. Confirm that the reflections look good in the client and by running <code>rosrun image_view image_view image:=/wamv/sensors/cameras/middle_right_camera/image_raw</code> and <code>rosrun image_view image_view image:=/wamv/sensors/cameras/front_right_camera/image_raw</code></p>", "type": "rendered"}, "created_on": "2019-09-02T21:43:01.312140+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-09-02T21:43:01.360565+00:00", "type": "pullrequest_comment", "id": 115316998}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115451898.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115451898"}}, "parent": {"id": 115316998, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115316998.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115316998"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "I don't see this section in `model.xacro`. I see the parameters but not the comments. I wonder if you forgot to commit something.", "markup": "markdown", "html": "<p>I don't see this section in <code>model.xacro</code>. I see the parameters but not the comments. I wonder if you forgot to commit something.</p>", "type": "rendered"}, "created_on": "2019-09-03T16:43:27.288695+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-09-03T16:44:02.477360+00:00", "type": "pullrequest_comment", "id": 115451898}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115452231.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115452231"}}, "parent": {"id": 115451898, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115451898.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115451898"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Oh, I see that these comments are in `WavefieldVisualPlugin.hh` now.", "markup": "markdown", "html": "<p>Oh, I see that these comments are in <code>WavefieldVisualPlugin.hh</code> now.</p>", "type": "rendered"}, "created_on": "2019-09-03T16:45:38.287618+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-09-03T16:45:38.307414+00:00", "type": "pullrequest_comment", "id": 115452231}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115517456.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115517456"}}, "parent": {"id": 115452231, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115452231.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115452231"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Yes, this seemed to be the best place to document. Sorry for the confusion", "markup": "markdown", "html": "<p>Yes, this seemed to be the best place to document. Sorry for the confusion</p>", "type": "rendered"}, "created_on": "2019-09-04T06:32:48.767173+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-09-04T06:32:48.777362+00:00", "type": "pullrequest_comment", "id": 115517456}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115454894.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115454894"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "It's not very evident to me the effect of refraction. Here are two images that I took, the upper one is with refraction set to `0` and the lower one has refraction set to `1`. In both cases, reflection is set to `1` to make the changes more evident.\n\n![](data/bitbucket.org/repo/BgXLzgM/images/469557973-refraction_0.png)\n![](data/bitbucket.org/repo/BgXLzgM/images/585719843-refraction_1.png)\n", "markup": "markdown", "html": "<p>It's not very evident to me the effect of refraction. Here are two images that I took, the upper one is with refraction set to <code>0</code> and the lower one has refraction set to <code>1</code>. In both cases, reflection is set to <code>1</code> to make the changes more evident.</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/469557973-refraction_0.png\" />\n<img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/585719843-refraction_1.png\" /></p>", "type": "rendered"}, "created_on": "2019-09-03T17:04:43.316504+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-09-03T17:04:43.326722+00:00", "type": "pullrequest_comment", "id": 115454894}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115478048.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115478048"}}, "parent": {"id": 115454894, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115454894.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115454894"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "the `noiseNormal` and `fresnel` components from ogre sample\u2019s fresnel [shaders program](https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example_FresnelFp.glsl) should help give some subtle refraction effect", "markup": "markdown", "html": "<p>the <code>noiseNormal</code> and <code>fresnel</code> components from ogre sample\u2019s fresnel <a data-is-external-link=\"true\" href=\"https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example_FresnelFp.glsl\" rel=\"nofollow\">shaders program</a> should help give some subtle refraction effect</p>", "type": "rendered"}, "created_on": "2019-09-03T20:20:56.195938+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-09-03T20:21:14.284363+00:00", "type": "pullrequest_comment", "id": 115478048}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115518083.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115518083"}}, "parent": {"id": 115478048, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115478048.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115478048"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Thank you. I have made the change to show a refraction effect. Changes made: \n\n1. Removed `scene_blend alpha_blend`, which tried to make the ocean transparent, which conflicted with refractions. This way, if `shallowRefractRatio == 0.0`, no objects below water can be seen.\n2.  We can now tune the `noiseScale` parameter in `wave_gazebo/world_models/ocean_waves/materials/scripts/waves.material` to increase or decrease the amount of refraction movement we see.\n3. Used the above example as inspiration, but rather than making a new `noiseCoord` variable, I reused the `bumpCoord` variable already used to keep the shader less confusing. Let me know if this works!\n\n", "markup": "markdown", "html": "<p>Thank you. I have made the change to show a refraction effect. Changes made: </p>\n<ol>\n<li>Removed <code>scene_blend alpha_blend</code>, which tried to make the ocean transparent, which conflicted with refractions. This way, if <code>shallowRefractRatio == 0.0</code>, no objects below water can be seen.</li>\n<li>We can now tune the <code>noiseScale</code> parameter in <code>wave_gazebo/world_models/ocean_waves/materials/scripts/waves.material</code> to increase or decrease the amount of refraction movement we see.</li>\n<li>Used the above example as inspiration, but rather than making a new <code>noiseCoord</code> variable, I reused the <code>bumpCoord</code> variable already used to keep the shader less confusing. Let me know if this works!</li>\n</ol>", "type": "rendered"}, "created_on": "2019-09-04T06:37:48.885206+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-09-04T06:37:48.896069+00:00", "type": "pullrequest_comment", "id": 115518083}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115518282.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115518282"}}, "parent": {"id": 115518083, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115518083.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115518083"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "![](data/bitbucket.org/repo/BgXLzgM/images/1078023095-image.png)\nPropellers barely seen with 0.2 refraction at this angle.\n\n\u200c\n\n![](data/bitbucket.org/repo/BgXLzgM/images/4220201764-image.png)\nRefraction propellers seen with 0.2 refraction at higher angle.", "markup": "markdown", "html": "<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1078023095-image.png\" />\nPropellers barely seen with 0.2 refraction at this angle.</p>\n<p>\u200c</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/4220201764-image.png\" />\nRefraction propellers seen with 0.2 refraction at higher angle.</p>", "type": "rendered"}, "created_on": "2019-09-04T06:39:21.901877+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-09-04T06:39:21.912095+00:00", "type": "pullrequest_comment", "id": 115518282}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115518454.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115518454"}}, "parent": {"id": 115518282, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115518282.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115518282"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "![](data/bitbucket.org/repo/BgXLzgM/images/1552053761-image.png)\nObvious refraction with 1.0\n\n\u200c\n\n![](data/bitbucket.org/repo/BgXLzgM/images/1503056459-image.png)\nNice distorted refraction with 1.0", "markup": "markdown", "html": "<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1552053761-image.png\" />\nObvious refraction with 1.0</p>\n<p>\u200c</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1503056459-image.png\" />\nNice distorted refraction with 1.0</p>", "type": "rendered"}, "created_on": "2019-09-04T06:40:42.885675+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-09-04T06:41:19.371158+00:00", "type": "pullrequest_comment", "id": 115518454}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115518708.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115518708"}}, "parent": {"id": 115518083, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115518083.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115518083"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "I could try making `noiseScale` an sdf parameter, if that would be helpful. Try out different values with it and let me know if it is needed.", "markup": "markdown", "html": "<p>I could try making <code>noiseScale</code> an sdf parameter, if that would be helpful. Try out different values with it and let me know if it is needed.</p>", "type": "rendered"}, "created_on": "2019-09-04T06:42:35.474923+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-09-04T06:42:35.487059+00:00", "type": "pullrequest_comment", "id": 115518708}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115611186.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115611186"}}, "parent": {"id": 115518708, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115518708.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115518708"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "I made it so that the \"noise\" only affects objects under water, not the above water reflection, as it looked very strange when above water. Let me know if you think that this should be added to the reflection as well, but it just looked strange. That is from the `.frag` file now having reflectFinal and refractFinal.", "markup": "markdown", "html": "<p>I made it so that the \"noise\" only affects objects under water, not the above water reflection, as it looked very strange when above water. Let me know if you think that this should be added to the reflection as well, but it just looked strange. That is from the <code>.frag</code> file now having reflectFinal and refractFinal.</p>", "type": "rendered"}, "created_on": "2019-09-04T14:45:40.284277+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-09-04T14:45:40.309885+00:00", "type": "pullrequest_comment", "id": 115611186}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115628060.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115628060"}}, "parent": {"id": 115611186, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115611186.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115611186"}}, "depth": 5}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "I did a few tests and if I set refraction to `0`, the water doesn\u2019t look transparent anymore and I don\u2019t see the propeller under the water. If I increment the refraction value, I start seeing the propeller. Not sure if I notice any effect in the reflected image while changing the refraction. Is this expected? My naive intuition about refraction was expecting a reflected distortion proportional to the refraction value.", "markup": "markdown", "html": "<p>I did a few tests and if I set refraction to <code>0</code>, the water doesn\u2019t look transparent anymore and I don\u2019t see the propeller under the water. If I increment the refraction value, I start seeing the propeller. Not sure if I notice any effect in the reflected image while changing the refraction. Is this expected? My naive intuition about refraction was expecting a reflected distortion proportional to the refraction value.</p>", "type": "rendered"}, "created_on": "2019-09-04T16:12:14.202870+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-09-04T16:12:14.211316+00:00", "type": "pullrequest_comment", "id": 115628060}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115661442.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115661442"}}, "parent": {"id": 115628060, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115628060.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115628060"}}, "depth": 6}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "looking at the code, the `shallowRefractionRatio` and `envReflectionRatio`  params determines the ratio of which these reflection/ refraction textures are mixed into the final output color.  The higher the values, the more visible they are. So maybe we can rename them to something like `shallowRefractionOpacity` and `envReflectionOpacity` to avoid the confusion?", "markup": "markdown", "html": "<p>looking at the code, the <code>shallowRefractionRatio</code> and <code>envReflectionRatio</code>  params determines the ratio of which these reflection/ refraction textures are mixed into the final output color.  The higher the values, the more visible they are. So maybe we can rename them to something like <code>shallowRefractionOpacity</code> and <code>envReflectionOpacity</code> to avoid the confusion?</p>", "type": "rendered"}, "created_on": "2019-09-04T20:51:31.109436+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-09-04T20:51:31.120253+00:00", "type": "pullrequest_comment", "id": 115661442}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115687827.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115687827"}}, "parent": {"id": 115661442, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115661442.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115661442"}}, "depth": 7}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Great will do. ", "markup": "markdown", "html": "<p>Great will do. </p>", "type": "rendered"}, "created_on": "2019-09-05T04:02:48.495148+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-09-05T04:02:48.503550+00:00", "type": "pullrequest_comment", "id": 115687827}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115692239.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115692239"}}, "parent": {"id": 115687827, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115687827.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115687827"}}, "depth": 8}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "I made the water non-transparent by removing the line `scene_blend alpha_blend`.  I will turn it back on. I removed it because I found it to look a bit strange with both the distorted refraction and transparent image together, as shown below\n\n![](data/bitbucket.org/repo/BgXLzgM/images/1008870784-image.png)\n", "markup": "markdown", "html": "<p>I made the water non-transparent by removing the line <code>scene_blend alpha_blend</code>.  I will turn it back on. I removed it because I found it to look a bit strange with both the distorted refraction and transparent image together, as shown below</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1008870784-image.png\" /></p>", "type": "rendered"}, "created_on": "2019-09-05T05:14:43.253065+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-09-05T05:14:43.266047+00:00", "type": "pullrequest_comment", "id": 115692239}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115694106.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115694106"}}, "parent": {"id": 115692239, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115692239.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115692239"}}, "depth": 9}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "![](data/bitbucket.org/repo/BgXLzgM/images/474522366-image.png)\nIn 1723:6a0a23156279, I have made the following changes since:\n\n* Added back transparency in ocean, so the propellers should always be seen\n* Updated the sdf parameter names to `reflectOpacity` and `refractOpacity` for clarity\n* Added sdf parameter `rttNoise` the scales the amount of distortion\n* I made both reflection and refraction distorted\n\n```\n  /// 2. <enableRtt> (bool, default: true)\n  ///    Display reflection and reflections if set to true.\n  ///\n  /// 3. <rttNoise> (double, default: 0.1)\n  ///    Amount of distortion in reflection/refraction.\n  ///\n  /// 4. <refractOpacity> (double, default: 0.2)\n  ///    Ratio between shallow water color and refraction color to use\n  ///    In [0, 1], where 0 is no refraction and 1 is maximum refraction\n  ///\n  /// 5. <reflectOpacity> (double, default: 0.2)\n  ///    Ratio between environment color and reflection color to use\n  ///    In [0, 1], where 0 is no reflection and 1 is maximum reflection\n  ///\n```\n\nPlay around with these numbers and let me know how you find it. The reflection distortion actually looks quite nice, as the reflections are very distorted far away, but obvious and good up close. I did find the transparent water to be a bit strange, as shown in the image in the previous comment. The mixture of original thruster and refracted thruster looks a bit strange in my opinion. Otherwise, this should be good!", "markup": "markdown", "html": "<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/474522366-image.png\" />\nIn 1723:<a href=\"#!/osrf/vrx/commits/6a0a23156279\" rel=\"nofollow\" class=\"ap-connect-link\">6a0a23156279</a>, I have made the following changes since:</p>\n<ul>\n<li>Added back transparency in ocean, so the propellers should always be seen</li>\n<li>Updated the sdf parameter names to <code>reflectOpacity</code> and <code>refractOpacity</code> for clarity</li>\n<li>Added sdf parameter <code>rttNoise</code> the scales the amount of distortion</li>\n<li>I made both reflection and refraction distorted</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span>  /// 2. &lt;enableRtt&gt; (bool, default: true)\n  ///    Display reflection and reflections if set to true.\n  ///\n  /// 3. &lt;rttNoise&gt; (double, default: 0.1)\n  ///    Amount of distortion in reflection/refraction.\n  ///\n  /// 4. &lt;refractOpacity&gt; (double, default: 0.2)\n  ///    Ratio between shallow water color and refraction color to use\n  ///    In [0, 1], where 0 is no refraction and 1 is maximum refraction\n  ///\n  /// 5. &lt;reflectOpacity&gt; (double, default: 0.2)\n  ///    Ratio between environment color and reflection color to use\n  ///    In [0, 1], where 0 is no reflection and 1 is maximum reflection\n  ///\n</pre></div>\n\n\n<p>Play around with these numbers and let me know how you find it. The reflection distortion actually looks quite nice, as the reflections are very distorted far away, but obvious and good up close. I did find the transparent water to be a bit strange, as shown in the image in the previous comment. The mixture of original thruster and refracted thruster looks a bit strange in my opinion. Otherwise, this should be good!</p>", "type": "rendered"}, "created_on": "2019-09-05T05:39:02.582593+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-09-05T05:39:02.591464+00:00", "type": "pullrequest_comment", "id": 115694106}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115694182.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115694182"}}, "parent": {"id": 115694106, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115694106.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115694106"}}, "depth": 10}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Still needs changes to #if statements. Can you help me test it out with gz7 and verify the #if works as desired?  \n", "markup": "markdown", "html": "<p>Still needs changes to #if statements. Can you help me test it out with gz7 and verify the #if works as desired?  </p>", "type": "rendered"}, "created_on": "2019-09-05T05:39:59.287555+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-09-05T05:39:59.301078+00:00", "type": "pullrequest_comment", "id": 115694182}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115823221.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115823221"}}, "parent": {"id": 115694182, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115694182.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115694182"}}, "depth": 11}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "done, remove `#if`s [34591dd](#!/osrf/vrx/commits/34591dd56f433c06d00191688a56b9f24993cf79)", "markup": "markdown", "html": "<p>done, remove <code>#if</code>s <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/34591dd56f433c06d00191688a56b9f24993cf79\" rel=\"nofollow\">34591dd</a></p>", "type": "rendered"}, "created_on": "2019-09-05T17:58:45.460988+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-09-05T17:59:06.476944+00:00", "type": "pullrequest_comment", "id": 115823221}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115694596.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115694596"}}, "parent": {"id": 115694106, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115694106.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115694106"}}, "depth": 10}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "@{557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd} from the images you shared here [https://ci.mil.ufl.edu/labelme/datasets/navigator-datasets/](https://ci.mil.ufl.edu/labelme/datasets/navigator-datasets), it seems that the water is not very transparent, which is why I originally removed the ocean transparency. Let me know how the refraction should look. Honestly not sure how it should look, except distorted and slightly offset \\(straight lines have breaks\\)", "markup": "markdown", "html": "<p><span class=\"ap-mention\" data-atlassian-id=\"557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd\">@Carlos Ag\u00fcero</span> from the images you shared here <a data-is-external-link=\"true\" href=\"https://ci.mil.ufl.edu/labelme/datasets/navigator-datasets\" rel=\"nofollow\">https://ci.mil.ufl.edu/labelme/datasets/navigator-datasets/</a>, it seems that the water is not very transparent, which is why I originally removed the ocean transparency. Let me know how the refraction should look. Honestly not sure how it should look, except distorted and slightly offset (straight lines have breaks)</p>", "type": "rendered"}, "created_on": "2019-09-05T05:44:38.161362+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-09-05T05:44:38.175458+00:00", "type": "pullrequest_comment", "id": 115694596}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115694930.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115694930"}}, "parent": {"id": 115694596, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115694596.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115694596"}}, "depth": 11}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Compare by going to materials/scripts/waves.material and commenting out `scene_blend alpha_blend`", "markup": "markdown", "html": "<p>Compare by going to materials/scripts/waves.material and commenting out <code>scene_blend alpha_blend</code></p>", "type": "rendered"}, "created_on": "2019-09-05T05:48:16.218444+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-09-05T05:48:16.227593+00:00", "type": "pullrequest_comment", "id": 115694930}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115695352.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115695352"}}, "parent": {"id": 115694930, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115694930.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115694930"}}, "depth": 12}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "I actually believe that the water should not be transparent, except by refraction. In real life, we don\u2019t see the actual object under water, but we see the \u201crefraction texture\u201d of the object, not a mixture of both. For example, Fresnel effect \u2192 If view water from parallel angle, should so max reflection and min refraction \\(less stuff underwater\\). However, if we have the ocean transparent, then it would still be fully visible still, just not refraction effects on top. Let me know if there is something im missing.", "markup": "markdown", "html": "<p>I actually believe that the water should not be transparent, except by refraction. In real life, we don\u2019t see the actual object under water, but we see the \u201crefraction texture\u201d of the object, not a mixture of both. For example, Fresnel effect \u2192 If view water from parallel angle, should so max reflection and min refraction (less stuff underwater). However, if we have the ocean transparent, then it would still be fully visible still, just not refraction effects on top. Let me know if there is something im missing.</p>", "type": "rendered"}, "created_on": "2019-09-05T05:52:57.009681+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-09-05T05:52:57.021008+00:00", "type": "pullrequest_comment", "id": 115695352}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115696404.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115696404"}}, "parent": {"id": 115695352, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115695352.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115695352"}}, "depth": 13}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "You can test a cylinder, make it tall and skinny and see how it refracts", "markup": "markdown", "html": "<p>You can test a cylinder, make it tall and skinny and see how it refracts</p>", "type": "rendered"}, "created_on": "2019-09-05T06:03:28.125214+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-09-05T06:03:28.135175+00:00", "type": "pullrequest_comment", "id": 115696404}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115822446.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115822446"}}, "parent": {"id": 115695352, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115695352.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115695352"}}, "depth": 13}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "yep the refraction texture should replace the need for a semi-transparent ocean plane. If users choose to set `refractOpacity` to 0, they will get fully opaque ocean. So I think that should be ok. I've removed `scene_blend alpha_blend` from the material script. [34591dd](#!/osrf/vrx/commits/34591dd56f433c06d00191688a56b9f24993cf79)", "markup": "markdown", "html": "<p>yep the refraction texture should replace the need for a semi-transparent ocean plane. If users choose to set <code>refractOpacity</code> to 0, they will get fully opaque ocean. So I think that should be ok. I've removed <code>scene_blend alpha_blend</code> from the material script. <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/34591dd56f433c06d00191688a56b9f24993cf79\" rel=\"nofollow\">34591dd</a></p>", "type": "rendered"}, "created_on": "2019-09-05T17:53:04.595543+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-09-05T17:53:04.605611+00:00", "type": "pullrequest_comment", "id": 115822446}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115488537.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115488537"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Can you also add a new entry in the `Changelog.md`?", "markup": "markdown", "html": "<p>Can you also add a new entry in the <code>Changelog.md</code>?</p>", "type": "rendered"}, "created_on": "2019-09-03T22:12:01.897181+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-09-03T22:12:01.904137+00:00", "type": "pullrequest_comment", "id": 115488537}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115610763.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115610763"}}, "parent": {"id": 115488537, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115488537.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115488537"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Added in [7244f98](#!/osrf/vrx/commits/7244f98a5802dfcb8db0dcd6a129f5aa6b9f232d)", "markup": "markdown", "html": "<p>Added in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/7244f98a5802dfcb8db0dcd6a129f5aa6b9f232d\" rel=\"nofollow\">7244f98</a></p>", "type": "rendered"}, "created_on": "2019-09-04T14:43:55.202589+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-09-04T14:43:55.222533+00:00", "type": "pullrequest_comment", "id": 115610763}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115835683.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115835683"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "All looks good to me. The Pipelines failures are expected because our Docker images still don\u2019t have the updated Gazebo versions.", "markup": "markdown", "html": "<p>All looks good to me. The Pipelines failures are expected because our Docker images still don\u2019t have the updated Gazebo versions.</p>", "type": "rendered"}, "created_on": "2019-09-05T19:42:06.196766+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-09-05T19:43:28.425377+00:00", "type": "pullrequest_comment", "id": 115835683}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115835913.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115835913"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Great work here!", "markup": "markdown", "html": "<p>Great work here!</p>", "type": "rendered"}, "created_on": "2019-09-05T19:44:02.262631+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-09-05T19:44:02.270836+00:00", "type": "pullrequest_comment", "id": 115835913}, {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115837215.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115837215"}}, "parent": {"id": 115835913, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/115835913.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-115835913"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "yeah, great work @{5b96b66385af94340e7cabce} . Thanks for taking this to the finish line!", "markup": "markdown", "html": "<p>yeah, great work <span class=\"ap-mention\" data-atlassian-id=\"5b96b66385af94340e7cabce\">@Tyler Lum</span> . Thanks for taking this to the finish line!</p>", "type": "rendered"}, "created_on": "2019-09-05T19:55:10.474602+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-09-05T19:55:10.559823+00:00", "type": "pullrequest_comment", "id": 115837215}], "page": 1, "size": 93}