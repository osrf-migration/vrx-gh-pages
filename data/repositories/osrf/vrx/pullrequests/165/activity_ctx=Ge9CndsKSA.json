{"pagelen": 50, "values": [{"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114295906.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114295906"}}, "parent": {"id": 114291886, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114291886.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114291886"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Oh i see, when I put in `gzerr << this->data->visual->GetScene()->CameraCount() << std::endl;` into OnRender\\(\\), and run `source ~/vrx_ws/devel/setup.zsh && cd ~/vrx_ws && catkin_make && source ~/vrx_ws/devel/setup.zsh && roslaunch vrx_gazebo vrx.launch verbose:=true` \\(has camera sensors\\) it shows:\n\n```\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n```\n\n when I put in `gzerr << this->data->visual->GetScene()->CameraCount() << std::endl;` into OnRender\\(\\), and run `source ~/vrx_ws/devel/setup.zsh && cd ~/vrx_ws && catkin_make && source ~/vrx_ws/devel/setup.zsh && roslaunch vrx_gazebo vrx.launch verbose:=true` \\(has camera sensors\\) it shows:\n\n```\n[Err] [WavefieldVisualPlugin.cc:333] 0\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 0\n[Err] [WavefieldVisualPlugin.cc:333] 4\n```\n\nThanks! I was always checking in onrender. Not sure why this is, but I am glad it is showing up", "markup": "markdown", "html": "<p>Oh i see, when I put in <code>gzerr &lt;&lt; this-&gt;data-&gt;visual-&gt;GetScene()-&gt;CameraCount() &lt;&lt; std::endl;</code> into OnRender(), and run <code>source ~/vrx_ws/devel/setup.zsh &amp;&amp; cd ~/vrx_ws &amp;&amp; catkin_make &amp;&amp; source ~/vrx_ws/devel/setup.zsh &amp;&amp; roslaunch vrx_gazebo vrx.launch verbose:=true</code> (has camera sensors) it shows:</p>\n<div class=\"codehilite\"><pre><span></span>[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n[Err] [WavefieldVisualPlugin.cc:346] 0\n</pre></div>\n\n\n<p>when I put in <code>gzerr &lt;&lt; this-&gt;data-&gt;visual-&gt;GetScene()-&gt;CameraCount() &lt;&lt; std::endl;</code> into OnRender(), and run <code>source ~/vrx_ws/devel/setup.zsh &amp;&amp; cd ~/vrx_ws &amp;&amp; catkin_make &amp;&amp; source ~/vrx_ws/devel/setup.zsh &amp;&amp; roslaunch vrx_gazebo vrx.launch verbose:=true</code> (has camera sensors) it shows:</p>\n<div class=\"codehilite\"><pre><span></span>[Err] [WavefieldVisualPlugin.cc:333] 0\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 4\n[Err] [WavefieldVisualPlugin.cc:333] 0\n[Err] [WavefieldVisualPlugin.cc:333] 4\n</pre></div>\n\n\n<p>Thanks! I was always checking in onrender. Not sure why this is, but I am glad it is showing up</p>", "type": "rendered"}, "created_on": "2019-08-23T18:32:45.922614+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-23T18:32:45.936073+00:00", "type": "pullrequest_comment", "id": 114295906}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114291886.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114291886"}}, "parent": {"id": 114172268, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114172268.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114172268"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "It does not look like in this example world the WAMV is equipped with a camera sensor? After commenting out the check for user camera and Scene's `EnableVisualizations()` \\(so that the plugin can be loaded on the server side where camera sensors are simulated\\), I inserted a camera sensor myself \\(which forces the scene to be created on the server side\\) and saw that the visual plugin is then loaded and `this->data->visual->GetScene()->CameraCount()` returns 1.\n\nI also suggest checking for new cameras on preRender callback so that so we can generate reflection/refraction for any new cameras added to the scene.", "markup": "markdown", "html": "<p>It does not look like in this example world the WAMV is equipped with a camera sensor? After commenting out the check for user camera and Scene's <code>EnableVisualizations()</code> (so that the plugin can be loaded on the server side where camera sensors are simulated), I inserted a camera sensor myself (which forces the scene to be created on the server side) and saw that the visual plugin is then loaded and <code>this-&gt;data-&gt;visual-&gt;GetScene()-&gt;CameraCount()</code> returns 1.</p>\n<p>I also suggest checking for new cameras on preRender callback so that so we can generate reflection/refraction for any new cameras added to the scene.</p>", "type": "rendered"}, "created_on": "2019-08-23T17:52:13.912059+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-08-23T17:53:24.674032+00:00", "type": "pullrequest_comment", "id": 114291886}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114204045.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114204045"}}, "parent": {"id": 114189074, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114189074.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114189074"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Tried getting the world to get the models, then get the wamv, then get the correct link. However, I can\u2019t even get the world\n\n```\n    auto world = physics::get_world(); // or auto world = physics::get_world(\"robotx_example_course); \n    if (world) { gzerr << \"FOUND w\" << std::endl; }\n    else { gzerr << \"NOT FOUND w\" << std::endl; }\n    gzerr << world->ModelCount() << std::endl;\n    \n[Err] [PhysicsIface.cc:69] no worlds\n[Err] [PhysicsIface.cc:82] Unable to find world by name in physics::get_world[]\n[Err] [PhysicsIface.cc:84] EXCEPTION: Unable to find world by name in physics::get_world(world_name)\n```\n\n[https://bitbucket.org/osrf/gazebo/src/gazebo9\\_9.10.0/gazebo/physics/PhysicsIface.cc](https://bitbucket.org/osrf/gazebo/src/gazebo9_9.10.0/gazebo/physics/PhysicsIface.cc)", "markup": "markdown", "html": "<p>Tried getting the world to get the models, then get the wamv, then get the correct link. However, I can\u2019t even get the world</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"nt\">auto</span> <span class=\"nt\">world</span> <span class=\"o\">=</span> <span class=\"nt\">physics</span><span class=\"p\">::</span><span class=\"nd\">get_world</span><span class=\"o\">();</span> <span class=\"o\">//</span> <span class=\"nt\">or</span> <span class=\"nt\">auto</span> <span class=\"nt\">world</span> <span class=\"o\">=</span> <span class=\"nt\">physics</span><span class=\"p\">::</span><span class=\"nd\">get_world</span><span class=\"o\">(</span><span class=\"s2\">&quot;robotx_example_course); </span>\n<span class=\"s2\">    if (world) { gzerr &lt;&lt; &quot;</span><span class=\"nt\">FOUND</span> <span class=\"nt\">w</span><span class=\"s2\">&quot; &lt;&lt; std::endl; }</span>\n<span class=\"s2\">    else { gzerr &lt;&lt; &quot;</span><span class=\"nt\">NOT</span> <span class=\"nt\">FOUND</span> <span class=\"nt\">w</span><span class=\"err\">&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">endl</span><span class=\"o\">;</span> <span class=\"err\">}</span>\n    <span class=\"nt\">gzerr</span> <span class=\"o\">&lt;&lt;</span> <span class=\"nt\">world-</span><span class=\"o\">&gt;</span><span class=\"nt\">ModelCount</span><span class=\"o\">()</span> <span class=\"o\">&lt;&lt;</span> <span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">endl</span><span class=\"o\">;</span>\n\n<span class=\"cp\">[</span><span class=\"nx\">Err</span><span class=\"cp\">]</span> <span class=\"cp\">[</span><span class=\"nx\">PhysicsIface.cc</span><span class=\"p\">:</span><span class=\"mi\">69</span><span class=\"cp\">]</span> <span class=\"nt\">no</span> <span class=\"nt\">worlds</span>\n<span class=\"cp\">[</span><span class=\"nx\">Err</span><span class=\"cp\">]</span> <span class=\"cp\">[</span><span class=\"nx\">PhysicsIface.cc</span><span class=\"p\">:</span><span class=\"mi\">82</span><span class=\"cp\">]</span> <span class=\"nt\">Unable</span> <span class=\"nt\">to</span> <span class=\"nt\">find</span> <span class=\"nt\">world</span> <span class=\"nt\">by</span> <span class=\"nt\">name</span> <span class=\"nt\">in</span> <span class=\"nt\">physics</span><span class=\"p\">::</span><span class=\"nd\">get_world</span><span class=\"cp\">[]</span>\n<span class=\"cp\">[</span><span class=\"nx\">Err</span><span class=\"cp\">]</span> <span class=\"cp\">[</span><span class=\"nx\">PhysicsIface.cc</span><span class=\"p\">:</span><span class=\"mi\">84</span><span class=\"cp\">]</span> <span class=\"nt\">EXCEPTION</span><span class=\"o\">:</span> <span class=\"nt\">Unable</span> <span class=\"nt\">to</span> <span class=\"nt\">find</span> <span class=\"nt\">world</span> <span class=\"nt\">by</span> <span class=\"nt\">name</span> <span class=\"nt\">in</span> <span class=\"nt\">physics</span><span class=\"p\">::</span><span class=\"nd\">get_world</span><span class=\"o\">(</span><span class=\"nt\">world_name</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<p><a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/gazebo9_9.10.0/gazebo/physics/PhysicsIface.cc\" rel=\"nofollow\">https://bitbucket.org/osrf/gazebo/src/gazebo9_9.10.0/gazebo/physics/PhysicsIface.cc</a></p>", "type": "rendered"}, "created_on": "2019-08-23T08:09:37.587326+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-23T08:09:37.604104+00:00", "type": "pullrequest_comment", "id": 114204045}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114189074.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114189074"}}, "parent": {"id": 114188344, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114188344.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114188344"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Tried [https://bitbucket.org/osrf/gazebo/src/default/gazebo/sensors/SensorsIface.hh](https://bitbucket.org/osrf/gazebo/src/default/gazebo/sensors/SensorsIface.hh), but does the same thing. Actually uses the same source code.", "markup": "markdown", "html": "<p>Tried <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/default/gazebo/sensors/SensorsIface.hh\" rel=\"nofollow\">https://bitbucket.org/osrf/gazebo/src/default/gazebo/sensors/SensorsIface.hh</a>, but does the same thing. Actually uses the same source code.</p>", "type": "rendered"}, "created_on": "2019-08-23T06:21:45.216747+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-23T06:21:45.227893+00:00", "type": "pullrequest_comment", "id": 114189074}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114188344.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114188344"}}, "parent": {"id": 114172268, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114172268.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114172268"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "I tried out using the SensorManager, using\n\n`gazebo::sensors::SensorManager::Instance()` and trying out these functions with vrx.launch \\(has sensors\\)\n\n```\n      /// \\brief Get all the sensor types\n      /// \\param[out] All the sensor types.\n      public: void GetSensorTypes(std::vector<std::string> &_types)\n\n      /// \\return Vector of all the sensors.\n      public: Sensor_V GetSensors() const;\n\n      /// \\brief Get whether there's at least one sensor container running.\n      /// \\return True if running.\n      public: bool Running() const;\n```\n\nThey showed 0 sensors and not running. I ran that check in the OnRender function checking continuously, perhaps I need to init or there is a different way for me to access the sensors.\n\n\u200c\n\nI also tried adding `gazebo::sensors::SensorManager::Instance()::Init()` in Load\\(\\) with no change.", "markup": "markdown", "html": "<p>I tried out using the SensorManager, using</p>\n<p><code>gazebo::sensors::SensorManager::Instance()</code> and trying out these functions with vrx.launch (has sensors)</p>\n<div class=\"codehilite\"><pre><span></span>      <span class=\"o\">///</span> <span class=\"err\">\\</span><span class=\"nt\">brief</span> <span class=\"nt\">Get</span> <span class=\"nt\">all</span> <span class=\"nt\">the</span> <span class=\"nt\">sensor</span> <span class=\"nt\">types</span>\n      <span class=\"o\">///</span> <span class=\"err\">\\</span><span class=\"nt\">param</span><span class=\"cp\">[</span><span class=\"nx\">out</span><span class=\"cp\">]</span> <span class=\"nt\">All</span> <span class=\"nt\">the</span> <span class=\"nt\">sensor</span> <span class=\"nt\">types</span><span class=\"o\">.</span>\n      <span class=\"nt\">public</span><span class=\"o\">:</span> <span class=\"nt\">void</span> <span class=\"nt\">GetSensorTypes</span><span class=\"o\">(</span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">vector</span><span class=\"o\">&lt;</span><span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">string</span><span class=\"o\">&gt;</span> <span class=\"o\">&amp;</span><span class=\"nt\">_types</span><span class=\"o\">)</span>\n\n      <span class=\"o\">///</span> <span class=\"err\">\\</span><span class=\"nt\">return</span> <span class=\"nt\">Vector</span> <span class=\"nt\">of</span> <span class=\"nt\">all</span> <span class=\"nt\">the</span> <span class=\"nt\">sensors</span><span class=\"o\">.</span>\n      <span class=\"nt\">public</span><span class=\"o\">:</span> <span class=\"nt\">Sensor_V</span> <span class=\"nt\">GetSensors</span><span class=\"o\">()</span> <span class=\"nt\">const</span><span class=\"o\">;</span>\n\n      <span class=\"o\">///</span> <span class=\"err\">\\</span><span class=\"nt\">brief</span> <span class=\"nt\">Get</span> <span class=\"nt\">whether</span> <span class=\"nt\">there</span><span class=\"err\">&#39;</span><span class=\"nt\">s</span> <span class=\"nt\">at</span> <span class=\"nt\">least</span> <span class=\"nt\">one</span> <span class=\"nt\">sensor</span> <span class=\"nt\">container</span> <span class=\"nt\">running</span><span class=\"o\">.</span>\n      <span class=\"o\">///</span> <span class=\"err\">\\</span><span class=\"nt\">return</span> <span class=\"nt\">True</span> <span class=\"nt\">if</span> <span class=\"nt\">running</span><span class=\"o\">.</span>\n      <span class=\"nt\">public</span><span class=\"o\">:</span> <span class=\"nt\">bool</span> <span class=\"nt\">Running</span><span class=\"o\">()</span> <span class=\"nt\">const</span><span class=\"o\">;</span>\n</pre></div>\n\n\n<p>They showed 0 sensors and not running. I ran that check in the OnRender function checking continuously, perhaps I need to init or there is a different way for me to access the sensors.</p>\n<p>\u200c</p>\n<p>I also tried adding <code>gazebo::sensors::SensorManager::Instance()::Init()</code> in Load() with no change.</p>", "type": "rendered"}, "created_on": "2019-08-23T06:15:06.233055+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-23T06:19:12.856643+00:00", "type": "pullrequest_comment", "id": 114188344}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114174729.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114174729"}}, "parent": {"id": 114169902, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114169902.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114169902"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "We support two combinations:\n\n* Gazebo 9 \\+ ROS Melodic\n* Gazebo 7 \\+ ROS Kinectic\n\n", "markup": "markdown", "html": "<p>We support two combinations:</p>\n<ul>\n<li>Gazebo 9 + ROS Melodic</li>\n<li>Gazebo 7 + ROS Kinectic</li>\n</ul>", "type": "rendered"}, "created_on": "2019-08-23T02:10:00.288305+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-08-23T02:10:00.297194+00:00", "type": "pullrequest_comment", "id": 114174729}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114172268.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114172268"}}, "parent": {"id": 114170957, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114170957.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114170957"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "I believe this can be done with the gazebo sensor manager. [https://bitbucket.org/osrf/gazebo/src/default/gazebo/sensors/SensorManager.hh](https://bitbucket.org/osrf/gazebo/src/default/gazebo/sensors/SensorManager.hh) I will try this out later tonight", "markup": "markdown", "html": "<p>I believe this can be done with the gazebo sensor manager. <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/default/gazebo/sensors/SensorManager.hh\" rel=\"nofollow\">https://bitbucket.org/osrf/gazebo/src/default/gazebo/sensors/SensorManager.hh</a> I will try this out later tonight</p>", "type": "rendered"}, "created_on": "2019-08-23T01:23:53.932932+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-23T01:24:18.928512+00:00", "type": "pullrequest_comment", "id": 114172268}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114171843.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114171843"}}, "parent": {"id": 114168461, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114168461.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114168461"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "in 1624:c26560f70d1f, needed to offset visual below slightly so that there would not be cutting in/out of the visual. ", "markup": "markdown", "html": "<p>in 1624:<a href=\"#!/osrf/vrx/commits/c26560f70d1f\" rel=\"nofollow\" class=\"ap-connect-link\">c26560f70d1f</a>, needed to offset visual below slightly so that there would not be cutting in/out of the visual. </p>", "type": "rendered"}, "created_on": "2019-08-23T01:15:05.534197+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-23T01:15:05.543503+00:00", "type": "pullrequest_comment", "id": 114171843}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114171806.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114171806"}}, "parent": {"id": 114170974, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114170974.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114170974"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "It worked perfectly, fixed 1625:e2534638329c", "markup": "markdown", "html": "<p>It worked perfectly, fixed 1625:<a href=\"#!/osrf/vrx/commits/e2534638329c\" rel=\"nofollow\" class=\"ap-connect-link\">e2534638329c</a></p>", "type": "rendered"}, "created_on": "2019-08-23T01:14:16.754590+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-23T01:14:16.764121+00:00", "type": "pullrequest_comment", "id": 114171806}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"update": {"description": "The purpose of this PR is to take the knowledge and experimentation learned from [#!/osrf/vrx/pull-requests/161](#!/osrf/vrx/pull-requests/161) to integrate ocean reflections to the existing wave shaders.", "title": "Issue#122 Ocean Reflections", "destination": {"commit": {"hash": "0054227c6d6b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/0054227c6d6b.json"}, "html": {"href": "#!/osrf/vrx/commits/0054227c6d6b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "e2534638329c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/e2534638329c.json"}, "html": {"href": "#!/osrf/vrx/commits/e2534638329c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#122-Ocean-Reflections"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-23T01:13:48.051249+00:00"}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"update": {"description": "The purpose of this PR is to take the knowledge and experimentation learned from [#!/osrf/vrx/pull-requests/161](#!/osrf/vrx/pull-requests/161) to integrate ocean reflections to the existing wave shaders.", "title": "Issue#122 Ocean Reflections", "destination": {"commit": {"hash": "0054227c6d6b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/0054227c6d6b.json"}, "html": {"href": "#!/osrf/vrx/commits/0054227c6d6b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "c26560f70d1f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/c26560f70d1f.json"}, "html": {"href": "#!/osrf/vrx/commits/c26560f70d1f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#122-Ocean-Reflections"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-23T01:11:36.321788+00:00"}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114170974.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114170974"}}, "parent": {"id": 114169805, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114169805.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114169805"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Great I will try this out.", "markup": "markdown", "html": "<p>Great I will try this out.</p>", "type": "rendered"}, "created_on": "2019-08-23T00:55:00.241236+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-23T00:55:00.249420+00:00", "type": "pullrequest_comment", "id": 114170974}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114170957.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114170957"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "@{557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5} I am getting started on getting the reflections to work on cameras sensors. I am trying to find a way to get a list of the sensors, but I can\u2019t find it. What i have tried:\n\nthis->data->visual->GetScene\\(\\)->CameraCount\\(\\)\n\nthis->data->visual->GetScene\\(\\)->UserCameraCount\\(\\)\n\n\u200c\n\nthis->data->visual->GetNthAncestor\\(0\\)->GetScene\\(\\)->CameraCount\\(\\)\n\nthis->data->visual->GetNthAncestor\\(0\\)->GetScene\\(\\)->UserCameraCount\\(\\)\n\n\u200c\n\nthis->data->visual->GetRootVisual\\(\\)->GetScene\\(\\)->->CameraCount\\(\\)\n\nthis->data->visual->GetRootVisual\\(\\)->GetScene\\(\\)->UserCameraCount\\(\\)\n\n\u200c\n\nIt always outputs 0 for cameras and 1 for user cameras, even when there are camera sensors existing on the WAM-V. Is there a way to access a list of sensors or a list of models in gazebo?", "markup": "markdown", "html": "<p><span class=\"ap-mention\" data-atlassian-id=\"557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5\">@Ian Chen</span> I am getting started on getting the reflections to work on cameras sensors. I am trying to find a way to get a list of the sensors, but I can\u2019t find it. What i have tried:</p>\n<p>this-&gt;data-&gt;visual-&gt;GetScene()-&gt;CameraCount()</p>\n<p>this-&gt;data-&gt;visual-&gt;GetScene()-&gt;UserCameraCount()</p>\n<p>\u200c</p>\n<p>this-&gt;data-&gt;visual-&gt;GetNthAncestor(0)-&gt;GetScene()-&gt;CameraCount()</p>\n<p>this-&gt;data-&gt;visual-&gt;GetNthAncestor(0)-&gt;GetScene()-&gt;UserCameraCount()</p>\n<p>\u200c</p>\n<p>this-&gt;data-&gt;visual-&gt;GetRootVisual()-&gt;GetScene()-&gt;-&gt;CameraCount()</p>\n<p>this-&gt;data-&gt;visual-&gt;GetRootVisual()-&gt;GetScene()-&gt;UserCameraCount()</p>\n<p>\u200c</p>\n<p>It always outputs 0 for cameras and 1 for user cameras, even when there are camera sensors existing on the WAM-V. Is there a way to access a list of sensors or a list of models in gazebo?</p>", "type": "rendered"}, "created_on": "2019-08-23T00:54:44.854442+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-23T00:54:44.866645+00:00", "type": "pullrequest_comment", "id": 114170957}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114169902.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114169902"}}, "parent": {"id": 114168958, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114168958.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114168958"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "this maybe a question for @{557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd} . Does vrx need to support legacy versions of Gazebo?", "markup": "markdown", "html": "<p>this maybe a question for <span class=\"ap-mention\" data-atlassian-id=\"557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd\">@Carlos Ag\u00fcero</span> . Does vrx need to support legacy versions of Gazebo?</p>", "type": "rendered"}, "created_on": "2019-08-23T00:32:18.833686+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-08-23T00:32:18.845728+00:00", "type": "pullrequest_comment", "id": 114169902}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114169805.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114169805"}}, "parent": {"id": 114165596, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114165596.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114165596"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "About the missing propellers, it's a common problem with semi-transparent objects \\(at least in ogre\\). Semi-transparent objects are usually drawn after opaque objects. In this case, the engine does not know that the ocean is semi-transparent since we're setting the alpha value ourselves in the shaders. To workaround this, you can manually set its render queue, something like `this->data->planeEntity->setRenderQueueGroup(this->data->planeEntity->getRenderQueueGroup()+1);`", "markup": "markdown", "html": "<p>About the missing propellers, it's a common problem with semi-transparent objects (at least in ogre). Semi-transparent objects are usually drawn after opaque objects. In this case, the engine does not know that the ocean is semi-transparent since we're setting the alpha value ourselves in the shaders. To workaround this, you can manually set its render queue, something like <code>this-&gt;data-&gt;planeEntity-&gt;setRenderQueueGroup(this-&gt;data-&gt;planeEntity-&gt;getRenderQueueGroup()+1);</code></p>", "type": "rendered"}, "created_on": "2019-08-23T00:30:11.582400+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-08-23T00:31:13.517992+00:00", "type": "pullrequest_comment", "id": 114169805}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114168991.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114168991"}}, "parent": {"id": 114168902, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114168902.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114168902"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Oh I see, I will try this out. I really hope I can get this part working", "markup": "markdown", "html": "<p>Oh I see, I will try this out. I really hope I can get this part working</p>", "type": "rendered"}, "created_on": "2019-08-23T00:12:29.739391+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-23T00:12:29.750654+00:00", "type": "pullrequest_comment", "id": 114168991}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114168958.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114168958"}}, "parent": {"id": 114168824, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114168824.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114168824"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "In the Gazbo.hh file, it says:\n\n```\n/// \\file Gazebo.hh\n/// \\brief Support for methods not available in legacy versions of Gazebo.\n```\n\nthis makes sense, but I just don\u2019t understand what #if 0 is for. I believe this code is not even compiled, can I remove it or is it useful?", "markup": "markdown", "html": "<p>In the Gazbo.hh file, it says:</p>\n<div class=\"codehilite\"><pre><span></span>/// \\file Gazebo.hh\n/// \\brief Support for methods not available in legacy versions of Gazebo.\n</pre></div>\n\n\n<p>this makes sense, but I just don\u2019t understand what #if 0 is for. I believe this code is not even compiled, can I remove it or is it useful?</p>", "type": "rendered"}, "created_on": "2019-08-23T00:11:53.328093+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-23T00:11:53.336717+00:00", "type": "pullrequest_comment", "id": 114168958}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114168902.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114168902"}}, "parent": {"id": 114168725, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114168725.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114168725"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "I have not tested but in the `pre/postRenderTargetUpdate` function, you could do something like `if (rte.source == this->data->reflectionRt0)`", "markup": "markdown", "html": "<p>I have not tested but in the <code>pre/postRenderTargetUpdate</code> function, you could do something like <code>if (rte.source == this-&gt;data-&gt;reflectionRt0)</code></p>", "type": "rendered"}, "created_on": "2019-08-23T00:10:35.686943+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-08-23T00:10:35.696527+00:00", "type": "pullrequest_comment", "id": 114168902}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114168868.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114168868"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Summary of current status: \n\n* TODOs above 1-3 are complete\n\n    * Only remaining would be to make the reflection more dependent on amount of waves, which could be done but is more optional. Easier to just tune the current parameters\n    \n* TODO 4 is a big task that I would like to try to finish \\(make the reflections work for camera sensors\n* Question above about propellers not shown\n* Question above about `#if 0` code in the plugin\n\n", "markup": "markdown", "html": "<p>Summary of current status: </p>\n<ul>\n<li>\n<p>TODOs above 1-3 are complete</p>\n<ul>\n<li>Only remaining would be to make the reflection more dependent on amount of waves, which could be done but is more optional. Easier to just tune the current parameters</li>\n</ul>\n</li>\n<li>\n<p>TODO 4 is a big task that I would like to try to finish (make the reflections work for camera sensors</p>\n</li>\n<li>Question above about propellers not shown</li>\n<li>Question above about <code>#if 0</code> code in the plugin</li>\n</ul>", "type": "rendered"}, "created_on": "2019-08-23T00:09:50.690755+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-23T00:09:50.697766+00:00", "type": "pullrequest_comment", "id": 114168868}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114168824.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114168824"}}, "parent": {"id": 114166374, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114166374.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114166374"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "I see that the `SetMaterialShaderParam` function defined [Gazebo.cc](#!/osrf/vrx/src/189614cd2e275e059320f68578adbf7859729139/wave_gazebo_plugins/src/Gazebo.cc#lines-33) in this repo, and it looks just like a copy of the one in [Visual.cc](https://bitbucket.org/osrf/gazebo/src/2b59492f96fcf121b33f290fd5cf0b70b42f4e22/gazebo/rendering/Visual.cc#lines-1128). I wonder if the original author of the plugin had problem using the version in gazebo and had to duplicate here. The code looks very similar to me though.", "markup": "markdown", "html": "<p>I see that the <code>SetMaterialShaderParam</code> function defined <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/src/189614cd2e275e059320f68578adbf7859729139/wave_gazebo_plugins/src/Gazebo.cc#lines-33\" rel=\"nofollow\">Gazebo.cc</a> in this repo, and it looks just like a copy of the one in <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/2b59492f96fcf121b33f290fd5cf0b70b42f4e22/gazebo/rendering/Visual.cc#lines-1128\" rel=\"nofollow\">Visual.cc</a>. I wonder if the original author of the plugin had problem using the version in gazebo and had to duplicate here. The code looks very similar to me though.</p>", "type": "rendered"}, "created_on": "2019-08-23T00:08:51.983643+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-08-23T00:09:00.235957+00:00", "type": "pullrequest_comment", "id": 114168824}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114168725.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114168725"}}, "parent": {"id": 114159470, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114159470.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114159470"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "I see. Thank you for the information. I am finished up 1-3 now, so I would like to try to work on this and see if it is doable. I understand how I will get the camera and make the textures. My only question is how do I know which texture to set it to. Eg. If i have 2 cameras, there would be `reflectTex->setTexture(reflectionTextureForCamera0)` and `reflectTex->setTexture(reflectionTextureForCamera1)`. Is there a way for me to know which one to set the texture to? ", "markup": "markdown", "html": "<p>I see. Thank you for the information. I am finished up 1-3 now, so I would like to try to work on this and see if it is doable. I understand how I will get the camera and make the textures. My only question is how do I know which texture to set it to. Eg. If i have 2 cameras, there would be <code>reflectTex-&gt;setTexture(reflectionTextureForCamera0)</code> and <code>reflectTex-&gt;setTexture(reflectionTextureForCamera1)</code>. Is there a way for me to know which one to set the texture to? </p>", "type": "rendered"}, "created_on": "2019-08-23T00:06:43.258728+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-23T00:06:43.268269+00:00", "type": "pullrequest_comment", "id": 114168725}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114168461.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114168461"}}, "parent": {"id": 114156147, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114156147.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114156147"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "\\(1\\) In changeset:   1623:189614cd2e27, I Added back ocean\\_waves\\_below\\_visual, without Visual Plugin, working as expected.\n\n![](data/bitbucket.org/repo/BgXLzgM/images/2643693318-image.png)\n", "markup": "markdown", "html": "<p>(1) In changeset:   1623:<a href=\"#!/osrf/vrx/commits/189614cd2e27\" rel=\"nofollow\" class=\"ap-connect-link\">189614cd2e27</a>, I Added back ocean_waves_below_visual, without Visual Plugin, working as expected.</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/2643693318-image.png\" /></p>", "type": "rendered"}, "created_on": "2019-08-23T00:01:09.153793+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-23T00:01:09.163319+00:00", "type": "pullrequest_comment", "id": 114168461}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"update": {"description": "The purpose of this PR is to take the knowledge and experimentation learned from [#!/osrf/vrx/pull-requests/161](#!/osrf/vrx/pull-requests/161) to integrate ocean reflections to the existing wave shaders.", "title": "Issue#122 Ocean Reflections", "destination": {"commit": {"hash": "0054227c6d6b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/0054227c6d6b.json"}, "html": {"href": "#!/osrf/vrx/commits/0054227c6d6b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "189614cd2e27", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/189614cd2e27.json"}, "html": {"href": "#!/osrf/vrx/commits/189614cd2e27"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#122-Ocean-Reflections"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-23T00:00:00.086237+00:00"}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114168155.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114168155"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "The reflection and refraction amount are settable in the model.xacro file like so:\n\n```\n    <plugin name=\"ocean_waves_visual_plugin\" filename=\"libWavefieldVisualPlugin.so\">\n      <shallowRefractRatio>0.2</shallowRefractRatio>\n      <envReflectRatio>0.2</envReflectRatio>\n      <wave>\n```\n\nDocumented in the header:\n\n```\n  /// 2. <shallowRefractRatio> (double, default: 0.2)\n  ///   Ratio between shallow water color and refraction color to use\n  ///   In [0, 1], where 0 is no refraction and 1 is maximum refraction\n  ///\n  /// 3. <envReflectRatio> (double, default: 0.2)\n  ///    Ratio between environment color and reflection color to use\n  ///    In [0, 1], where 0 is no reflection and 1 is maximum reflection\n```", "markup": "markdown", "html": "<p>The reflection and refraction amount are settable in the model.xacro file like so:</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&quot;ocean_waves_visual_plugin&quot;</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;libWavefieldVisualPlugin.so&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;shallowRefractRatio&gt;</span>0.2<span class=\"nt\">&lt;/shallowRefractRatio&gt;</span>\n      <span class=\"nt\">&lt;envReflectRatio&gt;</span>0.2<span class=\"nt\">&lt;/envReflectRatio&gt;</span>\n      <span class=\"nt\">&lt;wave&gt;</span>\n</pre></div>\n\n\n<p>Documented in the header:</p>\n<div class=\"codehilite\"><pre><span></span>  /// 2. &lt;shallowRefractRatio&gt; (double, default: 0.2)\n  ///   Ratio between shallow water color and refraction color to use\n  ///   In [0, 1], where 0 is no refraction and 1 is maximum refraction\n  ///\n  /// 3. &lt;envReflectRatio&gt; (double, default: 0.2)\n  ///    Ratio between environment color and reflection color to use\n  ///    In [0, 1], where 0 is no reflection and 1 is maximum reflection\n</pre></div>", "type": "rendered"}, "created_on": "2019-08-22T23:55:35.268318+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-22T23:55:35.275716+00:00", "type": "pullrequest_comment", "id": 114168155}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"update": {"description": "The purpose of this PR is to take the knowledge and experimentation learned from [#!/osrf/vrx/pull-requests/161](#!/osrf/vrx/pull-requests/161) to integrate ocean reflections to the existing wave shaders.", "title": "Issue#122 Ocean Reflections", "destination": {"commit": {"hash": "0054227c6d6b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/0054227c6d6b.json"}, "html": {"href": "#!/osrf/vrx/commits/0054227c6d6b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "413a21101bbf", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/413a21101bbf.json"}, "html": {"href": "#!/osrf/vrx/commits/413a21101bbf"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#122-Ocean-Reflections"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-22T23:55:09.798503+00:00"}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"update": {"description": "The purpose of this PR is to take the knowledge and experimentation learned from [#!/osrf/vrx/pull-requests/161](#!/osrf/vrx/pull-requests/161) to integrate ocean reflections to the existing wave shaders.", "title": "Issue#122 Ocean Reflections", "destination": {"commit": {"hash": "0054227c6d6b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/0054227c6d6b.json"}, "html": {"href": "#!/osrf/vrx/commits/0054227c6d6b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "8a3e9e315809", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/8a3e9e315809.json"}, "html": {"href": "#!/osrf/vrx/commits/8a3e9e315809"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#122-Ocean-Reflections"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-22T23:45:48.799803+00:00"}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"update": {"description": "The purpose of this PR is to take the knowledge and experimentation learned from [#!/osrf/vrx/pull-requests/161](#!/osrf/vrx/pull-requests/161) to integrate ocean reflections to the existing wave shaders.", "title": "Issue#122 Ocean Reflections", "destination": {"commit": {"hash": "0054227c6d6b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/0054227c6d6b.json"}, "html": {"href": "#!/osrf/vrx/commits/0054227c6d6b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "7f3bf3fc214d", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/7f3bf3fc214d.json"}, "html": {"href": "#!/osrf/vrx/commits/7f3bf3fc214d"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#122-Ocean-Reflections"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-22T23:44:19.563901+00:00"}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114166374.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114166374"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "I have a question about something in the C\\+\\+ code. In numerous sections I see something like\n\n```\n#if 0\n      this->data->visual->SetMaterialShaderParam(\n        \"time\", shaderType, std::to_string(simTime));\n#else\n      auto simTime = this->data->visual->GetScene()->SimTime();\n      rendering::SetMaterialShaderParam(*this->data->visual,\n        \"time\", \"vertex\",\n        std::to_string(static_cast<float>(simTime.Double())));\n#endif\n```\n\nI understand there are if/else checks depending on GZ version, but can I simply remove these ones that always do the else statement?", "markup": "markdown", "html": "<p>I have a question about something in the C++ code. In numerous sections I see something like</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">#</span><span class=\"nn\">if</span> <span class=\"nt\">0</span>\n      <span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">visual-</span><span class=\"o\">&gt;</span><span class=\"nt\">SetMaterialShaderParam</span><span class=\"o\">(</span>\n        <span class=\"s2\">&quot;time&quot;</span><span class=\"o\">,</span> <span class=\"nt\">shaderType</span><span class=\"o\">,</span> <span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">to_string</span><span class=\"o\">(</span><span class=\"nt\">simTime</span><span class=\"o\">));</span>\n<span class=\"p\">#</span><span class=\"nn\">else</span>\n      <span class=\"nt\">auto</span> <span class=\"nt\">simTime</span> <span class=\"o\">=</span> <span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">visual-</span><span class=\"o\">&gt;</span><span class=\"nt\">GetScene</span><span class=\"o\">()</span><span class=\"nt\">-</span><span class=\"o\">&gt;</span><span class=\"nt\">SimTime</span><span class=\"o\">();</span>\n      <span class=\"nt\">rendering</span><span class=\"p\">::</span><span class=\"nd\">SetMaterialShaderParam</span><span class=\"o\">(*</span><span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">visual</span><span class=\"o\">,</span>\n        <span class=\"s2\">&quot;time&quot;</span><span class=\"o\">,</span> <span class=\"s2\">&quot;vertex&quot;</span><span class=\"o\">,</span>\n        <span class=\"nt\">std</span><span class=\"p\">::</span><span class=\"nd\">to_string</span><span class=\"o\">(</span><span class=\"nt\">static_cast</span><span class=\"o\">&lt;</span><span class=\"nt\">float</span><span class=\"o\">&gt;(</span><span class=\"nt\">simTime</span><span class=\"p\">.</span><span class=\"nc\">Double</span><span class=\"o\">())));</span>\n<span class=\"p\">#</span><span class=\"nn\">endif</span>\n</pre></div>\n\n\n<p>I understand there are if/else checks depending on GZ version, but can I simply remove these ones that always do the else statement?</p>", "type": "rendered"}, "created_on": "2019-08-22T23:21:37.046236+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-22T23:23:38.656505+00:00", "type": "pullrequest_comment", "id": 114166374}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"update": {"description": "The purpose of this PR is to take the knowledge and experimentation learned from [#!/osrf/vrx/pull-requests/161](#!/osrf/vrx/pull-requests/161) to integrate ocean reflections to the existing wave shaders.", "title": "Issue#122 Ocean Reflections", "destination": {"commit": {"hash": "0054227c6d6b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/0054227c6d6b.json"}, "html": {"href": "#!/osrf/vrx/commits/0054227c6d6b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "24861acb73f2", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/24861acb73f2.json"}, "html": {"href": "#!/osrf/vrx/commits/24861acb73f2"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#122-Ocean-Reflections"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-22T23:15:50.043829+00:00"}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"update": {"description": "The purpose of this PR is to take the knowledge and experimentation learned from [#!/osrf/vrx/pull-requests/161](#!/osrf/vrx/pull-requests/161) to integrate ocean reflections to the existing wave shaders.", "title": "Issue#122 Ocean Reflections", "destination": {"commit": {"hash": "0054227c6d6b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/0054227c6d6b.json"}, "html": {"href": "#!/osrf/vrx/commits/0054227c6d6b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "19295a31137a", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/19295a31137a.json"}, "html": {"href": "#!/osrf/vrx/commits/19295a31137a"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#122-Ocean-Reflections"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-22T23:12:22.106736+00:00"}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114165596.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114165596"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "This image is from default. Is there a reason why the propellers aren\u2019t showing? They show up when you view from below, but can\u2019t be seen here.\n\n![](data/bitbucket.org/repo/BgXLzgM/images/1698495362-image_2.png)\n\u200c\n\n![](data/bitbucket.org/repo/BgXLzgM/images/3339592680-image.png)\n\u200c\n\nChecking older commits like hg update ebce412, nothing is shown at all. I just find it a bit strange that just propellers are not being shown. They are there \\(eg. when I turn on refraction to be high, I see them clearly\\), but not seen.\n\n![](data/bitbucket.org/repo/BgXLzgM/images/2092780129-image_3.png)\n\u200c\n\n@{557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1} do you have any idea where this is from? I looked at a very old commit and it used to now show anything below the water \\(", "markup": "markdown", "html": "<p>This image is from default. Is there a reason why the propellers aren\u2019t showing? They show up when you view from below, but can\u2019t be seen here.</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1698495362-image_2.png\" />\n\u200c</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3339592680-image.png\" />\n\u200c</p>\n<p>Checking older commits like hg update <a href=\"#!/osrf/vrx/commits/ebce412\" rel=\"nofollow\" class=\"ap-connect-link\">ebce412</a>, nothing is shown at all. I just find it a bit strange that just propellers are not being shown. They are there (eg. when I turn on refraction to be high, I see them clearly), but not seen.</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/2092780129-image_3.png\" />\n\u200c</p>\n<p><span class=\"ap-mention\" data-atlassian-id=\"557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1\">@Brian Bingham</span> do you have any idea where this is from? I looked at a very old commit and it used to now show anything below the water (</p>", "type": "rendered"}, "created_on": "2019-08-22T23:05:33.770916+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-22T23:09:09.165643+00:00", "type": "pullrequest_comment", "id": 114165596}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"update": {"description": "The purpose of this PR is to take the knowledge and experimentation learned from [#!/osrf/vrx/pull-requests/161](#!/osrf/vrx/pull-requests/161) to integrate ocean reflections to the existing wave shaders.", "title": "Issue#122 Ocean Reflections", "destination": {"commit": {"hash": "a3370ca6cf2c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/a3370ca6cf2c.json"}, "html": {"href": "#!/osrf/vrx/commits/a3370ca6cf2c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "4c4feb15eddf", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/4c4feb15eddf.json"}, "html": {"href": "#!/osrf/vrx/commits/4c4feb15eddf"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#122-Ocean-Reflections"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-22T22:50:09.486178+00:00"}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114159470.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114159470"}}, "parent": {"id": 114151987, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114151987.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114151987"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "yeah in the \\``etupReflectionRefraction ` function, it's hardcoded to apply the effect to the user camera only. I originally added that check to simplify the problem. To get it working for camera sensors, you may have to track all cameras in the scene and create a render texture for each of them since each camera sees the reflection differently.  You'll then need to update the ocean material\u2019s textures on every preRenderUpdate \\(e.g. `reflectTex->setTexture(reflectionTextureForCameraX)`\\) to make sure the ocean is rendered using the right reflection/refraction texture for that the camera associated with the current render target.\n\nIt\u2019s a stretch goal. I suggest focusing on 1-3 for now.", "markup": "markdown", "html": "<p>yeah in the `<code>etupReflectionRefraction</code> function, it's hardcoded to apply the effect to the user camera only. I originally added that check to simplify the problem. To get it working for camera sensors, you may have to track all cameras in the scene and create a render texture for each of them since each camera sees the reflection differently.  You'll then need to update the ocean material\u2019s textures on every preRenderUpdate (e.g. <code>reflectTex-&gt;setTexture(reflectionTextureForCameraX)</code>) to make sure the ocean is rendered using the right reflection/refraction texture for that the camera associated with the current render target.</p>\n<p>It\u2019s a stretch goal. I suggest focusing on 1-3 for now.</p>", "type": "rendered"}, "created_on": "2019-08-22T21:34:30.795781+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-08-22T21:34:30.808858+00:00", "type": "pullrequest_comment", "id": 114159470}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114156147.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114156147"}}, "parent": {"id": 114148515, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114148515.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114148515"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "In 1611:173ef317af11, more subtle effects\n\n![](data/bitbucket.org/repo/BgXLzgM/images/3211707776-image.png)\n![](data/bitbucket.org/repo/BgXLzgM/images/1336140944-image.png)\n![](data/bitbucket.org/repo/BgXLzgM/images/628494674-image.png)\n", "markup": "markdown", "html": "<p>In 1611:<a href=\"#!/osrf/vrx/commits/173ef317af11\" rel=\"nofollow\" class=\"ap-connect-link\">173ef317af11</a>, more subtle effects</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3211707776-image.png\" />\n<img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1336140944-image.png\" />\n<img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/628494674-image.png\" /></p>", "type": "rendered"}, "created_on": "2019-08-22T21:00:34.263054+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-22T21:00:34.276013+00:00", "type": "pullrequest_comment", "id": 114156147}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"update": {"description": "The purpose of this PR is to take the knowledge and experimentation learned from [#!/osrf/vrx/pull-requests/161](#!/osrf/vrx/pull-requests/161) to integrate ocean reflections to the existing wave shaders.", "title": "Issue#122 Ocean Reflections", "destination": {"commit": {"hash": "a3370ca6cf2c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/a3370ca6cf2c.json"}, "html": {"href": "#!/osrf/vrx/commits/a3370ca6cf2c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "173ef317af11", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/173ef317af11.json"}, "html": {"href": "#!/osrf/vrx/commits/173ef317af11"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#122-Ocean-Reflections"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-22T20:58:04.976402+00:00"}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113996289.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113996289"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "In 1610:1000dada03b7, I was able to resolve some material issues and get the waves integrated with the reflections and refractions, the results are much better!\n\n![](data/bitbucket.org/repo/BgXLzgM/images/1574632031-image.png)\nRefraction included\n\n![](data/bitbucket.org/repo/BgXLzgM/images/345191923-image.png)\nRefraction excluded", "markup": "markdown", "html": "<p>In 1610:<a href=\"#!/osrf/vrx/commits/1000dada03b7\" rel=\"nofollow\" class=\"ap-connect-link\">1000dada03b7</a>, I was able to resolve some material issues and get the waves integrated with the reflections and refractions, the results are much better!</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1574632031-image.png\" />\nRefraction included</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/345191923-image.png\" />\nRefraction excluded</p>", "type": "rendered"}, "created_on": "2019-08-22T02:02:39.419897+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-22T20:26:58.984448+00:00", "type": "pullrequest_comment", "id": 113996289}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"update": {"description": "The purpose of this PR is to take the knowledge and experimentation learned from [#!/osrf/vrx/pull-requests/161](#!/osrf/vrx/pull-requests/161) to integrate ocean reflections to the existing wave shaders.", "title": "Issue#122 Ocean Reflections", "destination": {"commit": {"hash": "a3370ca6cf2c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/a3370ca6cf2c.json"}, "html": {"href": "#!/osrf/vrx/commits/a3370ca6cf2c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "1000dada03b7", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/1000dada03b7.json"}, "html": {"href": "#!/osrf/vrx/commits/1000dada03b7"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Issue#122-Ocean-Reflections"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-22T20:26:37.745805+00:00"}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114151987.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114151987"}}, "parent": {"id": 114151361, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114151361.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114151361"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "\\(4\\) The camera image shows this. The simulation looks completely fine, but the camera must not be finding the texture. It might be related to how we define the camera used for rendering to texture. This must be resolved\n\n![](data/bitbucket.org/repo/BgXLzgM/images/3227666059-image.png)\n", "markup": "markdown", "html": "<p>(4) The camera image shows this. The simulation looks completely fine, but the camera must not be finding the texture. It might be related to how we define the camera used for rendering to texture. This must be resolved</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3227666059-image.png\" /></p>", "type": "rendered"}, "created_on": "2019-08-22T20:20:16.827665+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-22T20:20:16.839320+00:00", "type": "pullrequest_comment", "id": 114151987}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114151361.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114151361"}}, "parent": {"id": 114148515, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114148515.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114148515"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "For \\(1\\), this shows the difference between default and the newest reflection commit. \n\n**New \\(shouldn\u2019t be like this\\)**\n\n![](data/bitbucket.org/repo/BgXLzgM/images/3505622058-image_1.png)\n**Old \\(should be like this\\)**\n\n![](data/bitbucket.org/repo/BgXLzgM/images/2435987399-image.png)\n", "markup": "markdown", "html": "<p>For (1), this shows the difference between default and the newest reflection commit. </p>\n<p><strong>New (shouldn\u2019t be like this)</strong></p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3505622058-image_1.png\" />\n<strong>Old (should be like this)</strong></p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/2435987399-image.png\" /></p>", "type": "rendered"}, "created_on": "2019-08-22T20:14:35.311282+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-22T20:14:35.322850+00:00", "type": "pullrequest_comment", "id": 114151361}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114148515.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114148515"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "TODOs:\n\n1. Investigate why `cean_waves_below_visual` is there. Either remove it or keep it and only reflection/refraction setup once\n2. Change reflection/water ratio for more subtle reflections\n3. Clean unnecessary parts of code\n4. Check how water looks from camera \\(rviz/image viewer\\)\n\n", "markup": "markdown", "html": "<p>TODOs:</p>\n<ol>\n<li>Investigate why <code>cean_waves_below_visual</code> is there. Either remove it or keep it and only reflection/refraction setup once</li>\n<li>Change reflection/water ratio for more subtle reflections</li>\n<li>Clean unnecessary parts of code</li>\n<li>Check how water looks from camera (rviz/image viewer)</li>\n</ol>", "type": "rendered"}, "created_on": "2019-08-22T19:48:29.440093+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-22T19:52:56.426921+00:00", "type": "pullrequest_comment", "id": 114148515}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114148157.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114148157"}}, "parent": {"id": 114127564, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114127564.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114127564"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "This is very doable. I just have to change the ratio of reflectionColour and waterColour to show less reflection. I will make that change.", "markup": "markdown", "html": "<p>This is very doable. I just have to change the ratio of reflectionColour and waterColour to show less reflection. I will make that change.</p>", "type": "rendered"}, "created_on": "2019-08-22T19:45:24.899354+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-22T19:45:24.915740+00:00", "type": "pullrequest_comment", "id": 114148157}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114127564.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114127564"}}, "parent": {"id": 114003983, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114003983.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114003983"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "How hard is to make the effect even more subtle? It\u2019s really cool but we should apply it carefully based on how this effect is noticed in real images.", "markup": "markdown", "html": "<p>How hard is to make the effect even more subtle? It\u2019s really cool but we should apply it carefully based on how this effect is noticed in real images.</p>", "type": "rendered"}, "created_on": "2019-08-22T16:48:27.151509+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-08-22T16:49:04.613092+00:00", "type": "pullrequest_comment", "id": 114127564}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114003983.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114003983"}}, "parent": {"id": 113996289, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113996289.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113996289"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "nice, looks good!", "markup": "markdown", "html": "<p>nice, looks good!</p>", "type": "rendered"}, "created_on": "2019-08-22T04:31:41.099706+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-08-22T04:31:41.109161+00:00", "type": "pullrequest_comment", "id": 114003983}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/114000945.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-114000945"}}, "parent": {"id": 113996289, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113996289.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113996289"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": ":astonished: :clap: ", "markup": "markdown", "html": "<p><img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f632.png\" alt=\"\ud83d\ude32\" title=\":astonished:\" data-emoji-short-name=\":astonished:\" /> <img class=\"emoji\" src=\"data/pf-emoji-service--cdn.us-east-1.prod.public.atl-paas.net/standard/551c9814-1d37-4573-819d-afab3afeaf32/48x48/1f44f.png\" alt=\"\ud83d\udc4f\" title=\":clap:\" data-emoji-short-name=\":clap:\" /> </p>", "type": "rendered"}, "created_on": "2019-08-22T03:37:59.778760+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-08-22T03:37:59.788378+00:00", "type": "pullrequest_comment", "id": 114000945}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113994897.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113994897"}}, "parent": {"id": 113994199, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113994199.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113994199"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "I\u2019m not actually sure, I have not looked closely at the existing ocean model in detail. Something to investigate", "markup": "markdown", "html": "<p>I\u2019m not actually sure, I have not looked closely at the existing ocean model in detail. Something to investigate</p>", "type": "rendered"}, "created_on": "2019-08-22T01:39:23.857797+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-08-22T01:39:23.867224+00:00", "type": "pullrequest_comment", "id": 113994897}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113994199.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113994199"}}, "parent": {"id": 113993892, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113993892.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113993892"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "It worked for me as well. Is there any purpose for `ocean_waves_below_visual`? ", "markup": "markdown", "html": "<p>It worked for me as well. Is there any purpose for <code>ocean_waves_below_visual</code>? </p>", "type": "rendered"}, "created_on": "2019-08-22T01:26:09.277107+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-22T01:26:09.285275+00:00", "type": "pullrequest_comment", "id": 113994199}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113993938.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113993938"}}, "parent": {"id": 113993864, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113993864.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113993864"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "Oh yes, that must be it, it was reflecting the other direction with the other visual link", "markup": "markdown", "html": "<p>Oh yes, that must be it, it was reflecting the other direction with the other visual link</p>", "type": "rendered"}, "created_on": "2019-08-22T01:20:42.053311+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-22T01:20:42.064995+00:00", "type": "pullrequest_comment", "id": 113993938}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113993892.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113993892"}}, "parent": {"id": 113993864, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113993864.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113993864"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "I guess we don\u2019t want the ocean bottom  to be also doing reflections", "markup": "markdown", "html": "<p>I guess we don\u2019t want the ocean bottom  to be also doing reflections</p>", "type": "rendered"}, "created_on": "2019-08-22T01:19:50.222265+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-08-22T01:19:50.231074+00:00", "type": "pullrequest_comment", "id": 113993892}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113993864.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113993864"}}, "parent": {"id": 113993059, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113993059.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113993059"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "so I tried commenting out the `ocean_waves_below_visual` visual and enabled reflection in the shaders, and things are looking better:\n\n\u200c\n\n![](data/bitbucket.org/repo/BgXLzgM/images/969734235-vrx_reflection2.jpg)\n", "markup": "markdown", "html": "<p>so I tried commenting out the <code>ocean_waves_below_visual</code> visual and enabled reflection in the shaders, and things are looking better:</p>\n<p>\u200c</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/969734235-vrx_reflection2.jpg\" /></p>", "type": "rendered"}, "created_on": "2019-08-22T01:19:09.618719+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-08-22T01:19:09.630631+00:00", "type": "pullrequest_comment", "id": 113993864}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113993808.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113993808"}}, "parent": {"id": 113993059, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165/comments/113993059.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165/_/diff#comment-113993059"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}, "content": {"raw": "What it should look like \\(from 1606:[964c5fe71770](#!/osrf/vrx/commits/964c5fe71770)\\)\n\n![](data/bitbucket.org/repo/BgXLzgM/images/737260438-image.png)\n", "markup": "markdown", "html": "<p>What it should look like (from 1606:<a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/964c5fe71770\" rel=\"nofollow\">964c5fe71770</a>)</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/737260438-image.png\" /></p>", "type": "rendered"}, "created_on": "2019-08-22T01:17:50.882909+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-22T01:17:50.892540+00:00", "type": "pullrequest_comment", "id": 113993808}, "pull_request": {"type": "pullrequest", "id": 165, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/165.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/165"}}, "title": "Issue#122 Ocean Reflections"}}], "next": "data/repositories/osrf/vrx/pullrequests/165/activity_ctx=g68SjXFgsa.json"}