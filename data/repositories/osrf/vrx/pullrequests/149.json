{"rendered": {"description": {"raw": "Note: This PR does not necessarily need to be merged in, but should be discussed.\r\n\r\n**Description**\r\n\r\nThis PR is to discuss the `enable_ros_network` argument, which is described below.\r\n\r\nFor the purpose of competition, we need to limit the exposed ROS and Gazebo topics to the ones that competitors should be able to use. There are three types:\r\n\r\n1. Gazebo transport topics - being solved by Docker containers that have no Gazebo transport topic communication\r\n2. ROS VRX topics - these can be hidden by setting an environment variable \\(should already be set\\)\r\n3. ROS topics with gazebo namespace - \\(eg. /gazebo/model\\_states\\). This should be handled by `enable_ros_network` parameter for Gazebo. \r\n\r\n**Issue**\r\n\r\nThis should work, but the only issue is that we call `spawn_model` in launch files to spawn the WAM-V. However, this uses one of the topics hidden by `enable_ros_network:=false`. Source code: [https://github.com/ros-simulation/gazebo\\_ros\\_pkgs/blob/melodic-devel/gazebo\\_ros/scripts/spawn\\_model](https://github.com/ros-simulation/gazebo_ros_pkgs/blob/melodic-devel/gazebo_ros/scripts/spawn_model)\r\n\r\n**Question**\r\n\r\nCan we change how we spawn the model or do we have to make another branch of Gazebo?\r\n\r\nAlso, should we even keep this argument, or should we just manually add it to `extra_gazebo_args`?", "markup": "markdown", "html": "<p>Note: This PR does not necessarily need to be merged in, but should be discussed.</p>\n<p><strong>Description</strong></p>\n<p>This PR is to discuss the <code>enable_ros_network</code> argument, which is described below.</p>\n<p>For the purpose of competition, we need to limit the exposed ROS and Gazebo topics to the ones that competitors should be able to use. There are three types:</p>\n<ol>\n<li>Gazebo transport topics - being solved by Docker containers that have no Gazebo transport topic communication</li>\n<li>ROS VRX topics - these can be hidden by setting an environment variable (should already be set)</li>\n<li>ROS topics with gazebo namespace - (eg. /gazebo/model_states). This should be handled by <code>enable_ros_network</code> parameter for Gazebo. </li>\n</ol>\n<p><strong>Issue</strong></p>\n<p>This should work, but the only issue is that we call <code>spawn_model</code> in launch files to spawn the WAM-V. However, this uses one of the topics hidden by <code>enable_ros_network:=false</code>. Source code: <a data-is-external-link=\"true\" href=\"https://github.com/ros-simulation/gazebo_ros_pkgs/blob/melodic-devel/gazebo_ros/scripts/spawn_model\" rel=\"nofollow\">https://github.com/ros-simulation/gazebo_ros_pkgs/blob/melodic-devel/gazebo_ros/scripts/spawn_model</a></p>\n<p><strong>Question</strong></p>\n<p>Can we change how we spawn the model or do we have to make another branch of Gazebo?</p>\n<p>Also, should we even keep this argument, or should we just manually add it to <code>extra_gazebo_args</code>?</p>", "type": "rendered"}, "title": {"raw": "Add enable_ros_network argument", "markup": "markdown", "html": "<p>Add enable_ros_network argument</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Note: This PR does not necessarily need to be merged in, but should be discussed.\r\n\r\n**Description**\r\n\r\nThis PR is to discuss the `enable_ros_network` argument, which is described below.\r\n\r\nFor the purpose of competition, we need to limit the exposed ROS and Gazebo topics to the ones that competitors should be able to use. There are three types:\r\n\r\n1. Gazebo transport topics - being solved by Docker containers that have no Gazebo transport topic communication\r\n2. ROS VRX topics - these can be hidden by setting an environment variable \\(should already be set\\)\r\n3. ROS topics with gazebo namespace - \\(eg. /gazebo/model\\_states\\). This should be handled by `enable_ros_network` parameter for Gazebo. \r\n\r\n**Issue**\r\n\r\nThis should work, but the only issue is that we call `spawn_model` in launch files to spawn the WAM-V. However, this uses one of the topics hidden by `enable_ros_network:=false`. Source code: [https://github.com/ros-simulation/gazebo\\_ros\\_pkgs/blob/melodic-devel/gazebo\\_ros/scripts/spawn\\_model](https://github.com/ros-simulation/gazebo_ros_pkgs/blob/melodic-devel/gazebo_ros/scripts/spawn_model)\r\n\r\n**Question**\r\n\r\nCan we change how we spawn the model or do we have to make another branch of Gazebo?\r\n\r\nAlso, should we even keep this argument, or should we just manually add it to `extra_gazebo_args`?", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/pullrequests/149/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/diffstat/osrf/vrx:252e2f71c1b3%0D27a797286c6c?from_pullrequest_id=149"}, "commits": {"href": "data/repositories/osrf/vrx/pullrequests/149/commits.json"}, "self": {"href": "data/repositories/osrf/vrx/pullrequests/149.json"}, "comments": {"href": "data/repositories/osrf/vrx/pullrequests/149/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/pullrequests/149/merge"}, "html": {"href": "#!/osrf/vrx/pull-requests/149"}, "activity": {"href": "data/repositories/osrf/vrx/pullrequests/149/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/diff/osrf/vrx:252e2f71c1b3%0D27a797286c6c?from_pullrequest_id=149"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/pullrequests/149/approve"}, "statuses": {"href": "data/repositories/osrf/vrx/pullrequests/149/statuses_page=1.json"}}, "title": "Add enable_ros_network argument", "close_source_branch": true, "reviewers": [], "id": 149, "destination": {"commit": {"hash": "27a797286c6c", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/27a797286c6c.json"}, "html": {"href": "#!/osrf/vrx/commits/27a797286c6c"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "created_on": "2019-07-22T23:33:45.152171+00:00", "summary": {"raw": "Note: This PR does not necessarily need to be merged in, but should be discussed.\r\n\r\n**Description**\r\n\r\nThis PR is to discuss the `enable_ros_network` argument, which is described below.\r\n\r\nFor the purpose of competition, we need to limit the exposed ROS and Gazebo topics to the ones that competitors should be able to use. There are three types:\r\n\r\n1. Gazebo transport topics - being solved by Docker containers that have no Gazebo transport topic communication\r\n2. ROS VRX topics - these can be hidden by setting an environment variable \\(should already be set\\)\r\n3. ROS topics with gazebo namespace - \\(eg. /gazebo/model\\_states\\). This should be handled by `enable_ros_network` parameter for Gazebo. \r\n\r\n**Issue**\r\n\r\nThis should work, but the only issue is that we call `spawn_model` in launch files to spawn the WAM-V. However, this uses one of the topics hidden by `enable_ros_network:=false`. Source code: [https://github.com/ros-simulation/gazebo\\_ros\\_pkgs/blob/melodic-devel/gazebo\\_ros/scripts/spawn\\_model](https://github.com/ros-simulation/gazebo_ros_pkgs/blob/melodic-devel/gazebo_ros/scripts/spawn_model)\r\n\r\n**Question**\r\n\r\nCan we change how we spawn the model or do we have to make another branch of Gazebo?\r\n\r\nAlso, should we even keep this argument, or should we just manually add it to `extra_gazebo_args`?", "markup": "markdown", "html": "<p>Note: This PR does not necessarily need to be merged in, but should be discussed.</p>\n<p><strong>Description</strong></p>\n<p>This PR is to discuss the <code>enable_ros_network</code> argument, which is described below.</p>\n<p>For the purpose of competition, we need to limit the exposed ROS and Gazebo topics to the ones that competitors should be able to use. There are three types:</p>\n<ol>\n<li>Gazebo transport topics - being solved by Docker containers that have no Gazebo transport topic communication</li>\n<li>ROS VRX topics - these can be hidden by setting an environment variable (should already be set)</li>\n<li>ROS topics with gazebo namespace - (eg. /gazebo/model_states). This should be handled by <code>enable_ros_network</code> parameter for Gazebo. </li>\n</ol>\n<p><strong>Issue</strong></p>\n<p>This should work, but the only issue is that we call <code>spawn_model</code> in launch files to spawn the WAM-V. However, this uses one of the topics hidden by <code>enable_ros_network:=false</code>. Source code: <a data-is-external-link=\"true\" href=\"https://github.com/ros-simulation/gazebo_ros_pkgs/blob/melodic-devel/gazebo_ros/scripts/spawn_model\" rel=\"nofollow\">https://github.com/ros-simulation/gazebo_ros_pkgs/blob/melodic-devel/gazebo_ros/scripts/spawn_model</a></p>\n<p><strong>Question</strong></p>\n<p>Can we change how we spawn the model or do we have to make another branch of Gazebo?</p>\n<p>Also, should we even keep this argument, or should we just manually add it to <code>extra_gazebo_args</code>?</p>", "type": "rendered"}, "source": {"commit": {"hash": "5b6fc4f7c059", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/5b6fc4f7c059.json"}, "html": {"href": "#!/osrf/vrx/commits/5b6fc4f7c059"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Add-Option-To-Hide-Gazebo-Topics"}}, "comment_count": 59, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2019-08-05T16:50:55.336410+00:00", "type": "participant", "approved": false, "user": {"display_name": "Shane Loretz", "uuid": "{656e3311-aad9-45a1-aaf7-b0ee0e84b287}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D"}, "html": {"href": "https://bitbucket.org/%7B656e3311-aad9-45a1-aaf7-b0ee0e84b287%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:684383ab-ac95-4859-a350-4a6f41a94a22/c7a1ebf5-cade-4115-9f26-9d3facb776db/128"}}, "nickname": "Shane Loretz", "type": "user", "account_id": "557058:684383ab-ac95-4859-a350-4a6f41a94a22"}}, {"role": "PARTICIPANT", "participated_on": "2019-08-08T23:16:35.673217+00:00", "type": "participant", "approved": true, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "PARTICIPANT", "participated_on": "2019-08-08T19:59:47.151366+00:00", "type": "participant", "approved": false, "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}}], "reason": "", "updated_on": "2019-08-08T23:27:47.351684+00:00", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "merge_commit": {"hash": "252e2f71c1b3", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/252e2f71c1b3.json"}, "html": {"href": "#!/osrf/vrx/commits/252e2f71c1b3"}}}, "closed_by": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}}