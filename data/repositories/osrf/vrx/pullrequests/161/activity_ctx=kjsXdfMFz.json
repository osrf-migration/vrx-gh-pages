{"pagelen": 50, "values": [{"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161/comments/113474031.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161/_/diff#comment-113474031"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 161, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161"}}, "title": "Learn Gazebo Visual Plugins for Ocean Reflections"}, "content": {"raw": "\u200c\n\n![](data/bitbucket.org/repo/BgXLzgM/images/2461074460-image.png)\nFigure 5: In changeset 1530:dc471a8b98b8, rewrote code to match [https://bitbucket.org/sinbad/ogre/src/v1-6-0/Samples/RenderToTexture/src/RenderToTexture.cpp](https://bitbucket.org/sinbad/ogre/src/v1-6-0/Samples/RenderToTexture/src/RenderToTexture.cpp), worked likely because I added both attached both plane and plane entity.", "markup": "markdown", "html": "<p>\u200c</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/2461074460-image.png\" />\nFigure 5: In changeset 1530:<a href=\"#!/osrf/vrx/commits/dc471a8b98b8\" rel=\"nofollow\" class=\"ap-connect-link\">dc471a8b98b8</a>, rewrote code to match <a data-is-external-link=\"true\" href=\"https://bitbucket.org/sinbad/ogre/src/v1-6-0/Samples/RenderToTexture/src/RenderToTexture.cpp\" rel=\"nofollow\">https://bitbucket.org/sinbad/ogre/src/v1-6-0/Samples/RenderToTexture/src/RenderToTexture.cpp</a>, worked likely because I added both attached both plane and plane entity.</p>", "type": "rendered"}, "created_on": "2019-08-18T19:51:52.959788+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-18T21:18:35.447530+00:00", "type": "pullrequest_comment", "id": 113474031}, "pull_request": {"type": "pullrequest", "id": 161, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161"}}, "title": "Learn Gazebo Visual Plugins for Ocean Reflections"}}, {"update": {"description": "THIS PR IS A WORK IN PROGRESS. Please refer to the most updated comments below to check which commits are stable and working \\(to understand progress made\\), and also which commits demonstrate what I am trying to do, which may not be working \\(where I may need support\\).\r\n\r\n**What has been done**\r\n\r\nThe purpose of this PR is to experiment with Gazebo Visual Plugins to build towards ocean reflections. The major steps have been:\r\n\r\n1. Removing all previous shader and material param setting from before \\(not permanently, but done to simplify plugin for learning and experimentation\\)\r\n2. Create 2 entities:\r\n\r\n    1. An Ogre plane aligned with the ocean waves with the render texture\r\n    2. An Ogre Rectangle in the upper right corner to show what the render texture looks like\r\n    \r\n3. Use the user camera to create a rendertexture that updates to match what the user camera sees\r\n4. Attempted reflection attempt\r\n\r\n**What needs to be done and questions about it**\r\n\r\n1. Currently, I create a new material and new texture in the C\\+\\+ code and do not use any shaders. I will need to implement the shaders and update the C\\+\\+ code to interact with the shaders and material script.\r\n\r\n    1. An issue I had was that I could not modify the existing material or texture. If I had\r\n    \r\n\r\n```\r\ntexture_unit \r\n{\r\n  texture reflectionTexture\r\n  tex_address_mode clamp\r\n}\r\n```\r\n\r\nand I tried to add to it with\r\n\r\n```\r\n Ogre::TexturePtr rttTexture =$\r\n   Ogre::TextureManager::getSingleton().createManual($\r\n     \"reflectionTexture\",$\r\n     Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME, $\r\n     Ogre::TEX_TYPE_2D, $\r\n     512, 512, $\r\n     0, $\r\n     Ogre::PF_R8G8B8, $\r\n     Ogre::TU_RENDERTARGET);$\r\n```\r\n\r\nthe ocean waves would not turn up. Perhaps I made some mistakes with it, but I tried at it for quite a while without success. Might need to look to see if there are errors in ogre.log\r\n\r\n2\\. I need to figure out the appropriate matrices needed the transform coordinates correctly in the vertex shader.\r\n\r\n3\\. Got working material on ocean with `this->visual->SetMaterial`, but could not work when using material script.\r\n\r\n4\\. Do I need to make a new ogre camera that is not the user camera\u2019s ogre camera? When I tried making a new camera \\(referred to Pro Ogre 3D Book\\), I had difficulty positioning the camera to match the user camera pose \\(move camera or camera node? diff coordinate systems?, etc\\)\r\n\r\n**I plan to add some commits showing more clearly what I am attempting to do, but isn\u2019t working. Stable commits at** 1529:01aadf9da3d0 \\(matches figure 4\\), 1516:c46139ca81c8 \\(shows upper right miniscreen and a small flat plane with render texture\\),\r\n\r\n**Incremental improvements and understanding**\r\n\r\n\u200c\r\n\r\n![](https://lh3.googleusercontent.com/B-T_7m_By3yttge1fI63l-WYoT9nnVTeoqpvTLDzNYCjjxdHBYQoK9gXSf3DoPU4kPZ9KvmBBW-_qmsq6flGmkPNw3aly4HcSgos0pagT6M9-yeAg_8_IBQ7jokVvXg3s9KNtH3m)\r\nFigure 1: Colored ocean with fragment shader based on position, created a plane with a cloud picture, and show a texture of the usercamera image in the upper right\r\n\r\n![](https://lh4.googleusercontent.com/sqmhSaEHRsjdcAyKEtLJ3ttm_q3XP5esooZiT-TLTbi7pTN9MADsx4m1IUCYSZYa0xbUY6EgWJHX_ZUTcwbb9PQmF01ZeHdv_J5NFPbx-JCuxEKPxSi1FOuKCuLc5jfgHcaxDF6S)\r\nFigure 2: Change miniscreen to no longer show a miniscreen inside of itself\r\n\r\n\u200c\r\n\r\n![](https://lh3.googleusercontent.com/HCsEeJU2GbQgUNTnUnlQfYumeVvg8vMOtMuGPZMr3CgBZNN6txkRg3fFk9clHtLzLD9h775zWpiyT3OzJndd1xlTurmYZD3RzgLndNQOB1g9CJpG9ZmC15JB2JYHzSdgpQOzbatx)\r\nFigure 3: Remove ocean shader and make plane display texture\r\n\r\n\u200c\r\n\r\n![](https://bitbucket.org/repo/BgXLzgM/images/2044246195-image.png)\r\n\u200c\r\n\r\n![](https://bitbucket.org/repo/BgXLzgM/images/1477922417-image.png)\r\nFigure 4: Rotate plane to align with ocean waves and enable reflection \\(shows non-working view from above and promsing view from below\\)\r\n\r\n\u200c\r\n\r\n**Reference Material**\r\n\r\nOgre Render to Texture Tutorial [http://wiki.ogre3d.org/Intermediate\\+Tutorial\\+7](http://wiki.ogre3d.org/Intermediate+Tutorial+7)\r\n\r\nPro Ogre 3D Book [https://books.google.ca/books?id=GifUrbWat14C&pg=PA166&lpg=PA166&dq=ogre\\+reflection&source=bl&ots=glk0q9tlDg&sig=ACfU3U2g\\_Zg3zryST6pGEYVmzPOsE06i2w&hl=en&sa=X&ved=2ahUKEwiXvIPFhYvkAhW2JTQIHdbGAdQQ6AEwDHoECAgQAQ#v=onepage&q&f=false](https://books.google.ca/books?id=GifUrbWat14C&pg=PA166&lpg=PA166&dq=ogre+reflection&source=bl&ots=glk0q9tlDg&sig=ACfU3U2g_Zg3zryST6pGEYVmzPOsE06i2w&hl=en&sa=X&ved=2ahUKEwiXvIPFhYvkAhW2JTQIHdbGAdQQ6AEwDHoECAgQAQ#v=onepage&q&f=false)\r\n\r\nGazebo rendering source code https://bitbucket.org/osrf/gazebo/src/default/gazebo/rendering/\r\n\r\nGLSL Shader Tutorial for Reflections [https://www.youtube.com/watch?v=GADTasvDOX4&list=PLRIWtICgwaX23jiqVByUs0bqhnalNTNZh&index=4](https://www.youtube.com/watch?v=GADTasvDOX4&list=PLRIWtICgwaX23jiqVByUs0bqhnalNTNZh&index=4)\r\n\r\nCamera Positioning Tutorial [http://wiki.ogre3d.org/Simple\\+3rd\\+person\\+camera](http://wiki.ogre3d.org/Simple+3rd+person+camera)\r\n\r\nFresnel Example from Ogre: [https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Fresnel/include/Fresnel.h](https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Fresnel/include/Fresnel.h) [https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/scripts/Examples-Advanced.material](https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/scripts/Examples-Advanced.material) [https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example\\_FresnelFp.glsl](https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example_FresnelFp.glsl) [https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example\\_FresnelVp.glsl](https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example_FresnelVp.glsl)", "title": "Learn Gazebo Visual Plugins for Ocean Reflections", "destination": {"commit": {"hash": "342eec4f700b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/342eec4f700b.json"}, "html": {"href": "#!/osrf/vrx/commits/342eec4f700b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "cc551c07cc0e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/cc551c07cc0e.json"}, "html": {"href": "#!/osrf/vrx/commits/cc551c07cc0e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Learn-Gazebo-Visual"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-18T21:18:02.075894+00:00"}, "pull_request": {"type": "pullrequest", "id": 161, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161"}}, "title": "Learn Gazebo Visual Plugins for Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161/comments/113474866.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161/_/diff#comment-113474866"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 161, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161"}}, "title": "Learn Gazebo Visual Plugins for Ocean Reflections"}, "content": {"raw": "![](data/bitbucket.org/repo/BgXLzgM/images/2625910028-image.png)\n1535:cc551c07cc0e attempt to have ocean\\_waves material script have the same texture as the reflection texture, but does not work. I must be doing something wrong because the fresnel example is able to do this \\(fill in details of material script texture at runtime in the C\\+\\+ code\\)", "markup": "markdown", "html": "<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/2625910028-image.png\" />\n1535:<a href=\"#!/osrf/vrx/commits/cc551c07cc0e\" rel=\"nofollow\" class=\"ap-connect-link\">cc551c07cc0e</a> attempt to have ocean_waves material script have the same texture as the reflection texture, but does not work. I must be doing something wrong because the fresnel example is able to do this (fill in details of material script texture at runtime in the C++ code)</p>", "type": "rendered"}, "created_on": "2019-08-18T21:17:01.480857+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-18T21:17:01.490064+00:00", "type": "pullrequest_comment", "id": 113474866}, "pull_request": {"type": "pullrequest", "id": 161, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161"}}, "title": "Learn Gazebo Visual Plugins for Ocean Reflections"}}, {"update": {"description": "THIS PR IS A WORK IN PROGRESS.\r\n\r\n**What has been done**\r\n\r\nThe purpose of this PR is to experiment with Gazebo Visual Plugins to build towards ocean reflections. The major steps have been:\r\n\r\n1. Removing all previous shader and material param setting from before \\(not permanently, but done to simplify plugin for learning and experimentation\\)\r\n2. Create 2 entities:\r\n\r\n    1. An Ogre plane aligned with the ocean waves with the render texture\r\n    2. An Ogre Rectangle in the upper right corner to show what the render texture looks like\r\n    \r\n3. Use the user camera to create a rendertexture that updates to match what the user camera sees\r\n4. Attempted reflection attempt\r\n\r\n**What needs to be done and questions about it**\r\n\r\n1. Currently, I create a new material and new texture in the C\\+\\+ code and do not use any shaders. I will need to implement the shaders and update the C\\+\\+ code to interact with the shaders and material script.\r\n\r\n    1. An issue I had was that I could not modify the existing material or texture. If I had\r\n    \r\n\r\n```\r\ntexture_unit \r\n{\r\n  texture reflectionTexture\r\n  tex_address_mode clamp\r\n}\r\n```\r\n\r\nand I tried to add to it with\r\n\r\n```\r\n Ogre::TexturePtr rttTexture =$\r\n   Ogre::TextureManager::getSingleton().createManual($\r\n     \"reflectionTexture\",$\r\n     Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME, $\r\n     Ogre::TEX_TYPE_2D, $\r\n     512, 512, $\r\n     0, $\r\n     Ogre::PF_R8G8B8, $\r\n     Ogre::TU_RENDERTARGET);$\r\n```\r\n\r\nthe ocean waves would not turn up. Perhaps I made some mistakes with it, but I tried at it for quite a while without success. Might need to look to see if there are errors in ogre.log\r\n\r\n2\\. I need to figure out the appropriate matrices needed the transform coordinates correctly in the vertex shader.\r\n\r\n3\\. Got working material on ocean with `this->visual->SetMaterial`, but could not work when using material script.\r\n\r\n4\\. Do I need to make a new ogre camera that is not the user camera\u2019s ogre camera? When I tried making a new camera \\(referred to Pro Ogre 3D Book\\), I had difficulty positioning the camera to match the user camera pose \\(move camera or camera node? diff coordinate systems?, etc\\)\r\n\r\n**I plan to add some commits showing more clearly what I am attempting to do, but isn\u2019t working. Stable commits at** 1529:01aadf9da3d0 \\(matches figure 4\\), 1516:c46139ca81c8 \\(shows upper right miniscreen and a small flat plane with render texture\\),\r\n\r\n**Incremental improvements and understanding**\r\n\r\n\u200c\r\n\r\n![](https://lh3.googleusercontent.com/B-T_7m_By3yttge1fI63l-WYoT9nnVTeoqpvTLDzNYCjjxdHBYQoK9gXSf3DoPU4kPZ9KvmBBW-_qmsq6flGmkPNw3aly4HcSgos0pagT6M9-yeAg_8_IBQ7jokVvXg3s9KNtH3m)\r\nFigure 1: Colored ocean with fragment shader based on position, created a plane with a cloud picture, and show a texture of the usercamera image in the upper right\r\n\r\n![](https://lh4.googleusercontent.com/sqmhSaEHRsjdcAyKEtLJ3ttm_q3XP5esooZiT-TLTbi7pTN9MADsx4m1IUCYSZYa0xbUY6EgWJHX_ZUTcwbb9PQmF01ZeHdv_J5NFPbx-JCuxEKPxSi1FOuKCuLc5jfgHcaxDF6S)\r\nFigure 2: Change miniscreen to no longer show a miniscreen inside of itself\r\n\r\n\u200c\r\n\r\n![](https://lh3.googleusercontent.com/HCsEeJU2GbQgUNTnUnlQfYumeVvg8vMOtMuGPZMr3CgBZNN6txkRg3fFk9clHtLzLD9h775zWpiyT3OzJndd1xlTurmYZD3RzgLndNQOB1g9CJpG9ZmC15JB2JYHzSdgpQOzbatx)\r\nFigure 3: Remove ocean shader and make plane display texture\r\n\r\n\u200c\r\n\r\n![](https://bitbucket.org/repo/BgXLzgM/images/2044246195-image.png)\r\n\u200c\r\n\r\n![](https://bitbucket.org/repo/BgXLzgM/images/1477922417-image.png)\r\nFigure 4: Rotate plane to align with ocean waves and enable reflection \\(shows non-working view from above and promsing view from below\\)\r\n\r\n\u200c\r\n\r\n**Reference Material**\r\n\r\nOgre Render to Texture Tutorial [http://wiki.ogre3d.org/Intermediate\\+Tutorial\\+7](http://wiki.ogre3d.org/Intermediate+Tutorial+7)\r\n\r\nPro Ogre 3D Book [https://books.google.ca/books?id=GifUrbWat14C&pg=PA166&lpg=PA166&dq=ogre\\+reflection&source=bl&ots=glk0q9tlDg&sig=ACfU3U2g\\_Zg3zryST6pGEYVmzPOsE06i2w&hl=en&sa=X&ved=2ahUKEwiXvIPFhYvkAhW2JTQIHdbGAdQQ6AEwDHoECAgQAQ#v=onepage&q&f=false](https://books.google.ca/books?id=GifUrbWat14C&pg=PA166&lpg=PA166&dq=ogre+reflection&source=bl&ots=glk0q9tlDg&sig=ACfU3U2g_Zg3zryST6pGEYVmzPOsE06i2w&hl=en&sa=X&ved=2ahUKEwiXvIPFhYvkAhW2JTQIHdbGAdQQ6AEwDHoECAgQAQ#v=onepage&q&f=false)\r\n\r\nGazebo rendering source code https://bitbucket.org/osrf/gazebo/src/default/gazebo/rendering/\r\n\r\nGLSL Shader Tutorial for Reflections [https://www.youtube.com/watch?v=GADTasvDOX4&list=PLRIWtICgwaX23jiqVByUs0bqhnalNTNZh&index=4](https://www.youtube.com/watch?v=GADTasvDOX4&list=PLRIWtICgwaX23jiqVByUs0bqhnalNTNZh&index=4)\r\n\r\nCamera Positioning Tutorial [http://wiki.ogre3d.org/Simple\\+3rd\\+person\\+camera](http://wiki.ogre3d.org/Simple+3rd+person+camera)\r\n\r\nFresnel Example from Ogre: [https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Fresnel/include/Fresnel.h](https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Fresnel/include/Fresnel.h) [https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/scripts/Examples-Advanced.material](https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/scripts/Examples-Advanced.material) [https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example\\_FresnelFp.glsl](https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example_FresnelFp.glsl) [https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example\\_FresnelVp.glsl](https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example_FresnelVp.glsl)", "title": "Learn Gazebo Visual Plugins for Ocean Reflections", "destination": {"commit": {"hash": "342eec4f700b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/342eec4f700b.json"}, "html": {"href": "#!/osrf/vrx/commits/342eec4f700b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "cc551c07cc0e", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/cc551c07cc0e.json"}, "html": {"href": "#!/osrf/vrx/commits/cc551c07cc0e"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Learn-Gazebo-Visual"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-18T21:14:57.728351+00:00"}, "pull_request": {"type": "pullrequest", "id": 161, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161"}}, "title": "Learn Gazebo Visual Plugins for Ocean Reflections"}}, {"update": {"description": "THIS PR IS A WORK IN PROGRESS.\r\n\r\n**What has been done**\r\n\r\nThe purpose of this PR is to experiment with Gazebo Visual Plugins to build towards ocean reflections. The major steps have been:\r\n\r\n1. Removing all previous shader and material param setting from before \\(not permanently, but done to simplify plugin for learning and experimentation\\)\r\n2. Create 2 entities:\r\n\r\n    1. An Ogre plane aligned with the ocean waves with the render texture\r\n    2. An Ogre Rectangle in the upper right corner to show what the render texture looks like\r\n    \r\n3. Use the user camera to create a rendertexture that updates to match what the user camera sees\r\n4. Attempted reflection attempt\r\n\r\n**What needs to be done and questions about it**\r\n\r\n1. Currently, I create a new material and new texture in the C\\+\\+ code and do not use any shaders. I will need to implement the shaders and update the C\\+\\+ code to interact with the shaders and material script.\r\n\r\n    1. An issue I had was that I could not modify the existing material or texture. If I had\r\n    \r\n\r\n```\r\ntexture_unit \r\n{\r\n  texture reflectionTexture\r\n  tex_address_mode clamp\r\n}\r\n```\r\n\r\nand I tried to add to it with\r\n\r\n```\r\n Ogre::TexturePtr rttTexture =$\r\n   Ogre::TextureManager::getSingleton().createManual($\r\n     \"reflectionTexture\",$\r\n     Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME, $\r\n     Ogre::TEX_TYPE_2D, $\r\n     512, 512, $\r\n     0, $\r\n     Ogre::PF_R8G8B8, $\r\n     Ogre::TU_RENDERTARGET);$\r\n```\r\n\r\nthe ocean waves would not turn up. Perhaps I made some mistakes with it, but I tried at it for quite a while without success. Might need to look to see if there are errors in ogre.log\r\n\r\n2\\. I need to figure out the appropriate matrices needed the transform coordinates correctly in the vertex shader.\r\n\r\n3\\. Got working material on ocean with `this->visual->SetMaterial`, but could not work when using material script.\r\n\r\n4\\. Do I need to make a new ogre camera that is not the user camera\u2019s ogre camera? When I tried making a new camera \\(referred to Pro Ogre 3D Book\\), I had difficulty positioning the camera to match the user camera pose \\(move camera or camera node? diff coordinate systems?, etc\\)\r\n\r\n**I plan to add some commits showing more clearly what I am attempting to do, but isn\u2019t working. Stable commits at** 1529:01aadf9da3d0 \\(matches figure 4\\), 1516:c46139ca81c8 \\(shows upper right miniscreen and a small flat plane with render texture\\),\r\n\r\n**Incremental improvements and understanding**\r\n\r\n\u200c\r\n\r\n![](https://lh3.googleusercontent.com/B-T_7m_By3yttge1fI63l-WYoT9nnVTeoqpvTLDzNYCjjxdHBYQoK9gXSf3DoPU4kPZ9KvmBBW-_qmsq6flGmkPNw3aly4HcSgos0pagT6M9-yeAg_8_IBQ7jokVvXg3s9KNtH3m)\r\nFigure 1: Colored ocean with fragment shader based on position, created a plane with a cloud picture, and show a texture of the usercamera image in the upper right\r\n\r\n![](https://lh4.googleusercontent.com/sqmhSaEHRsjdcAyKEtLJ3ttm_q3XP5esooZiT-TLTbi7pTN9MADsx4m1IUCYSZYa0xbUY6EgWJHX_ZUTcwbb9PQmF01ZeHdv_J5NFPbx-JCuxEKPxSi1FOuKCuLc5jfgHcaxDF6S)\r\nFigure 2: Change miniscreen to no longer show a miniscreen inside of itself\r\n\r\n\u200c\r\n\r\n![](https://lh3.googleusercontent.com/HCsEeJU2GbQgUNTnUnlQfYumeVvg8vMOtMuGPZMr3CgBZNN6txkRg3fFk9clHtLzLD9h775zWpiyT3OzJndd1xlTurmYZD3RzgLndNQOB1g9CJpG9ZmC15JB2JYHzSdgpQOzbatx)\r\nFigure 3: Remove ocean shader and make plane display texture\r\n\r\n\u200c\r\n\r\n![](https://bitbucket.org/repo/BgXLzgM/images/2044246195-image.png)\r\n\u200c\r\n\r\n![](https://bitbucket.org/repo/BgXLzgM/images/1477922417-image.png)\r\nFigure 4: Rotate plane to align with ocean waves and enable reflection \\(shows non-working view from above and promsing view from below\\)\r\n\r\n\u200c\r\n\r\n**Reference Material**\r\n\r\nOgre Render to Texture Tutorial [http://wiki.ogre3d.org/Intermediate\\+Tutorial\\+7](http://wiki.ogre3d.org/Intermediate+Tutorial+7)\r\n\r\nPro Ogre 3D Book [https://books.google.ca/books?id=GifUrbWat14C&pg=PA166&lpg=PA166&dq=ogre\\+reflection&source=bl&ots=glk0q9tlDg&sig=ACfU3U2g\\_Zg3zryST6pGEYVmzPOsE06i2w&hl=en&sa=X&ved=2ahUKEwiXvIPFhYvkAhW2JTQIHdbGAdQQ6AEwDHoECAgQAQ#v=onepage&q&f=false](https://books.google.ca/books?id=GifUrbWat14C&pg=PA166&lpg=PA166&dq=ogre+reflection&source=bl&ots=glk0q9tlDg&sig=ACfU3U2g_Zg3zryST6pGEYVmzPOsE06i2w&hl=en&sa=X&ved=2ahUKEwiXvIPFhYvkAhW2JTQIHdbGAdQQ6AEwDHoECAgQAQ#v=onepage&q&f=false)\r\n\r\nGazebo rendering source code https://bitbucket.org/osrf/gazebo/src/default/gazebo/rendering/\r\n\r\nGLSL Shader Tutorial for Reflections [https://www.youtube.com/watch?v=GADTasvDOX4&list=PLRIWtICgwaX23jiqVByUs0bqhnalNTNZh&index=4](https://www.youtube.com/watch?v=GADTasvDOX4&list=PLRIWtICgwaX23jiqVByUs0bqhnalNTNZh&index=4)\r\n\r\nCamera Positioning Tutorial [http://wiki.ogre3d.org/Simple\\+3rd\\+person\\+camera](http://wiki.ogre3d.org/Simple+3rd+person+camera)\r\n\r\nFresnel Example from Ogre: [https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Fresnel/include/Fresnel.h](https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Fresnel/include/Fresnel.h) [https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/scripts/Examples-Advanced.material](https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/scripts/Examples-Advanced.material) [https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example\\_FresnelFp.glsl](https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example_FresnelFp.glsl) [https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example\\_FresnelVp.glsl](https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example_FresnelVp.glsl)", "title": "Learn Gazebo Visual Plugins for Ocean Reflections", "destination": {"commit": {"hash": "342eec4f700b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/342eec4f700b.json"}, "html": {"href": "#!/osrf/vrx/commits/342eec4f700b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "a8496f488c2b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/a8496f488c2b.json"}, "html": {"href": "#!/osrf/vrx/commits/a8496f488c2b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Learn-Gazebo-Visual"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-18T21:08:13.609886+00:00"}, "pull_request": {"type": "pullrequest", "id": 161, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161"}}, "title": "Learn Gazebo Visual Plugins for Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161/comments/113474396.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161/_/diff#comment-113474396"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 161, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161"}}, "title": "Learn Gazebo Visual Plugins for Ocean Reflections"}, "content": {"raw": "![](data/bitbucket.org/repo/BgXLzgM/images/1631182957-image.png)\n![](data/bitbucket.org/repo/BgXLzgM/images/3834559695-image.png)\n\u200c\n\n1532:d6e7a4b85e00", "markup": "markdown", "html": "<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1631182957-image.png\" />\n<img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3834559695-image.png\" />\n\u200c</p>\n<p>1532:<a href=\"#!/osrf/vrx/commits/d6e7a4b85e00\" rel=\"nofollow\" class=\"ap-connect-link\">d6e7a4b85e00</a></p>", "type": "rendered"}, "created_on": "2019-08-18T20:25:17.134929+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-18T20:25:17.141640+00:00", "type": "pullrequest_comment", "id": 113474396}, "pull_request": {"type": "pullrequest", "id": 161, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161"}}, "title": "Learn Gazebo Visual Plugins for Ocean Reflections"}}, {"update": {"description": "THIS PR IS A WORK IN PROGRESS.\r\n\r\n**What has been done**\r\n\r\nThe purpose of this PR is to experiment with Gazebo Visual Plugins to build towards ocean reflections. The major steps have been:\r\n\r\n1. Removing all previous shader and material param setting from before \\(not permanently, but done to simplify plugin for learning and experimentation\\)\r\n2. Create 2 entities:\r\n\r\n    1. An Ogre plane aligned with the ocean waves with the render texture\r\n    2. An Ogre Rectangle in the upper right corner to show what the render texture looks like\r\n    \r\n3. Use the user camera to create a rendertexture that updates to match what the user camera sees\r\n4. Attempted reflection attempt\r\n\r\n**What needs to be done and questions about it**\r\n\r\n1. Currently, I create a new material and new texture in the C\\+\\+ code and do not use any shaders. I will need to implement the shaders and update the C\\+\\+ code to interact with the shaders and material script.\r\n\r\n    1. An issue I had was that I could not modify the existing material or texture. If I had\r\n    \r\n\r\n```\r\ntexture_unit \r\n{\r\n  texture reflectionTexture\r\n  tex_address_mode clamp\r\n}\r\n```\r\n\r\nand I tried to add to it with\r\n\r\n```\r\n Ogre::TexturePtr rttTexture =$\r\n   Ogre::TextureManager::getSingleton().createManual($\r\n     \"reflectionTexture\",$\r\n     Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME, $\r\n     Ogre::TEX_TYPE_2D, $\r\n     512, 512, $\r\n     0, $\r\n     Ogre::PF_R8G8B8, $\r\n     Ogre::TU_RENDERTARGET);$\r\n```\r\n\r\nthe ocean waves would not turn up. Perhaps I made some mistakes with it, but I tried at it for quite a while without success. Might need to look to see if there are errors in ogre.log\r\n\r\n2\\. I need to figure out the appropriate matrices needed the transform coordinates correctly in the vertex shader.\r\n\r\n3\\. Got working material on ocean with `this->visual->SetMaterial`, but could not work when using material script.\r\n\r\n4\\. Do I need to make a new ogre camera that is not the user camera\u2019s ogre camera? When I tried making a new camera \\(referred to Pro Ogre 3D Book\\), I had difficulty positioning the camera to match the user camera pose \\(move camera or camera node? diff coordinate systems?, etc\\)\r\n\r\n**I plan to add some commits showing more clearly what I am attempting to do, but isn\u2019t working. Stable commits at** 1529:01aadf9da3d0 \\(matches figure 4\\), 1516:c46139ca81c8 \\(shows upper right miniscreen and a small flat plane with render texture\\),\r\n\r\n**Incremental improvements and understanding**\r\n\r\n\u200c\r\n\r\n![](https://lh3.googleusercontent.com/B-T_7m_By3yttge1fI63l-WYoT9nnVTeoqpvTLDzNYCjjxdHBYQoK9gXSf3DoPU4kPZ9KvmBBW-_qmsq6flGmkPNw3aly4HcSgos0pagT6M9-yeAg_8_IBQ7jokVvXg3s9KNtH3m)\r\nFigure 1: Colored ocean with fragment shader based on position, created a plane with a cloud picture, and show a texture of the usercamera image in the upper right\r\n\r\n![](https://lh4.googleusercontent.com/sqmhSaEHRsjdcAyKEtLJ3ttm_q3XP5esooZiT-TLTbi7pTN9MADsx4m1IUCYSZYa0xbUY6EgWJHX_ZUTcwbb9PQmF01ZeHdv_J5NFPbx-JCuxEKPxSi1FOuKCuLc5jfgHcaxDF6S)\r\nFigure 2: Change miniscreen to no longer show a miniscreen inside of itself\r\n\r\n\u200c\r\n\r\n![](https://lh3.googleusercontent.com/HCsEeJU2GbQgUNTnUnlQfYumeVvg8vMOtMuGPZMr3CgBZNN6txkRg3fFk9clHtLzLD9h775zWpiyT3OzJndd1xlTurmYZD3RzgLndNQOB1g9CJpG9ZmC15JB2JYHzSdgpQOzbatx)\r\nFigure 3: Remove ocean shader and make plane display texture\r\n\r\n\u200c\r\n\r\n![](https://bitbucket.org/repo/BgXLzgM/images/2044246195-image.png)\r\n\u200c\r\n\r\n![](https://bitbucket.org/repo/BgXLzgM/images/1477922417-image.png)\r\nFigure 4: Rotate plane to align with ocean waves and enable reflection \\(shows non-working view from above and promsing view from below\\)\r\n\r\n\u200c\r\n\r\n**Reference Material**\r\n\r\nOgre Render to Texture Tutorial [http://wiki.ogre3d.org/Intermediate\\+Tutorial\\+7](http://wiki.ogre3d.org/Intermediate+Tutorial+7)\r\n\r\nPro Ogre 3D Book [https://books.google.ca/books?id=GifUrbWat14C&pg=PA166&lpg=PA166&dq=ogre\\+reflection&source=bl&ots=glk0q9tlDg&sig=ACfU3U2g\\_Zg3zryST6pGEYVmzPOsE06i2w&hl=en&sa=X&ved=2ahUKEwiXvIPFhYvkAhW2JTQIHdbGAdQQ6AEwDHoECAgQAQ#v=onepage&q&f=false](https://books.google.ca/books?id=GifUrbWat14C&pg=PA166&lpg=PA166&dq=ogre+reflection&source=bl&ots=glk0q9tlDg&sig=ACfU3U2g_Zg3zryST6pGEYVmzPOsE06i2w&hl=en&sa=X&ved=2ahUKEwiXvIPFhYvkAhW2JTQIHdbGAdQQ6AEwDHoECAgQAQ#v=onepage&q&f=false)\r\n\r\nGazebo rendering source code https://bitbucket.org/osrf/gazebo/src/default/gazebo/rendering/\r\n\r\nGLSL Shader Tutorial for Reflections [https://www.youtube.com/watch?v=GADTasvDOX4&list=PLRIWtICgwaX23jiqVByUs0bqhnalNTNZh&index=4](https://www.youtube.com/watch?v=GADTasvDOX4&list=PLRIWtICgwaX23jiqVByUs0bqhnalNTNZh&index=4)\r\n\r\nCamera Positioning Tutorial [http://wiki.ogre3d.org/Simple\\+3rd\\+person\\+camera](http://wiki.ogre3d.org/Simple+3rd+person+camera)\r\n\r\nFresnel Example from Ogre: [https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Fresnel/include/Fresnel.h](https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Fresnel/include/Fresnel.h) [https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/scripts/Examples-Advanced.material](https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/scripts/Examples-Advanced.material) [https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example\\_FresnelFp.glsl](https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example_FresnelFp.glsl) [https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example\\_FresnelVp.glsl](https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example_FresnelVp.glsl)", "title": "Learn Gazebo Visual Plugins for Ocean Reflections", "destination": {"commit": {"hash": "342eec4f700b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/342eec4f700b.json"}, "html": {"href": "#!/osrf/vrx/commits/342eec4f700b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "d6e7a4b85e00", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/d6e7a4b85e00.json"}, "html": {"href": "#!/osrf/vrx/commits/d6e7a4b85e00"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Learn-Gazebo-Visual"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-18T20:25:03.099170+00:00"}, "pull_request": {"type": "pullrequest", "id": 161, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161"}}, "title": "Learn Gazebo Visual Plugins for Ocean Reflections"}}, {"comment": {"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161/comments/113474349.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161/_/diff#comment-113474349"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 161, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161"}}, "title": "Learn Gazebo Visual Plugins for Ocean Reflections"}, "content": {"raw": "![](data/bitbucket.org/repo/BgXLzgM/images/987389172-image.png)\n1531:75057d2d1ee6", "markup": "markdown", "html": "<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/987389172-image.png\" />\n1531:<a href=\"#!/osrf/vrx/commits/75057d2d1ee6\" rel=\"nofollow\" class=\"ap-connect-link\">75057d2d1ee6</a></p>", "type": "rendered"}, "created_on": "2019-08-18T20:21:40.714593+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-18T20:21:40.722521+00:00", "type": "pullrequest_comment", "id": 113474349}, "pull_request": {"type": "pullrequest", "id": 161, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161"}}, "title": "Learn Gazebo Visual Plugins for Ocean Reflections"}}, {"update": {"description": "THIS PR IS A WORK IN PROGRESS.\r\n\r\n**What has been done**\r\n\r\nThe purpose of this PR is to experiment with Gazebo Visual Plugins to build towards ocean reflections. The major steps have been:\r\n\r\n1. Removing all previous shader and material param setting from before \\(not permanently, but done to simplify plugin for learning and experimentation\\)\r\n2. Create 2 entities:\r\n\r\n    1. An Ogre plane aligned with the ocean waves with the render texture\r\n    2. An Ogre Rectangle in the upper right corner to show what the render texture looks like\r\n    \r\n3. Use the user camera to create a rendertexture that updates to match what the user camera sees\r\n4. Attempted reflection attempt\r\n\r\n**What needs to be done and questions about it**\r\n\r\n1. Currently, I create a new material and new texture in the C\\+\\+ code and do not use any shaders. I will need to implement the shaders and update the C\\+\\+ code to interact with the shaders and material script.\r\n\r\n    1. An issue I had was that I could not modify the existing material or texture. If I had\r\n    \r\n\r\n```\r\ntexture_unit \r\n{\r\n  texture reflectionTexture\r\n  tex_address_mode clamp\r\n}\r\n```\r\n\r\nand I tried to add to it with\r\n\r\n```\r\n Ogre::TexturePtr rttTexture =$\r\n   Ogre::TextureManager::getSingleton().createManual($\r\n     \"reflectionTexture\",$\r\n     Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME, $\r\n     Ogre::TEX_TYPE_2D, $\r\n     512, 512, $\r\n     0, $\r\n     Ogre::PF_R8G8B8, $\r\n     Ogre::TU_RENDERTARGET);$\r\n```\r\n\r\nthe ocean waves would not turn up. Perhaps I made some mistakes with it, but I tried at it for quite a while without success. Might need to look to see if there are errors in ogre.log\r\n\r\n2\\. I need to figure out the appropriate matrices needed the transform coordinates correctly in the vertex shader.\r\n\r\n3\\. Got working material on ocean with `this->visual->SetMaterial`, but could not work when using material script.\r\n\r\n4\\. Do I need to make a new ogre camera that is not the user camera\u2019s ogre camera? When I tried making a new camera \\(referred to Pro Ogre 3D Book\\), I had difficulty positioning the camera to match the user camera pose \\(move camera or camera node? diff coordinate systems?, etc\\)\r\n\r\n**I plan to add some commits showing more clearly what I am attempting to do, but isn\u2019t working. Stable commits at** 1529:01aadf9da3d0 \\(matches figure 4\\), 1516:c46139ca81c8 \\(shows upper right miniscreen and a small flat plane with render texture\\),\r\n\r\n**Incremental improvements and understanding**\r\n\r\n\u200c\r\n\r\n![](https://lh3.googleusercontent.com/B-T_7m_By3yttge1fI63l-WYoT9nnVTeoqpvTLDzNYCjjxdHBYQoK9gXSf3DoPU4kPZ9KvmBBW-_qmsq6flGmkPNw3aly4HcSgos0pagT6M9-yeAg_8_IBQ7jokVvXg3s9KNtH3m)\r\nFigure 1: Colored ocean with fragment shader based on position, created a plane with a cloud picture, and show a texture of the usercamera image in the upper right\r\n\r\n![](https://lh4.googleusercontent.com/sqmhSaEHRsjdcAyKEtLJ3ttm_q3XP5esooZiT-TLTbi7pTN9MADsx4m1IUCYSZYa0xbUY6EgWJHX_ZUTcwbb9PQmF01ZeHdv_J5NFPbx-JCuxEKPxSi1FOuKCuLc5jfgHcaxDF6S)\r\nFigure 2: Change miniscreen to no longer show a miniscreen inside of itself\r\n\r\n\u200c\r\n\r\n![](https://lh3.googleusercontent.com/HCsEeJU2GbQgUNTnUnlQfYumeVvg8vMOtMuGPZMr3CgBZNN6txkRg3fFk9clHtLzLD9h775zWpiyT3OzJndd1xlTurmYZD3RzgLndNQOB1g9CJpG9ZmC15JB2JYHzSdgpQOzbatx)\r\nFigure 3: Remove ocean shader and make plane display texture\r\n\r\n\u200c\r\n\r\n![](https://bitbucket.org/repo/BgXLzgM/images/2044246195-image.png)\r\n\u200c\r\n\r\n![](https://bitbucket.org/repo/BgXLzgM/images/1477922417-image.png)\r\nFigure 4: Rotate plane to align with ocean waves and enable reflection \\(shows non-working view from above and promsing view from below\\)\r\n\r\n\u200c\r\n\r\n**Reference Material**\r\n\r\nOgre Render to Texture Tutorial [http://wiki.ogre3d.org/Intermediate\\+Tutorial\\+7](http://wiki.ogre3d.org/Intermediate+Tutorial+7)\r\n\r\nPro Ogre 3D Book [https://books.google.ca/books?id=GifUrbWat14C&pg=PA166&lpg=PA166&dq=ogre\\+reflection&source=bl&ots=glk0q9tlDg&sig=ACfU3U2g\\_Zg3zryST6pGEYVmzPOsE06i2w&hl=en&sa=X&ved=2ahUKEwiXvIPFhYvkAhW2JTQIHdbGAdQQ6AEwDHoECAgQAQ#v=onepage&q&f=false](https://books.google.ca/books?id=GifUrbWat14C&pg=PA166&lpg=PA166&dq=ogre+reflection&source=bl&ots=glk0q9tlDg&sig=ACfU3U2g_Zg3zryST6pGEYVmzPOsE06i2w&hl=en&sa=X&ved=2ahUKEwiXvIPFhYvkAhW2JTQIHdbGAdQQ6AEwDHoECAgQAQ#v=onepage&q&f=false)\r\n\r\nGazebo rendering source code https://bitbucket.org/osrf/gazebo/src/default/gazebo/rendering/\r\n\r\nGLSL Shader Tutorial for Reflections [https://www.youtube.com/watch?v=GADTasvDOX4&list=PLRIWtICgwaX23jiqVByUs0bqhnalNTNZh&index=4](https://www.youtube.com/watch?v=GADTasvDOX4&list=PLRIWtICgwaX23jiqVByUs0bqhnalNTNZh&index=4)\r\n\r\nCamera Positioning Tutorial [http://wiki.ogre3d.org/Simple\\+3rd\\+person\\+camera](http://wiki.ogre3d.org/Simple+3rd+person+camera)\r\n\r\nFresnel Example from Ogre: [https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Fresnel/include/Fresnel.h](https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Fresnel/include/Fresnel.h) [https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/scripts/Examples-Advanced.material](https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/scripts/Examples-Advanced.material) [https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example\\_FresnelFp.glsl](https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example_FresnelFp.glsl) [https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example\\_FresnelVp.glsl](https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example_FresnelVp.glsl)", "title": "Learn Gazebo Visual Plugins for Ocean Reflections", "destination": {"commit": {"hash": "342eec4f700b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/342eec4f700b.json"}, "html": {"href": "#!/osrf/vrx/commits/342eec4f700b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "75057d2d1ee6", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/75057d2d1ee6.json"}, "html": {"href": "#!/osrf/vrx/commits/75057d2d1ee6"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Learn-Gazebo-Visual"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-18T20:21:21.478878+00:00"}, "pull_request": {"type": "pullrequest", "id": 161, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161"}}, "title": "Learn Gazebo Visual Plugins for Ocean Reflections"}}, {"update": {"description": "THIS PR IS A WORK IN PROGRESS.\r\n\r\n**What has been done**\r\n\r\nThe purpose of this PR is to experiment with Gazebo Visual Plugins to build towards ocean reflections. The major steps have been:\r\n\r\n1. Removing all previous shader and material param setting from before \\(not permanently, but done to simplify plugin for learning and experimentation\\)\r\n2. Create 2 entities:\r\n\r\n    1. An Ogre plane aligned with the ocean waves with the render texture\r\n    2. An Ogre Rectangle in the upper right corner to show what the render texture looks like\r\n    \r\n3. Use the user camera to create a rendertexture that updates to match what the user camera sees\r\n4. Attempted reflection attempt\r\n\r\n**What needs to be done and questions about it**\r\n\r\n1. Currently, I create a new material and new texture in the C\\+\\+ code and do not use any shaders. I will need to implement the shaders and update the C\\+\\+ code to interact with the shaders and material script.\r\n\r\n    1. An issue I had was that I could not modify the existing material or texture. If I had\r\n    \r\n\r\n```\r\ntexture_unit \r\n{\r\n  texture reflectionTexture\r\n  tex_address_mode clamp\r\n}\r\n```\r\n\r\nand I tried to add to it with\r\n\r\n```\r\n Ogre::TexturePtr rttTexture =$\r\n   Ogre::TextureManager::getSingleton().createManual($\r\n     \"reflectionTexture\",$\r\n     Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME, $\r\n     Ogre::TEX_TYPE_2D, $\r\n     512, 512, $\r\n     0, $\r\n     Ogre::PF_R8G8B8, $\r\n     Ogre::TU_RENDERTARGET);$\r\n```\r\n\r\nthe ocean waves would not turn up. Perhaps I made some mistakes with it, but I tried at it for quite a while without success. Might need to look to see if there are errors in ogre.log\r\n\r\n2\\. I need to figure out the appropriate matrices needed the transform coordinates correctly in the vertex shader.\r\n\r\n3\\. Got working material on ocean with `this->visual->SetMaterial`, but could not work when using material script.\r\n\r\n4\\. Do I need to make a new ogre camera that is not the user camera\u2019s ogre camera? When I tried making a new camera \\(referred to Pro Ogre 3D Book\\), I had difficulty positioning the camera to match the user camera pose \\(move camera or camera node? diff coordinate systems?, etc\\)\r\n\r\n**I plan to add some commits showing more clearly what I am attempting to do, but isn\u2019t working. Stable commits at** 1529:01aadf9da3d0 \\(matches figure 4\\), 1516:c46139ca81c8 \\(shows upper right miniscreen and a small flat plane with render texture\\),\r\n\r\n**Incremental improvements and understanding**\r\n\r\n\u200c\r\n\r\n![](https://lh3.googleusercontent.com/B-T_7m_By3yttge1fI63l-WYoT9nnVTeoqpvTLDzNYCjjxdHBYQoK9gXSf3DoPU4kPZ9KvmBBW-_qmsq6flGmkPNw3aly4HcSgos0pagT6M9-yeAg_8_IBQ7jokVvXg3s9KNtH3m)\r\nFigure 1: Colored ocean with fragment shader based on position, created a plane with a cloud picture, and show a texture of the usercamera image in the upper right\r\n\r\n![](https://lh4.googleusercontent.com/sqmhSaEHRsjdcAyKEtLJ3ttm_q3XP5esooZiT-TLTbi7pTN9MADsx4m1IUCYSZYa0xbUY6EgWJHX_ZUTcwbb9PQmF01ZeHdv_J5NFPbx-JCuxEKPxSi1FOuKCuLc5jfgHcaxDF6S)\r\nFigure 2: Change miniscreen to no longer show a miniscreen inside of itself\r\n\r\n\u200c\r\n\r\n![](https://lh3.googleusercontent.com/HCsEeJU2GbQgUNTnUnlQfYumeVvg8vMOtMuGPZMr3CgBZNN6txkRg3fFk9clHtLzLD9h775zWpiyT3OzJndd1xlTurmYZD3RzgLndNQOB1g9CJpG9ZmC15JB2JYHzSdgpQOzbatx)\r\nFigure 3: Remove ocean shader and make plane display texture\r\n\r\n\u200c\r\n\r\n![](https://bitbucket.org/repo/BgXLzgM/images/2044246195-image.png)\r\n\u200c\r\n\r\n![](https://bitbucket.org/repo/BgXLzgM/images/1477922417-image.png)\r\nFigure 4: Rotate plane to align with ocean waves and enable reflection \\(shows non-working view from above and promsing view from below\\)\r\n\r\n\u200c\r\n\r\n**Reference Material**\r\n\r\nOgre Render to Texture Tutorial [http://wiki.ogre3d.org/Intermediate\\+Tutorial\\+7](http://wiki.ogre3d.org/Intermediate+Tutorial+7)\r\n\r\nPro Ogre 3D Book [https://books.google.ca/books?id=GifUrbWat14C&pg=PA166&lpg=PA166&dq=ogre\\+reflection&source=bl&ots=glk0q9tlDg&sig=ACfU3U2g\\_Zg3zryST6pGEYVmzPOsE06i2w&hl=en&sa=X&ved=2ahUKEwiXvIPFhYvkAhW2JTQIHdbGAdQQ6AEwDHoECAgQAQ#v=onepage&q&f=false](https://books.google.ca/books?id=GifUrbWat14C&pg=PA166&lpg=PA166&dq=ogre+reflection&source=bl&ots=glk0q9tlDg&sig=ACfU3U2g_Zg3zryST6pGEYVmzPOsE06i2w&hl=en&sa=X&ved=2ahUKEwiXvIPFhYvkAhW2JTQIHdbGAdQQ6AEwDHoECAgQAQ#v=onepage&q&f=false)\r\n\r\nGazebo rendering source code https://bitbucket.org/osrf/gazebo/src/default/gazebo/rendering/\r\n\r\nGLSL Shader Tutorial for Reflections [https://www.youtube.com/watch?v=GADTasvDOX4&list=PLRIWtICgwaX23jiqVByUs0bqhnalNTNZh&index=4](https://www.youtube.com/watch?v=GADTasvDOX4&list=PLRIWtICgwaX23jiqVByUs0bqhnalNTNZh&index=4)\r\n\r\nCamera Positioning Tutorial [http://wiki.ogre3d.org/Simple\\+3rd\\+person\\+camera](http://wiki.ogre3d.org/Simple+3rd+person+camera)\r\n\r\nFresnel Example from Ogre: [https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Fresnel/include/Fresnel.h](https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Fresnel/include/Fresnel.h) [https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/scripts/Examples-Advanced.material](https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/scripts/Examples-Advanced.material) [https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example\\_FresnelFp.glsl](https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example_FresnelFp.glsl) [https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example\\_FresnelVp.glsl](https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example_FresnelVp.glsl)", "title": "Learn Gazebo Visual Plugins for Ocean Reflections", "destination": {"commit": {"hash": "342eec4f700b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/342eec4f700b.json"}, "html": {"href": "#!/osrf/vrx/commits/342eec4f700b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "dc471a8b98b8", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/dc471a8b98b8.json"}, "html": {"href": "#!/osrf/vrx/commits/dc471a8b98b8"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Learn-Gazebo-Visual"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-18T19:50:31.975418+00:00"}, "pull_request": {"type": "pullrequest", "id": 161, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161"}}, "title": "Learn Gazebo Visual Plugins for Ocean Reflections"}}, {"update": {"description": "THIS PR IS A WORK IN PROGRESS.\r\n\r\n**What has been done**\r\n\r\nThe purpose of this PR is to experiment with Gazebo Visual Plugins to build towards ocean reflections. The major steps have been:\r\n\r\n1. Removing all previous shader and material param setting from before \\(not permanently, but done to simplify plugin for learning and experimentation\\)\r\n2. Create 2 entities:\r\n\r\n    1. An Ogre plane aligned with the ocean waves with the render texture\r\n    2. An Ogre Rectangle in the upper right corner to show what the render texture looks like\r\n    \r\n3. Use the user camera to create a rendertexture that updates to match what the user camera sees\r\n4. Attempted reflection attempt\r\n\r\n**What needs to be done and questions about it**\r\n\r\n1. Currently, I create a new material and new texture in the C\\+\\+ code and do not use any shaders. I will need to implement the shaders and update the C\\+\\+ code to interact with the shaders and material script.\r\n\r\n    1. An issue I had was that I could not modify the existing material or texture. If I had\r\n    \r\n\r\n```\r\ntexture_unit \r\n{\r\n  texture reflectionTexture\r\n  tex_address_mode clamp\r\n}\r\n```\r\n\r\nand I tried to add to it with\r\n\r\n```\r\n Ogre::TexturePtr rttTexture =$\r\n   Ogre::TextureManager::getSingleton().createManual($\r\n     \"reflectionTexture\",$\r\n     Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME, $\r\n     Ogre::TEX_TYPE_2D, $\r\n     512, 512, $\r\n     0, $\r\n     Ogre::PF_R8G8B8, $\r\n     Ogre::TU_RENDERTARGET);$\r\n```\r\n\r\nthe ocean waves would not turn up. Perhaps I made some mistakes with it, but I tried at it for quite a while without success. Might need to look to see if there are errors in ogre.log\r\n\r\n2\\. I need to figure out the appropriate matrices needed the transform coordinates correctly in the vertex shader.\r\n\r\n3\\. Got working material on ocean with `this->visual->SetMaterial`, but could not work when using material script.\r\n\r\n4\\. Do I need to make a new ogre camera that is not the user camera\u2019s ogre camera? When I tried making a new camera \\(referred to Pro Ogre 3D Book\\), I had difficulty positioning the camera to match the user camera pose \\(move camera or camera node? diff coordinate systems?, etc\\)\r\n\r\n**I plan to add some commits showing more clearly what I am attempting to do, but isn\u2019t working. Stable commits at** 1529:01aadf9da3d0 \\(matches figure 4\\), 1516:c46139ca81c8 \\(shows upper right miniscreen and a small flat plane with render texture\\),\r\n\r\n**Incremental improvements and understanding**\r\n\r\n\u200c\r\n\r\n![](https://lh3.googleusercontent.com/B-T_7m_By3yttge1fI63l-WYoT9nnVTeoqpvTLDzNYCjjxdHBYQoK9gXSf3DoPU4kPZ9KvmBBW-_qmsq6flGmkPNw3aly4HcSgos0pagT6M9-yeAg_8_IBQ7jokVvXg3s9KNtH3m)\r\nFigure 1: Colored ocean with fragment shader based on position, created a plane with a cloud picture, and show a texture of the usercamera image in the upper right\r\n\r\n![](https://lh4.googleusercontent.com/sqmhSaEHRsjdcAyKEtLJ3ttm_q3XP5esooZiT-TLTbi7pTN9MADsx4m1IUCYSZYa0xbUY6EgWJHX_ZUTcwbb9PQmF01ZeHdv_J5NFPbx-JCuxEKPxSi1FOuKCuLc5jfgHcaxDF6S)\r\nFigure 2: Change miniscreen to no longer show a miniscreen inside of itself\r\n\r\n\u200c\r\n\r\n![](https://lh3.googleusercontent.com/HCsEeJU2GbQgUNTnUnlQfYumeVvg8vMOtMuGPZMr3CgBZNN6txkRg3fFk9clHtLzLD9h775zWpiyT3OzJndd1xlTurmYZD3RzgLndNQOB1g9CJpG9ZmC15JB2JYHzSdgpQOzbatx)\r\nFigure 3: Remove ocean shader and make plane display texture\r\n\r\n\u200c\r\n\r\n![](https://bitbucket.org/repo/BgXLzgM/images/2044246195-image.png)\r\n\u200c\r\n\r\n![](https://bitbucket.org/repo/BgXLzgM/images/1477922417-image.png)\r\nFigure 4: Rotate plane to align with ocean waves and enable reflection \\(shows non-working view from above and promsing view from below\\)\r\n\r\n\u200c\r\n\r\n**Reference Material**\r\n\r\nOgre Render to Texture Tutorial [http://wiki.ogre3d.org/Intermediate\\+Tutorial\\+7](http://wiki.ogre3d.org/Intermediate+Tutorial+7)\r\n\r\nPro Ogre 3D Book [https://books.google.ca/books?id=GifUrbWat14C&pg=PA166&lpg=PA166&dq=ogre\\+reflection&source=bl&ots=glk0q9tlDg&sig=ACfU3U2g\\_Zg3zryST6pGEYVmzPOsE06i2w&hl=en&sa=X&ved=2ahUKEwiXvIPFhYvkAhW2JTQIHdbGAdQQ6AEwDHoECAgQAQ#v=onepage&q&f=false](https://books.google.ca/books?id=GifUrbWat14C&pg=PA166&lpg=PA166&dq=ogre+reflection&source=bl&ots=glk0q9tlDg&sig=ACfU3U2g_Zg3zryST6pGEYVmzPOsE06i2w&hl=en&sa=X&ved=2ahUKEwiXvIPFhYvkAhW2JTQIHdbGAdQQ6AEwDHoECAgQAQ#v=onepage&q&f=false)\r\n\r\nGazebo rendering source code https://bitbucket.org/osrf/gazebo/src/default/gazebo/rendering/\r\n\r\nGLSL Shader Tutorial for Reflections [https://www.youtube.com/watch?v=GADTasvDOX4&list=PLRIWtICgwaX23jiqVByUs0bqhnalNTNZh&index=4](https://www.youtube.com/watch?v=GADTasvDOX4&list=PLRIWtICgwaX23jiqVByUs0bqhnalNTNZh&index=4)\r\n\r\nCamera Positioning Tutorial [http://wiki.ogre3d.org/Simple\\+3rd\\+person\\+camera](http://wiki.ogre3d.org/Simple+3rd+person+camera)\r\n\r\nFresnel Example from Ogre: [https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Fresnel/include/Fresnel.h](https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Fresnel/include/Fresnel.h) [https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/scripts/Examples-Advanced.material](https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/scripts/Examples-Advanced.material) [https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example\\_FresnelFp.glsl](https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example_FresnelFp.glsl) [https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example\\_FresnelVp.glsl](https://bitbucket.org/sinbad/ogre/src/v1-9-0/Samples/Media/materials/programs/GLSL150/Example_FresnelVp.glsl)", "title": "Learn Gazebo Visual Plugins for Ocean Reflections", "destination": {"commit": {"hash": "342eec4f700b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/342eec4f700b.json"}, "html": {"href": "#!/osrf/vrx/commits/342eec4f700b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "01aadf9da3d0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/01aadf9da3d0.json"}, "html": {"href": "#!/osrf/vrx/commits/01aadf9da3d0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Learn-Gazebo-Visual"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-18T18:59:26.693029+00:00"}, "pull_request": {"type": "pullrequest", "id": 161, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161"}}, "title": "Learn Gazebo Visual Plugins for Ocean Reflections"}}, {"update": {"description": "THIS PR IS A WORK IN PROGRESS.\r\n\r\n**What has been done**\r\n\r\nThe purpose of this PR is to experiment with Gazebo Visual Plugins to build towards ocean reflections. The major steps have been:\r\n\r\n1. Removing all previous shader and material param setting from before \\(not permanently, but done to simplify plugin for learning and experimentation\\)\r\n2. Create 2 entities:\r\n\r\n    1. An Ogre plane aligned with the ocean waves with the render texture\r\n    2. An Ogre Rectangle in the upper right corner to show what the render texture looks like\r\n    \r\n3. Use the user camera to create a rendertexture that updates to match what the user camera sees\r\n4. Attempted reflection attempt\r\n\r\n**What needs to be done and questions about it**\r\n\r\n1. Currently, I create a new material and new texture in the C\\+\\+ code and do not use any shaders. I will need to implement the shaders and update the C\\+\\+ code to interact with the shaders and material script.\r\n\r\n    1. An issue I had was that I could not modify the existing material or texture. If I had\r\n    \r\n\r\n```\r\ntexture_unit \r\n{\r\n  texture reflectionTexture\r\n  tex_address_mode clamp\r\n}\r\n```\r\n\r\nand I tried to add to it with\r\n\r\n```\r\n Ogre::TexturePtr rttTexture =$\r\n   Ogre::TextureManager::getSingleton().createManual($\r\n     \"reflectionTexture\",$\r\n     Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME, $\r\n     Ogre::TEX_TYPE_2D, $\r\n     512, 512, $\r\n     0, $\r\n     Ogre::PF_R8G8B8, $\r\n     Ogre::TU_RENDERTARGET);$\r\n```\r\n\r\nthe ocean waves would not turn up. Perhaps I made some mistakes with it, but I tried at it for quite a while without success. Might need to look to see if there are errors in ogre.log\r\n\r\n2\\. I need to figure out the appropriate matrices needed the transform coordinates correctly in the vertex shader.\r\n\r\n3\\. Got working material on ocean with `this->visual->SetMaterial`, but could not work when using material script.\r\n\r\n4\\. Do I need to make a new ogre camera that is not the user camera\u2019s ogre camera? When I tried making a new camera \\(referred to Pro Ogre 3D Book\\), I had difficulty positioning the camera to match the user camera pose \\(move camera or camera node? diff coordinate systems?, etc\\)\r\n\r\n**I plan to add some commits showing more clearly what I am attempting to do, but isn\u2019t working. Stable commits at** 1529:01aadf9da3d0 \\(matches figure 4\\), 1516:c46139ca81c8 \\(shows upper right miniscreen and a small flat plane with render texture\\),\r\n\r\n**Incremental improvements and understanding**\r\n\r\n\u200c\r\n\r\n![](https://lh3.googleusercontent.com/B-T_7m_By3yttge1fI63l-WYoT9nnVTeoqpvTLDzNYCjjxdHBYQoK9gXSf3DoPU4kPZ9KvmBBW-_qmsq6flGmkPNw3aly4HcSgos0pagT6M9-yeAg_8_IBQ7jokVvXg3s9KNtH3m)\r\nFigure 1: Colored ocean with fragment shader based on position, created a plane with a cloud picture, and show a texture of the usercamera image in the upper right\r\n\r\n![](https://lh4.googleusercontent.com/sqmhSaEHRsjdcAyKEtLJ3ttm_q3XP5esooZiT-TLTbi7pTN9MADsx4m1IUCYSZYa0xbUY6EgWJHX_ZUTcwbb9PQmF01ZeHdv_J5NFPbx-JCuxEKPxSi1FOuKCuLc5jfgHcaxDF6S)\r\nFigure 2: Change miniscreen to no longer show a miniscreen inside of itself\r\n\r\n\u200c\r\n\r\n![](https://lh3.googleusercontent.com/HCsEeJU2GbQgUNTnUnlQfYumeVvg8vMOtMuGPZMr3CgBZNN6txkRg3fFk9clHtLzLD9h775zWpiyT3OzJndd1xlTurmYZD3RzgLndNQOB1g9CJpG9ZmC15JB2JYHzSdgpQOzbatx)\r\nFigure 3: Remove ocean shader and make plane display texture\r\n\r\n\u200c\r\n\r\n![](https://bitbucket.org/repo/BgXLzgM/images/2044246195-image.png)\r\n![](https://bitbucket.org/repo/BgXLzgM/images/1477922417-image.png)\r\nFigure 4: Rotate plane to align with ocean waves and enable reflection \\(shows non-working view from above and promsing view from below\\)\r\n\r\n\u200c\r\n\r\n**Reference Material**\r\n\r\nOgre Render to Texture Tutorial [http://wiki.ogre3d.org/Intermediate\\+Tutorial\\+7](http://wiki.ogre3d.org/Intermediate+Tutorial+7)\r\n\r\nPro Ogre 3D Book [https://books.google.ca/books?id=GifUrbWat14C&pg=PA166&lpg=PA166&dq=ogre\\+reflection&source=bl&ots=glk0q9tlDg&sig=ACfU3U2g\\_Zg3zryST6pGEYVmzPOsE06i2w&hl=en&sa=X&ved=2ahUKEwiXvIPFhYvkAhW2JTQIHdbGAdQQ6AEwDHoECAgQAQ#v=onepage&q&f=false](https://books.google.ca/books?id=GifUrbWat14C&pg=PA166&lpg=PA166&dq=ogre+reflection&source=bl&ots=glk0q9tlDg&sig=ACfU3U2g_Zg3zryST6pGEYVmzPOsE06i2w&hl=en&sa=X&ved=2ahUKEwiXvIPFhYvkAhW2JTQIHdbGAdQQ6AEwDHoECAgQAQ#v=onepage&q&f=false)\r\n\r\nGazebo rendering source code https://bitbucket.org/osrf/gazebo/src/default/gazebo/rendering/\r\n\r\nGLSL Shader Tutorial for Reflections [https://www.youtube.com/watch?v=GADTasvDOX4&list=PLRIWtICgwaX23jiqVByUs0bqhnalNTNZh&index=4](https://www.youtube.com/watch?v=GADTasvDOX4&list=PLRIWtICgwaX23jiqVByUs0bqhnalNTNZh&index=4)\r\n\r\nCamera Positioning Tutorial [http://wiki.ogre3d.org/Simple\\+3rd\\+person\\+camera](http://wiki.ogre3d.org/Simple+3rd+person+camera)", "title": "Learn Gazebo Visual Plugins for Ocean Reflections", "destination": {"commit": {"hash": "342eec4f700b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/342eec4f700b.json"}, "html": {"href": "#!/osrf/vrx/commits/342eec4f700b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "01aadf9da3d0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/01aadf9da3d0.json"}, "html": {"href": "#!/osrf/vrx/commits/01aadf9da3d0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Learn-Gazebo-Visual"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-18T18:56:52.319628+00:00"}, "pull_request": {"type": "pullrequest", "id": 161, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161"}}, "title": "Learn Gazebo Visual Plugins for Ocean Reflections"}}, {"update": {"description": "THIS PR IS A WORK IN PROGRESS.\r\n\r\n**What has been done**\r\n\r\nThe purpose of this PR is to experiment with Gazebo Visual Plugins to build towards ocean reflections. The major steps have been:\r\n\r\n1. Removing all previous shader and material param setting from before \\(not permanently, but done to simplify plugin for learning and experimentation\\)\r\n2. Create 2 entities:\r\n\r\n    1. An Ogre plane aligned with the ocean waves with the render texture\r\n    2. An Ogre Rectangle in the upper right corner to show what the render texture looks like\r\n    \r\n3. Use the user camera to create a rendertexture that updates to match what the user camera sees\r\n4. Attempted reflection attempt\r\n\r\n**What needs to be done and questions about it**\r\n\r\n1. Currently, I create a new material and new texture in the C\\+\\+ code and do not use any shaders. I will need to implement the shaders and update the C\\+\\+ code to interact with the shaders and material script. \r\n\r\n    1. An issue I had was that I could not modify the existing material or texture. If I had \r\n    \r\n\r\n```\r\ntexture_unit \r\n{\r\n  texture reflectionTexture\r\n  tex_address_mode clamp\r\n}\r\n```\r\n\r\nand I tried to add to it with \r\n\r\n```\r\n Ogre::TexturePtr rttTexture =$\r\n   Ogre::TextureManager::getSingleton().createManual($\r\n     \"reflectionTexture\",$\r\n     Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME, $\r\n     Ogre::TEX_TYPE_2D, $\r\n     512, 512, $\r\n     0, $\r\n     Ogre::PF_R8G8B8, $\r\n     Ogre::TU_RENDERTARGET);$\r\n```\r\n\r\nthe ocean waves would not turn up. Perhaps I made some mistakes with it, but I tried at it for quite a while without success. Might need to look to see if there are errors in ogre.log\r\n\r\n2\\. I need to figure out the appropriate matrices needed the transform coordinates correctly in the vertex shader.\r\n\r\n3\\. Got working material on ocean with `this->visual->SetMaterial`, but could not work when using material script.\r\n\r\n4\\. Do I need to make a new ogre camera that is not the user camera\u2019s ogre camera? When I tried making a new camera \\(referred to Pro Ogre 3D Book\\), I had difficulty positioning the camera to match the user camera pose \\(move camera or camera node? diff coordinate systems?, etc\\)\r\n\r\n**I plan to add some commits showing more clearly what I am attempting to do,  but isn\u2019t working. Stable commits at** 1529:01aadf9da3d0 \\(matches figure 4\\), 1516:c46139ca81c8 \\(shows upper right miniscreen and a small flat plane with render texture\\), \r\n\r\n**Incremental improvements and understanding**\r\n\r\n\u200c\r\n\r\n![](https://lh3.googleusercontent.com/B-T_7m_By3yttge1fI63l-WYoT9nnVTeoqpvTLDzNYCjjxdHBYQoK9gXSf3DoPU4kPZ9KvmBBW-_qmsq6flGmkPNw3aly4HcSgos0pagT6M9-yeAg_8_IBQ7jokVvXg3s9KNtH3m)\r\nFigure 1: Colored ocean with fragment shader based on position, created a plane with a cloud picture, and show a texture of the usercamera image in the upper right\r\n\r\n![](https://lh4.googleusercontent.com/sqmhSaEHRsjdcAyKEtLJ3ttm_q3XP5esooZiT-TLTbi7pTN9MADsx4m1IUCYSZYa0xbUY6EgWJHX_ZUTcwbb9PQmF01ZeHdv_J5NFPbx-JCuxEKPxSi1FOuKCuLc5jfgHcaxDF6S)\r\nFigure 2: Change miniscreen to no longer show a miniscreen inside of itself\r\n\r\n\u200c\r\n\r\n![](https://lh3.googleusercontent.com/HCsEeJU2GbQgUNTnUnlQfYumeVvg8vMOtMuGPZMr3CgBZNN6txkRg3fFk9clHtLzLD9h775zWpiyT3OzJndd1xlTurmYZD3RzgLndNQOB1g9CJpG9ZmC15JB2JYHzSdgpQOzbatx)\r\nFigure 3: Remove ocean shader and make plane display texture\r\n\r\n\u200c\r\n\r\n![](https://bitbucket.org/repo/BgXLzgM/images/1339973276-image.png)\r\n\u200c\r\n\r\n![](https://bitbucket.org/repo/BgXLzgM/images/1477922417-image.png)\r\nFigure 4: Rotate plane to align with ocean waves and enable reflection \\(shows non-working view from above and promsing view from below\\)\r\n\r\n\u200c\r\n\r\n**Reference Material**\r\n\r\nOgre Render to Texture Tutorial [http://wiki.ogre3d.org/Intermediate\\+Tutorial\\+7](http://wiki.ogre3d.org/Intermediate+Tutorial+7)\r\n\r\nPro Ogre 3D Book [https://books.google.ca/books?id=GifUrbWat14C&pg=PA166&lpg=PA166&dq=ogre\\+reflection&source=bl&ots=glk0q9tlDg&sig=ACfU3U2g\\_Zg3zryST6pGEYVmzPOsE06i2w&hl=en&sa=X&ved=2ahUKEwiXvIPFhYvkAhW2JTQIHdbGAdQQ6AEwDHoECAgQAQ#v=onepage&q&f=false](https://books.google.ca/books?id=GifUrbWat14C&pg=PA166&lpg=PA166&dq=ogre+reflection&source=bl&ots=glk0q9tlDg&sig=ACfU3U2g_Zg3zryST6pGEYVmzPOsE06i2w&hl=en&sa=X&ved=2ahUKEwiXvIPFhYvkAhW2JTQIHdbGAdQQ6AEwDHoECAgQAQ#v=onepage&q&f=false)\r\n\r\nGazebo rendering source code https://bitbucket.org/osrf/gazebo/src/default/gazebo/rendering/\r\n\r\nGLSL Shader Tutorial for Reflections [https://www.youtube.com/watch?v=GADTasvDOX4&list=PLRIWtICgwaX23jiqVByUs0bqhnalNTNZh&index=4](https://www.youtube.com/watch?v=GADTasvDOX4&list=PLRIWtICgwaX23jiqVByUs0bqhnalNTNZh&index=4)\r\n\r\nCamera Positioning Tutorial [http://wiki.ogre3d.org/Simple\\+3rd\\+person\\+camera](http://wiki.ogre3d.org/Simple+3rd+person+camera)", "title": "Learn Gazebo Visual Plugins for Ocean Reflections", "destination": {"commit": {"hash": "342eec4f700b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/342eec4f700b.json"}, "html": {"href": "#!/osrf/vrx/commits/342eec4f700b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "01aadf9da3d0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/01aadf9da3d0.json"}, "html": {"href": "#!/osrf/vrx/commits/01aadf9da3d0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Learn-Gazebo-Visual"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-18T06:50:51.172826+00:00"}, "pull_request": {"type": "pullrequest", "id": 161, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161"}}, "title": "Learn Gazebo Visual Plugins for Ocean Reflections"}}, {"update": {"description": "THIS PR IS A WORK IN PROGRESS.\r\n\r\n**What has been done**\r\n\r\nThe purpose of this PR is to experiment with Gazebo Visual Plugins to build towards ocean reflections. The major steps have been:\r\n\r\n1. Removing all previous shader and material param setting from before \\(not permanently, but done to simplify plugin for learning and experimentation\\)\r\n2. Create 2 entities:\r\n\r\n    1. An Ogre plane aligned with the ocean waves with the render texture\r\n    2. An Ogre Rectangle in the upper right corner to show what the render texture looks like\r\n    \r\n3. Use the user camera to create a rendertexture that updates to match what the user camera sees\r\n4. Attempted reflection attempt\r\n\r\n**What needs to be done and questions about it**\r\n\r\n\u200c\r\n\r\n**Incremental improvements and understanding**\r\n\r\n\u200c\r\n\r\n![](https://lh3.googleusercontent.com/B-T_7m_By3yttge1fI63l-WYoT9nnVTeoqpvTLDzNYCjjxdHBYQoK9gXSf3DoPU4kPZ9KvmBBW-_qmsq6flGmkPNw3aly4HcSgos0pagT6M9-yeAg_8_IBQ7jokVvXg3s9KNtH3m)\r\nFigure 1: Colored ocean with fragment shader based on position, created a plane with a cloud picture, and show a texture of the usercamera image in the upper right\r\n\r\n![](https://lh4.googleusercontent.com/sqmhSaEHRsjdcAyKEtLJ3ttm_q3XP5esooZiT-TLTbi7pTN9MADsx4m1IUCYSZYa0xbUY6EgWJHX_ZUTcwbb9PQmF01ZeHdv_J5NFPbx-JCuxEKPxSi1FOuKCuLc5jfgHcaxDF6S)\r\nFigure 2: Change miniscreen to no longer show a miniscreen inside of itself\r\n\r\n\u200c\r\n\r\n![](https://lh3.googleusercontent.com/HCsEeJU2GbQgUNTnUnlQfYumeVvg8vMOtMuGPZMr3CgBZNN6txkRg3fFk9clHtLzLD9h775zWpiyT3OzJndd1xlTurmYZD3RzgLndNQOB1g9CJpG9ZmC15JB2JYHzSdgpQOzbatx)\r\nFigure 3: Remove ocean shader and make plane display texture\r\n\r\n\u200c\r\n\r\n![](https://bitbucket.org/repo/BgXLzgM/images/1339973276-image.png)\r\n![](https://bitbucket.org/repo/BgXLzgM/images/1477922417-image.png)\r\nFigure 4: Rotate plane to align with ocean waves and enable reflection \\(shows non-working view from above and promsing view from below\\)\r\n\r\n\u200c\r\n\r\n**Reference Material**\r\n\r\nOgre Render to Texture Tutorial [http://wiki.ogre3d.org/Intermediate\\+Tutorial\\+7](http://wiki.ogre3d.org/Intermediate+Tutorial+7)\r\n\r\nPro Ogre 3D Book [https://books.google.ca/books?id=GifUrbWat14C&pg=PA166&lpg=PA166&dq=ogre\\+reflection&source=bl&ots=glk0q9tlDg&sig=ACfU3U2g\\_Zg3zryST6pGEYVmzPOsE06i2w&hl=en&sa=X&ved=2ahUKEwiXvIPFhYvkAhW2JTQIHdbGAdQQ6AEwDHoECAgQAQ#v=onepage&q&f=false](https://books.google.ca/books?id=GifUrbWat14C&pg=PA166&lpg=PA166&dq=ogre+reflection&source=bl&ots=glk0q9tlDg&sig=ACfU3U2g_Zg3zryST6pGEYVmzPOsE06i2w&hl=en&sa=X&ved=2ahUKEwiXvIPFhYvkAhW2JTQIHdbGAdQQ6AEwDHoECAgQAQ#v=onepage&q&f=false)\r\n\r\nGazebo rendering source code https://bitbucket.org/osrf/gazebo/src/default/gazebo/rendering/\r\n\r\nGLSL Shader Tutorial for Reflections [https://www.youtube.com/watch?v=GADTasvDOX4&list=PLRIWtICgwaX23jiqVByUs0bqhnalNTNZh&index=4](https://www.youtube.com/watch?v=GADTasvDOX4&list=PLRIWtICgwaX23jiqVByUs0bqhnalNTNZh&index=4)\r\n\r\nCamera Positioning Tutorial [http://wiki.ogre3d.org/Simple\\+3rd\\+person\\+camera](http://wiki.ogre3d.org/Simple+3rd+person+camera)", "title": "Learn Gazebo Visual Plugins for Ocean Reflections", "destination": {"commit": {"hash": "342eec4f700b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/342eec4f700b.json"}, "html": {"href": "#!/osrf/vrx/commits/342eec4f700b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "01aadf9da3d0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/01aadf9da3d0.json"}, "html": {"href": "#!/osrf/vrx/commits/01aadf9da3d0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Learn-Gazebo-Visual"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-18T06:38:09.191229+00:00"}, "pull_request": {"type": "pullrequest", "id": 161, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161"}}, "title": "Learn Gazebo Visual Plugins for Ocean Reflections"}}, {"update": {"description": "THIS PR IS A WORK IN PROGRESS.\r\n\r\n**What has been done**\r\n\r\nThe purpose of this PR is to experiment with Gazebo Visual Plugins to build towards ocean reflections. The major steps have been:\r\n\r\n1. Removing all previous shader and material param setting from before \\(not permanently, but done to simplify plugin for learning and experimentation\\)\r\n2. Create 2 entities:\r\n\r\n    1. An Ogre plane aligned with the ocean waves with the render texture\r\n    2. An Ogre Rectangle in the upper right corner to show what the render texture looks like\r\n    \r\n3. Use the user camera to create a rendertexture that updates to match what the user camera sees\r\n4. Attempted reflection attempt \r\n\r\n**What needs to be done and questions about it**\r\n\r\n\u200c\r\n\r\n**Incremental improvements and understanding**\r\n\r\n\u200c\r\n\r\n![](https://lh3.googleusercontent.com/B-T_7m_By3yttge1fI63l-WYoT9nnVTeoqpvTLDzNYCjjxdHBYQoK9gXSf3DoPU4kPZ9KvmBBW-_qmsq6flGmkPNw3aly4HcSgos0pagT6M9-yeAg_8_IBQ7jokVvXg3s9KNtH3m)\r\nFigure 1: Colored ocean with fragment shader based on position, created a plane with a cloud picture, and show a texture of the usercamera image in the upper right\r\n\r\n![](https://lh4.googleusercontent.com/sqmhSaEHRsjdcAyKEtLJ3ttm_q3XP5esooZiT-TLTbi7pTN9MADsx4m1IUCYSZYa0xbUY6EgWJHX_ZUTcwbb9PQmF01ZeHdv_J5NFPbx-JCuxEKPxSi1FOuKCuLc5jfgHcaxDF6S)\r\nFigure 2: Change miniscreen to no longer show a miniscreen inside of itself", "title": "Learn Gazebo Visual Plugins for Ocean Reflections", "destination": {"commit": {"hash": "342eec4f700b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/342eec4f700b.json"}, "html": {"href": "#!/osrf/vrx/commits/342eec4f700b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "01aadf9da3d0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/01aadf9da3d0.json"}, "html": {"href": "#!/osrf/vrx/commits/01aadf9da3d0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Learn-Gazebo-Visual"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-18T06:31:50.239690+00:00"}, "pull_request": {"type": "pullrequest", "id": 161, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161"}}, "title": "Learn Gazebo Visual Plugins for Ocean Reflections"}}, {"update": {"description": "THIS PR IS A WORK IN PROGRESS.\r\n\r\n**What has been done**\r\n\r\nThe purpose of this PR is to experiment with Gazebo Visual Plugins to build towards ocean reflections. The major steps have been:\r\n\r\n1. Removing all previous shader and material param setting from before \\(not permanently, but done to simplify plugin for learning and experimentation\\)\r\n2. Create 2 entities:\r\n\r\n    1. An Ogre plane aligned with the ocean waves with the render texture\r\n    2. An Ogre Rectangle in the upper right corner to show what the render texture looks like\r\n    \r\n3. Use the user camera to create a rendertexture that updates to match what the user camera sees\r\n4. Attempted reflection attempt \r\n\r\n**What needs to be done and questions about it**\r\n\r\n\u200c\r\n\r\n**Incremental improvements and understanding**\r\n\r\n\u200c\r\n\r\n![](https://lh3.googleusercontent.com/B-T_7m_By3yttge1fI63l-WYoT9nnVTeoqpvTLDzNYCjjxdHBYQoK9gXSf3DoPU4kPZ9KvmBBW-_qmsq6flGmkPNw3aly4HcSgos0pagT6M9-yeAg_8_IBQ7jokVvXg3s9KNtH3m)\r\nFigure 1: Colored ocean with fragment shader based on position, created a plane with a cloud picture, and show a texture of the usercamera image in the upper right\r\n\r\n![](https://lh4.googleusercontent.com/sqmhSaEHRsjdcAyKEtLJ3ttm_q3XP5esooZiT-TLTbi7pTN9MADsx4m1IUCYSZYa0xbUY6EgWJHX_ZUTcwbb9PQmF01ZeHdv_J5NFPbx-JCuxEKPxSi1FOuKCuLc5jfgHcaxDF6S)\r\nFigure 2: Change miniscreen to no longer show a miniscreen inside of itself", "title": "Learn Gazebo Visual Plugins for Ocean Reflections", "destination": {"commit": {"hash": "342eec4f700b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/342eec4f700b.json"}, "html": {"href": "#!/osrf/vrx/commits/342eec4f700b"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "default"}}, "reason": "", "source": {"commit": {"hash": "01aadf9da3d0", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/vrx/commit/01aadf9da3d0.json"}, "html": {"href": "#!/osrf/vrx/commits/01aadf9da3d0"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "branch": {"name": "Learn-Gazebo-Visual"}}, "state": "OPEN", "author": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "date": "2019-08-18T06:31:50.194668+00:00"}, "pull_request": {"type": "pullrequest", "id": 161, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161"}}, "title": "Learn Gazebo Visual Plugins for Ocean Reflections"}}]}