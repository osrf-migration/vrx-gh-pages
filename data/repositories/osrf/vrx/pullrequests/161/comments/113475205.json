{"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161/comments/113475205.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161/_/diff#comment-113475205"}}, "parent": {"id": 113474866, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161/comments/113474866.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161/_/diff#comment-113474866"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 161, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161"}}, "title": "Learn Gazebo Visual Plugins for Ocean Reflections"}, "content": {"raw": "**C\\+\\+ Code**\n\n```\n// Create Plane for reflection texture\nthis->data->plane = new Ogre::MovablePlane(\"Plane\");\nthis->data->plane->d = 0;\nthis->data->plane->normal = Ogre::Vector3::UNIT_Z;\nOgre::MeshManager::getSingleton().createPlane(\n  \"PlaneMesh\",\n  Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME,\n  *(this->data->plane),\n  512, 512, 1, 1,\n  true,\n  1, 1, 1,\n  Ogre::Vector3::UNIT_Y);\n(this->data->planeEntity = this->data->scene->OgreSceneManager()->\n createEntity(\"PlaneMesh\"));\n(this->data->planeNode = this->data->scene->OgreSceneManager()->\n getRootSceneNode()->createChildSceneNode());\nthis->data->planeNode->attachObject(this->data->planeEntity);\nthis->data->planeNode->attachObject(this->data->plane);\n\n// QUESTION: Create render texture, if I give it the same name as\n// the texture in scripts/waves.material, it would not work for some reason\nOgre::TexturePtr rttTexture =\n  Ogre::TextureManager::getSingleton().createManual(\n    \"mytexture\",\n    Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME,\n    Ogre::TEX_TYPE_2D,\n    512, 512,\n    0,\n    Ogre::PF_R8G8B8,\n    Ogre::TU_RENDERTARGET);\nthis->data->renderTarget = rttTexture->getBuffer()->getRenderTarget();\n\n// Setup camera\nthis->data->camera = this->data->scene->GetUserCamera(0)->OgreCamera();\n\n// Setup render texture\nthis->data->renderTarget->addViewport(this->data->camera);\nthis->data->renderTarget->getViewport(0)->setClearEveryFrame(true);\n(this->data->renderTarget->getViewport(0)->\n setBackgroundColour(Ogre::ColourValue::Black));\n\nthis->data->renderTarget->addListener(this);\n\n// Camera reflection and clip plane setup\nthis->data->camera->enableReflection(this->data->plane);\nthis->data->camera->enableCustomNearClipPlane(this->data->plane);\nthis->data->planeEntity->setMaterialName(\"reflection\");\n```\n\n\u200c\n\n**Material Script**\n\n```\nvertex_program reflectionV glsl\n{\n  source ../programs/reflection.vert\n}\n\nfragment_program reflectionF glsl\n{\n  source ../programs/reflection.frag\n  default_params\n  {\n    param_named reflectMap int 0\n  }\n}\n\nmaterial reflection\n{\n  technique GLSL\n  {\n    pass\n    {\n      // Not use shaders yet to simplify\n      scene_blend alpha_blend\n      texture_unit\n      {\n        texture mytexture\n        tex_address_mode clamp\n      }\n    }\n  }\n}\n```\n\nI have the `reflection` material in the material script with a texture `mytexture` that is not fully defined. Then in the C\\+\\+ code, I try to edit the texture `mytexture` with the camera's render texture and then give the plane the `reflection` material.\n\nIn the Fresnel example, they have a `Examples/FresnelReflectionRefraction`material in the material script with a texture `reflection` that is not fully defined. Then in the C\\+\\+ code, they try to edit the texture `reflection` with the camera's render texture and then give the plane the `Examples/FresnelReflectionRefraction` material.\n\nI feel that I am doing the same thing in principle, but maybe I am missing an important step? Or something related to the resource group?", "markup": "markdown", "html": "<p><strong>C++ Code</strong></p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">//</span> <span class=\"nt\">Create</span> <span class=\"nt\">Plane</span> <span class=\"nt\">for</span> <span class=\"nt\">reflection</span> <span class=\"nt\">texture</span>\n<span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">plane</span> <span class=\"o\">=</span> <span class=\"nt\">new</span> <span class=\"nt\">Ogre</span><span class=\"p\">::</span><span class=\"nd\">MovablePlane</span><span class=\"o\">(</span><span class=\"s2\">&quot;Plane&quot;</span><span class=\"o\">);</span>\n<span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">plane-</span><span class=\"o\">&gt;</span><span class=\"nt\">d</span> <span class=\"o\">=</span> <span class=\"nt\">0</span><span class=\"o\">;</span>\n<span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">plane-</span><span class=\"o\">&gt;</span><span class=\"nt\">normal</span> <span class=\"o\">=</span> <span class=\"nt\">Ogre</span><span class=\"p\">::</span><span class=\"nd\">Vector3</span><span class=\"p\">::</span><span class=\"nd\">UNIT_Z</span><span class=\"o\">;</span>\n<span class=\"nt\">Ogre</span><span class=\"p\">::</span><span class=\"nd\">MeshManager</span><span class=\"p\">::</span><span class=\"nd\">getSingleton</span><span class=\"o\">()</span><span class=\"p\">.</span><span class=\"nc\">createPlane</span><span class=\"o\">(</span>\n  <span class=\"s2\">&quot;PlaneMesh&quot;</span><span class=\"o\">,</span>\n  <span class=\"nt\">Ogre</span><span class=\"p\">::</span><span class=\"nd\">ResourceGroupManager</span><span class=\"p\">::</span><span class=\"nd\">DEFAULT_RESOURCE_GROUP_NAME</span><span class=\"o\">,</span>\n  <span class=\"o\">*(</span><span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">plane</span><span class=\"o\">),</span>\n  <span class=\"nt\">512</span><span class=\"o\">,</span> <span class=\"nt\">512</span><span class=\"o\">,</span> <span class=\"nt\">1</span><span class=\"o\">,</span> <span class=\"nt\">1</span><span class=\"o\">,</span>\n  <span class=\"nt\">true</span><span class=\"o\">,</span>\n  <span class=\"nt\">1</span><span class=\"o\">,</span> <span class=\"nt\">1</span><span class=\"o\">,</span> <span class=\"nt\">1</span><span class=\"o\">,</span>\n  <span class=\"nt\">Ogre</span><span class=\"p\">::</span><span class=\"nd\">Vector3</span><span class=\"p\">::</span><span class=\"nd\">UNIT_Y</span><span class=\"o\">);</span>\n<span class=\"o\">(</span><span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">planeEntity</span> <span class=\"o\">=</span> <span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">scene-</span><span class=\"o\">&gt;</span><span class=\"nt\">OgreSceneManager</span><span class=\"o\">()</span><span class=\"nt\">-</span><span class=\"o\">&gt;</span>\n <span class=\"nt\">createEntity</span><span class=\"o\">(</span><span class=\"s2\">&quot;PlaneMesh&quot;</span><span class=\"o\">));</span>\n<span class=\"o\">(</span><span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">planeNode</span> <span class=\"o\">=</span> <span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">scene-</span><span class=\"o\">&gt;</span><span class=\"nt\">OgreSceneManager</span><span class=\"o\">()</span><span class=\"nt\">-</span><span class=\"o\">&gt;</span>\n <span class=\"nt\">getRootSceneNode</span><span class=\"o\">()</span><span class=\"nt\">-</span><span class=\"o\">&gt;</span><span class=\"nt\">createChildSceneNode</span><span class=\"o\">());</span>\n<span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">planeNode-</span><span class=\"o\">&gt;</span><span class=\"nt\">attachObject</span><span class=\"o\">(</span><span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">planeEntity</span><span class=\"o\">);</span>\n<span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">planeNode-</span><span class=\"o\">&gt;</span><span class=\"nt\">attachObject</span><span class=\"o\">(</span><span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">plane</span><span class=\"o\">);</span>\n\n<span class=\"o\">//</span> <span class=\"nt\">QUESTION</span><span class=\"o\">:</span> <span class=\"nt\">Create</span> <span class=\"nt\">render</span> <span class=\"nt\">texture</span><span class=\"o\">,</span> <span class=\"nt\">if</span> <span class=\"nt\">I</span> <span class=\"nt\">give</span> <span class=\"nt\">it</span> <span class=\"nt\">the</span> <span class=\"nt\">same</span> <span class=\"nt\">name</span> <span class=\"nt\">as</span>\n<span class=\"o\">//</span> <span class=\"nt\">the</span> <span class=\"nt\">texture</span> <span class=\"nt\">in</span> <span class=\"nt\">scripts</span><span class=\"o\">/</span><span class=\"nt\">waves</span><span class=\"p\">.</span><span class=\"nc\">material</span><span class=\"o\">,</span> <span class=\"nt\">it</span> <span class=\"nt\">would</span> <span class=\"nt\">not</span> <span class=\"nt\">work</span> <span class=\"nt\">for</span> <span class=\"nt\">some</span> <span class=\"nt\">reason</span>\n<span class=\"nt\">Ogre</span><span class=\"p\">::</span><span class=\"nd\">TexturePtr</span> <span class=\"nt\">rttTexture</span> <span class=\"o\">=</span>\n  <span class=\"nt\">Ogre</span><span class=\"p\">::</span><span class=\"nd\">TextureManager</span><span class=\"p\">::</span><span class=\"nd\">getSingleton</span><span class=\"o\">()</span><span class=\"p\">.</span><span class=\"nc\">createManual</span><span class=\"o\">(</span>\n    <span class=\"s2\">&quot;mytexture&quot;</span><span class=\"o\">,</span>\n    <span class=\"nt\">Ogre</span><span class=\"p\">::</span><span class=\"nd\">ResourceGroupManager</span><span class=\"p\">::</span><span class=\"nd\">DEFAULT_RESOURCE_GROUP_NAME</span><span class=\"o\">,</span>\n    <span class=\"nt\">Ogre</span><span class=\"p\">::</span><span class=\"nd\">TEX_TYPE_2D</span><span class=\"o\">,</span>\n    <span class=\"nt\">512</span><span class=\"o\">,</span> <span class=\"nt\">512</span><span class=\"o\">,</span>\n    <span class=\"nt\">0</span><span class=\"o\">,</span>\n    <span class=\"nt\">Ogre</span><span class=\"p\">::</span><span class=\"nd\">PF_R8G8B8</span><span class=\"o\">,</span>\n    <span class=\"nt\">Ogre</span><span class=\"p\">::</span><span class=\"nd\">TU_RENDERTARGET</span><span class=\"o\">);</span>\n<span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">renderTarget</span> <span class=\"o\">=</span> <span class=\"nt\">rttTexture-</span><span class=\"o\">&gt;</span><span class=\"nt\">getBuffer</span><span class=\"o\">()</span><span class=\"nt\">-</span><span class=\"o\">&gt;</span><span class=\"nt\">getRenderTarget</span><span class=\"o\">();</span>\n\n<span class=\"o\">//</span> <span class=\"nt\">Setup</span> <span class=\"nt\">camera</span>\n<span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">camera</span> <span class=\"o\">=</span> <span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">scene-</span><span class=\"o\">&gt;</span><span class=\"nt\">GetUserCamera</span><span class=\"o\">(</span><span class=\"nt\">0</span><span class=\"o\">)</span><span class=\"nt\">-</span><span class=\"o\">&gt;</span><span class=\"nt\">OgreCamera</span><span class=\"o\">();</span>\n\n<span class=\"o\">//</span> <span class=\"nt\">Setup</span> <span class=\"nt\">render</span> <span class=\"nt\">texture</span>\n<span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">renderTarget-</span><span class=\"o\">&gt;</span><span class=\"nt\">addViewport</span><span class=\"o\">(</span><span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">camera</span><span class=\"o\">);</span>\n<span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">renderTarget-</span><span class=\"o\">&gt;</span><span class=\"nt\">getViewport</span><span class=\"o\">(</span><span class=\"nt\">0</span><span class=\"o\">)</span><span class=\"nt\">-</span><span class=\"o\">&gt;</span><span class=\"nt\">setClearEveryFrame</span><span class=\"o\">(</span><span class=\"nt\">true</span><span class=\"o\">);</span>\n<span class=\"o\">(</span><span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">renderTarget-</span><span class=\"o\">&gt;</span><span class=\"nt\">getViewport</span><span class=\"o\">(</span><span class=\"nt\">0</span><span class=\"o\">)</span><span class=\"nt\">-</span><span class=\"o\">&gt;</span>\n <span class=\"nt\">setBackgroundColour</span><span class=\"o\">(</span><span class=\"nt\">Ogre</span><span class=\"p\">::</span><span class=\"nd\">ColourValue</span><span class=\"p\">::</span><span class=\"nd\">Black</span><span class=\"o\">));</span>\n\n<span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">renderTarget-</span><span class=\"o\">&gt;</span><span class=\"nt\">addListener</span><span class=\"o\">(</span><span class=\"nt\">this</span><span class=\"o\">);</span>\n\n<span class=\"o\">//</span> <span class=\"nt\">Camera</span> <span class=\"nt\">reflection</span> <span class=\"nt\">and</span> <span class=\"nt\">clip</span> <span class=\"nt\">plane</span> <span class=\"nt\">setup</span>\n<span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">camera-</span><span class=\"o\">&gt;</span><span class=\"nt\">enableReflection</span><span class=\"o\">(</span><span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">plane</span><span class=\"o\">);</span>\n<span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">camera-</span><span class=\"o\">&gt;</span><span class=\"nt\">enableCustomNearClipPlane</span><span class=\"o\">(</span><span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">plane</span><span class=\"o\">);</span>\n<span class=\"nt\">this-</span><span class=\"o\">&gt;</span><span class=\"nt\">data-</span><span class=\"o\">&gt;</span><span class=\"nt\">planeEntity-</span><span class=\"o\">&gt;</span><span class=\"nt\">setMaterialName</span><span class=\"o\">(</span><span class=\"s2\">&quot;reflection&quot;</span><span class=\"o\">);</span>\n</pre></div>\n\n\n<p>\u200c</p>\n<p><strong>Material Script</strong></p>\n<div class=\"codehilite\"><pre><span></span>vertex_program reflectionV glsl\n{\n  source ../programs/reflection.vert\n}\n\nfragment_program reflectionF glsl\n{\n  source ../programs/reflection.frag\n  default_params\n  {\n    param_named reflectMap int 0\n  }\n}\n\nmaterial reflection\n{\n  technique GLSL\n  {\n    pass\n    {\n      // Not use shaders yet to simplify\n      scene_blend alpha_blend\n      texture_unit\n      {\n        texture mytexture\n        tex_address_mode clamp\n      }\n    }\n  }\n}\n</pre></div>\n\n\n<p>I have the <code>reflection</code> material in the material script with a texture <code>mytexture</code> that is not fully defined. Then in the C++ code, I try to edit the texture <code>mytexture</code> with the camera's render texture and then give the plane the <code>reflection</code> material.</p>\n<p>In the Fresnel example, they have a <code>Examples/FresnelReflectionRefraction</code>material in the material script with a texture <code>reflection</code> that is not fully defined. Then in the C++ code, they try to edit the texture <code>reflection</code> with the camera's render texture and then give the plane the <code>Examples/FresnelReflectionRefraction</code> material.</p>\n<p>I feel that I am doing the same thing in principle, but maybe I am missing an important step? Or something related to the resource group?</p>", "type": "rendered"}, "created_on": "2019-08-18T21:50:59.551163+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-18T21:50:59.561242+00:00", "type": "pullrequest_comment", "id": 113475205}