{"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161/comments/113785514.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161/_/diff#comment-113785514"}}, "parent": {"id": 113652987, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161/comments/113652987.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161/_/diff#comment-113652987"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 161, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/161.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/161"}}, "title": "Learn Gazebo Visual Plugins for Ocean Reflections"}, "content": {"raw": "This should help. I see the reflection with these changes:\n\n\u200c\n\n```\ndiff -r cb426c264bf6 wave_gazebo/world_models/ocean_waves/materials/programs/reflection.frag\n--- a/wave_gazebo/world_models/ocean_waves/materials/programs/reflection.frag   Mon Aug 19 20:54:46 2019 -0700\n+++ b/wave_gazebo/world_models/ocean_waves/materials/programs/reflection.frag   Tue Aug 20 11:06:20 2019 -0700\n@@ -8,6 +8,6 @@\n   vec2 final = projectionCoord.xy / projectionCoord.w;\n   vec4 reflectionColour = texture2D(reflectMap, final);\n\n-  //gl_FragColor = reflectionColour;\n-  gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n+  gl_FragColor = reflectionColour;\n+  // gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n }\ndiff -r cb426c264bf6 wave_gazebo_plugins/src/WavefieldVisualPlugin.cc\n--- a/wave_gazebo_plugins/src/WavefieldVisualPlugin.cc  Mon Aug 19 20:54:46 2019 -0700\n+++ b/wave_gazebo_plugins/src/WavefieldVisualPlugin.cc  Tue Aug 20 11:06:20 2019 -0700\n@@ -142,10 +142,12 @@\n     this->data->camera = this->data->scene->GetUserCamera(0)->OgreCamera();\n\n     // Setup render texture\n+    this->data->renderTarget->setAutoUpdated(false);\n     this->data->renderTarget->addViewport(this->data->camera);\n     this->data->renderTarget->getViewport(0)->setClearEveryFrame(true);\n-    (this->data->renderTarget->getViewport(0)->\n-     setBackgroundColour(Ogre::ColourValue::Black));\n+    this->data->renderTarget->getViewport(0)->\n+     setBackgroundColour(rendering::Conversions::Convert(\n+     this->data->scene->BackgroundColor()));\n\n     // Ogre::MaterialPtr renderMaterial =\n       // Ogre::MaterialManager::getSingleton().create(\n```\n\n\u200c\n\nI think the important bit is `this->data->renderTarget->setAutoUpdated(false);`. Since we're calling `this->data->renderTarget->update()` manually, we need to tell it to disable auto update.", "markup": "markdown", "html": "<p>This should help. I see the reflection with these changes:</p>\n<p>\u200c</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff -r cb426c264bf6 wave_gazebo/world_models/ocean_waves/materials/programs/reflection.frag</span>\n<span class=\"gd\">--- a/wave_gazebo/world_models/ocean_waves/materials/programs/reflection.frag   Mon Aug 19 20:54:46 2019 -0700</span>\n<span class=\"gi\">+++ b/wave_gazebo/world_models/ocean_waves/materials/programs/reflection.frag   Tue Aug 20 11:06:20 2019 -0700</span>\n<span class=\"gu\">@@ -8,6 +8,6 @@</span>\n   vec2 final = projectionCoord.xy / projectionCoord.w;\n   vec4 reflectionColour = texture2D(reflectMap, final);\n\n<span class=\"gd\">-  //gl_FragColor = reflectionColour;</span>\n<span class=\"gd\">-  gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);</span>\n<span class=\"gi\">+  gl_FragColor = reflectionColour;</span>\n<span class=\"gi\">+  // gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);</span>\n }\n<span class=\"gh\">diff -r cb426c264bf6 wave_gazebo_plugins/src/WavefieldVisualPlugin.cc</span>\n<span class=\"gd\">--- a/wave_gazebo_plugins/src/WavefieldVisualPlugin.cc  Mon Aug 19 20:54:46 2019 -0700</span>\n<span class=\"gi\">+++ b/wave_gazebo_plugins/src/WavefieldVisualPlugin.cc  Tue Aug 20 11:06:20 2019 -0700</span>\n<span class=\"gu\">@@ -142,10 +142,12 @@</span>\n     this-&gt;data-&gt;camera = this-&gt;data-&gt;scene-&gt;GetUserCamera(0)-&gt;OgreCamera();\n\n     // Setup render texture\n<span class=\"gi\">+    this-&gt;data-&gt;renderTarget-&gt;setAutoUpdated(false);</span>\n     this-&gt;data-&gt;renderTarget-&gt;addViewport(this-&gt;data-&gt;camera);\n     this-&gt;data-&gt;renderTarget-&gt;getViewport(0)-&gt;setClearEveryFrame(true);\n<span class=\"gd\">-    (this-&gt;data-&gt;renderTarget-&gt;getViewport(0)-&gt;</span>\n<span class=\"gd\">-     setBackgroundColour(Ogre::ColourValue::Black));</span>\n<span class=\"gi\">+    this-&gt;data-&gt;renderTarget-&gt;getViewport(0)-&gt;</span>\n<span class=\"gi\">+     setBackgroundColour(rendering::Conversions::Convert(</span>\n<span class=\"gi\">+     this-&gt;data-&gt;scene-&gt;BackgroundColor()));</span>\n\n     // Ogre::MaterialPtr renderMaterial =\n       // Ogre::MaterialManager::getSingleton().create(\n</pre></div>\n\n\n<p>\u200c</p>\n<p>I think the important bit is <code>this-&gt;data-&gt;renderTarget-&gt;setAutoUpdated(false);</code>. Since we're calling <code>this-&gt;data-&gt;renderTarget-&gt;update()</code> manually, we need to tell it to disable auto update.</p>", "type": "rendered"}, "created_on": "2019-08-20T18:06:59.939738+00:00", "user": {"display_name": "Ian Chen", "uuid": "{eaa6fca5-6deb-43f6-907f-971c144735dd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D"}, "html": {"href": "https://bitbucket.org/%7Beaa6fca5-6deb-43f6-907f-971c144735dd%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5/1e4adcdf-1946-4280-9aea-eb5f15a7f912/128"}}, "nickname": "Ian Chen", "type": "user", "account_id": "557058:10b01d41-a2e9-4a41-a907-e6e2f03b6cd5"}, "updated_on": "2019-08-20T18:08:18.019703+00:00", "type": "pullrequest_comment", "id": 113785514}