{"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/56/comments/84234947.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/56/_/diff#comment-84234947"}}, "parent": {"id": 84213825, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/56/comments/84213825.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/56/_/diff#comment-84213825"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 56, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/56.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/56"}}, "title": "Acoustic pinger"}, "content": {"raw": "Sure, \n\nIn this sub-branch, I have already added the pinger plugin to the sensor version of the ASV, which is also now the default.  As such, the minimal version of the instructions would be the following;\n\n    roslaunch robotx_gazebo vmrc.launch\n    roslaunch robotx_gazebo pinger.launch\n\nBefore the result can be visualised, a valid transformation between the world and the pose of the sensor will be required.  This can created by the user, or alternately the existing localisation example can be used;\n\n```shell\nroslaunch wamv_gazebo localization_example.launch\n```\n\nThe output of the pinger can now be visualised using RViz on the topics;\n\n    /pinger/marker/ground_truth\n    /pinger/marker/signal\n\nNote that the pinger launch file is not required for the operation of the pinger plugin itself.   It starts two nodes, `set_pinger_position.py` and `pinger_visualisation.py`.  These are not required for the operation of the pinger itself but provide the following;\n\n* Setting the pinger position to a random place in the current VMRC courses entry/exit gates\n* Generates a marker for RViz showing the ground truth position in the `map` frame\n* Produce a marker for RViz showing the current range and bearing of the sensor return\n\nNote:  this is configuration does not currently produce a transform between the `map` and `utm` frame generated by the localisation example.  Visualisation of the ground truth requires the map frame to be set manually.\n\nThe output of the pinger is a custom message of type `usv_msgs/RangeBearing` on the topic `/pinger/range_bearing`.  Each published message consists of a single sampled return that has been converted to a range and bearing in the frame of reference of the sensor.\n\nIf the user is creating a custom WAM-V configuration based on the existing .xacro files, simply adding;\n\n    <xacro:wamv_pinger name=\"pinger_wamv\" position=\"1.0 0 -1.0\" />\n\nShould be sufficient to add the pinger sensor to the vehicles model.  The position can be configured by simply changing the position offset in the tag.  More detailed changes, including changing the `frame_id` of the plugin, and the noise model can be performed by altering the `wamv_pinger.xacro` file.\n\nPlease let me know if you would like further information.\n\nRegards,\n\nJonathan.", "markup": "markdown", "html": "<p>Sure, </p>\n<p>In this sub-branch, I have already added the pinger plugin to the sensor version of the ASV, which is also now the default.  As such, the minimal version of the instructions would be the following;</p>\n<div class=\"codehilite\"><pre><span></span>roslaunch robotx_gazebo vmrc.launch\nroslaunch robotx_gazebo pinger.launch\n</pre></div>\n\n\n<p>Before the result can be visualised, a valid transformation between the world and the pose of the sensor will be required.  This can created by the user, or alternately the existing localisation example can be used;</p>\n<div class=\"codehilite language-shell\"><pre><span></span>roslaunch wamv_gazebo localization_example.launch\n</pre></div>\n\n\n<p>The output of the pinger can now be visualised using RViz on the topics;</p>\n<div class=\"codehilite\"><pre><span></span>/pinger/marker/ground_truth\n/pinger/marker/signal\n</pre></div>\n\n\n<p>Note that the pinger launch file is not required for the operation of the pinger plugin itself.   It starts two nodes, <code>set_pinger_position.py</code> and <code>pinger_visualisation.py</code>.  These are not required for the operation of the pinger itself but provide the following;</p>\n<ul>\n<li>Setting the pinger position to a random place in the current VMRC courses entry/exit gates</li>\n<li>Generates a marker for RViz showing the ground truth position in the <code>map</code> frame</li>\n<li>Produce a marker for RViz showing the current range and bearing of the sensor return</li>\n</ul>\n<p>Note:  this is configuration does not currently produce a transform between the <code>map</code> and <code>utm</code> frame generated by the localisation example.  Visualisation of the ground truth requires the map frame to be set manually.</p>\n<p>The output of the pinger is a custom message of type <code>usv_msgs/RangeBearing</code> on the topic <code>/pinger/range_bearing</code>.  Each published message consists of a single sampled return that has been converted to a range and bearing in the frame of reference of the sensor.</p>\n<p>If the user is creating a custom WAM-V configuration based on the existing .xacro files, simply adding;</p>\n<div class=\"codehilite\"><pre><span></span>&lt;xacro:wamv_pinger name=&quot;pinger_wamv&quot; position=&quot;1.0 0 -1.0&quot; /&gt;\n</pre></div>\n\n\n<p>Should be sufficient to add the pinger sensor to the vehicles model.  The position can be configured by simply changing the position offset in the tag.  More detailed changes, including changing the <code>frame_id</code> of the plugin, and the noise model can be performed by altering the <code>wamv_pinger.xacro</code> file.</p>\n<p>Please let me know if you would like further information.</p>\n<p>Regards,</p>\n<p>Jonathan.</p>", "type": "rendered"}, "created_on": "2018-12-01T01:07:47.299709+00:00", "user": {"display_name": "Jonathan Wheare", "uuid": "{65043b9b-c505-4efe-852a-3d2393a0ee80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B65043b9b-c505-4efe-852a-3d2393a0ee80%7D"}, "html": {"href": "https://bitbucket.org/%7B65043b9b-c505-4efe-852a-3d2393a0ee80%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/JW-2.png"}}, "nickname": "Jonathan Wheare", "type": "user", "account_id": "5b9791e8a9fd6d2c834b5864"}, "updated_on": "2018-12-01T01:07:47.432374+00:00", "type": "pullrequest_comment", "id": 84234947}