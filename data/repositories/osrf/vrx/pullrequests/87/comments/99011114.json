{"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/87/comments/99011114.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/87/_/diff#comment-99011114"}}, "parent": {"id": 98694697, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/87/comments/98694697.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/87/_/diff#comment-98694697"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 87, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/87.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/87"}}, "title": "Fix issue #80"}, "content": {"raw": "I wasn't able to reproduce it either but I see that it might happen. The `light_buoy_plugin` code is running in two different visual plugins. One version is running in the server \\(gzserver\\) and is used for sensor generation \\(what we see from the cameras\\) and the other version of the plugin is running on the GUI \\(what we see from the Gazebo 3D user camera window\\). These plugins are executed at different frequency. The server plugin is executed at 1000 Hz and the gui plugin is tipically at ~60Hz. In a summary, they don\u2019t execute at the exact same time. When each plugin executes and it\u2019s time to set the new color of the light buoy, it sets a 1 second timer to execute the next time. Note that we\u2019re not using absolute time, it\u2019s all relative, so I see the possibility of the two plugins drifting if we let the simulation run enough time.\n\nThis patch uses absolute simulation time now. This means, that when the `Load()` function executes in each plugin, we look at the current sim time and this is our reference time. We\u2019ll always try to update the plugins at 1-second-intervals from this time. I believe this solution guarantees that the plugins won\u2019t drift with time. It\u2019s true that they won\u2019t execute exactly at the same time but this shouldn\u2019t be very noticeable.", "markup": "markdown", "html": "<p>I wasn't able to reproduce it either but I see that it might happen. The <code>light_buoy_plugin</code> code is running in two different visual plugins. One version is running in the server (gzserver) and is used for sensor generation (what we see from the cameras) and the other version of the plugin is running on the GUI (what we see from the Gazebo 3D user camera window). These plugins are executed at different frequency. The server plugin is executed at 1000 Hz and the gui plugin is tipically at ~60Hz. In a summary, they don\u2019t execute at the exact same time. When each plugin executes and it\u2019s time to set the new color of the light buoy, it sets a 1 second timer to execute the next time. Note that we\u2019re not using absolute time, it\u2019s all relative, so I see the possibility of the two plugins drifting if we let the simulation run enough time.</p>\n<p>This patch uses absolute simulation time now. This means, that when the <code>Load()</code> function executes in each plugin, we look at the current sim time and this is our reference time. We\u2019ll always try to update the plugins at 1-second-intervals from this time. I believe this solution guarantees that the plugins won\u2019t drift with time. It\u2019s true that they won\u2019t execute exactly at the same time but this shouldn\u2019t be very noticeable.</p>", "type": "rendered"}, "created_on": "2019-04-16T16:44:34.860925+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2019-04-16T16:46:53.923463+00:00", "type": "pullrequest_comment", "id": 99011114}