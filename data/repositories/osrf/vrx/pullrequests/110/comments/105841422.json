{"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/110/comments/105841422.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/110/_/diff#comment-105841422"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 110, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/110.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/110"}}, "title": "Issue#99 wamv compliance"}, "content": {"raw": "I was just testing this out with a few yaml files and **I think it works really well.** The simple check of being in the correct bounding box and within the number limit is a good way to check for compliance.\n\nI have some suggestions I thought might be valuable. I was trying out the sensor compliance with the the sensor yaml file shown below. I have multiple \u201cincompliances\u201d including: \n\n* Too many cameras\n* GPS invalid params\n* IMU invalid params\n\n**The issue I found was that it was not super easy for me to go from an invalid one to a valid one.** When I had this gps out of bounds error, I didn\u2019t know in which dimension. A few suggestions I\u2019d have \\(let me know your thoughts on these, just my opinion\\):\n\n* Maybe don\u2019t assert => fail to run, but still create the urdf so it can be seen visually, especially if teams just want to play around with different configurations, it might be nice for them to still be allowed to create urdfs with invalid configurations, just as long as they know for sure it\u2019s invalid for competition\n* I would like it if the key reasons for failure were colored yellow or red such as `wamv_gps gps_wamv is out of bounds`, only if its easy/doable\n* I would like it if more than one reason for failure could be shown. For example here, I have 3 compliance issues, but the script ends and only tells me one, so I had to run this script about 5 times figuring out which direction to move the gps, then run it again to find about imu and solve that, then run it again to find about camera. Showing all errors at once would be cool\n* If possible \\(might be infeasible\\), maybe say which xyz is out of bounds/which direction \\(probably which direction impossible based on the 2 bounding boxes\\) \n* Double check that the \u201cdefault xyz\u201d are all in valid positions \\(for imu, when I put no params for xyz \\(default\\), it was invalid and I had no idea what range of x, y, z to even try because I can\u2019t visualize the invalid configuration and default is not shown\\)\n\nKeep up the great work!\n\n![](data/bitbucket.org/repo/BgXLzgM/images/3143616145-Testing_Compliance.png)\n", "markup": "markdown", "html": "<p>I was just testing this out with a few yaml files and <strong>I think it works really well.</strong> The simple check of being in the correct bounding box and within the number limit is a good way to check for compliance.</p>\n<p>I have some suggestions I thought might be valuable. I was trying out the sensor compliance with the the sensor yaml file shown below. I have multiple \u201cincompliances\u201d including: </p>\n<ul>\n<li>Too many cameras</li>\n<li>GPS invalid params</li>\n<li>IMU invalid params</li>\n</ul>\n<p><strong>The issue I found was that it was not super easy for me to go from an invalid one to a valid one.</strong> When I had this gps out of bounds error, I didn\u2019t know in which dimension. A few suggestions I\u2019d have (let me know your thoughts on these, just my opinion):</p>\n<ul>\n<li>Maybe don\u2019t assert =&gt; fail to run, but still create the urdf so it can be seen visually, especially if teams just want to play around with different configurations, it might be nice for them to still be allowed to create urdfs with invalid configurations, just as long as they know for sure it\u2019s invalid for competition</li>\n<li>I would like it if the key reasons for failure were colored yellow or red such as <code>wamv_gps gps_wamv is out of bounds</code>, only if its easy/doable</li>\n<li>I would like it if more than one reason for failure could be shown. For example here, I have 3 compliance issues, but the script ends and only tells me one, so I had to run this script about 5 times figuring out which direction to move the gps, then run it again to find about imu and solve that, then run it again to find about camera. Showing all errors at once would be cool</li>\n<li>If possible (might be infeasible), maybe say which xyz is out of bounds/which direction (probably which direction impossible based on the 2 bounding boxes) </li>\n<li>Double check that the \u201cdefault xyz\u201d are all in valid positions (for imu, when I put no params for xyz (default), it was invalid and I had no idea what range of x, y, z to even try because I can\u2019t visualize the invalid configuration and default is not shown)</li>\n</ul>\n<p>Keep up the great work!</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3143616145-Testing_Compliance.png\" /></p>", "type": "rendered"}, "created_on": "2019-06-15T01:27:40.393544+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-15T01:27:40.401066+00:00", "type": "pullrequest_comment", "id": 105841422}