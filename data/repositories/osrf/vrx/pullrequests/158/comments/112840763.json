{"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/158/comments/112840763.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/158/_/diff#comment-112840763"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/158.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/158"}}, "title": "Fix RVIZ Mesh Issue"}, "content": {"raw": "**Original Issue** \n\nWhen following tutorial [#!/osrf/vrx/wiki/tutorials/Visualizing%20with%20RViz](#!/osrf/vrx/wiki/tutorials/Visualizing%20with%20RViz), there are errors like:\n\n```\n[ERROR] [1565646595.593786107, 28.110000000]: Could not load resource [model://cpu_cases/mesh/cpu_cases.dae]: Unable to open file \"model://cpu_cases/mesh/cpu_cases.dae\".\n[ERROR] [1565646595.595902926, 28.113000000]: Could not load model 'model://cpu_cases/mesh/cpu_cases.dae' for link 'cpu_cases_link': OGRE EXCEPTION(6:FileNotFoundException): Cannot locate resource model://cpu_cases/mesh/cpu_cases.dae in resource group Autodetect or any other group. in ResourceGroupManager::openResource at /build/ogre-1.9-B6QkmW/ogre-1.9-1.9.0+dfsg1/OgreMain/src/OgreResourceGroupManager.cpp (line 756)\n[ERROR] [1565646595.596011230, 28.113000000]: Could not load model 'model://cpu_cases/mesh/cpu_cases.dae' for link 'cpu_cases_link': OGRE EXCEPTION(6:FileNotFoundException): Cannot locate resource model://cpu_cases/mesh/cpu_cases.dae in resource group Autodetect or any other group. in ResourceGroupManager::openResource at /build/ogre-1.9-B6QkmW/ogre-1.9-1.9.0+dfsg1/OgreMain/src/OgreResourceGroupManager.cpp (line 756)\n[ERROR] [1565646595.716515686, 28.232000000]: Could not load resource [model://mono_camera/mesh/mono_camera.dae]: Unable to open file \"model://mono_camera/mesh/mono_camera.dae\".\n```\n\n  \nThis is fundamentally because we have an uneven model/mesh file structure. We have some meshes in vrx\\_gazebo/models/<model>/mesh/<model>.dae, but others in wamv\\_gazebo/mesh/<model>.dae or wamv\\_description/mesh/<model>.dae. \n\nRviz needs `robot_description` to have meshes in the form of `package://vrx_gazebo/models/3d_lidar/mesh/3d_lidar.dae` or `package://wamv_gazebo/mesh/gps.dae`.  It does not acknowledge `model://` and it leads to errors.\n\nWe also use `gz model` to spawn a wamv and it does not care if it is either `package://` or `model://`. However,  the remaining path must be relative to \\`GAZEBO\\_MODEL\\_PATH\\`.\n\nI have implemented two solutions. Please compare them and let me know which looks better:\n\n**1** [**f7f7796**](#!/osrf/vrx/commits/f7f7796e8b41b23b3a7178af9ced3d12bcfaa32d?at=default) **Fully functional solution, with urdf file modified when calling spawn\\_wamv.bash and giving proper model dirs to wamv\\_gazebo and wamv\\_description**\n\nThis involves making the model/mesh file structure consistent, so that we now have vrx\\_gazebo/models/<model>/mesh/<model>.dae, wamv\\_description/models/<model>/mesh/<model>.dae, wamv\\_gazebo/models/<model>/mesh/<model>.dae. From here, `robot_description` has meshes in the form of `package://vrx_gazebo/models/3d_lidar/mesh/3d_lidar.dae` or `package://wamv_gazebo/models/gps/mesh/gps.dae`.  \n\nTo make it work with `gz model`, I added code to the script to change all `package://vrx_gazebo/models/3d_lidar/mesh/3d_lidar.dae` =>  `package://3d_lidar/mesh/3d_lidar.dae` and`package://wamv_gazebo/models/gps/mesh/gps.dae` => `package://gps/mesh/gps.dae`.  Now if we have \\`GAZEBO\\_MODEL\\_PATH=/home/tylerlum/vrx\\_ws/src/vrx/vrx\\_gazebo/models:/home/tylerlum/vrx\\_ws/src/vrx/wamv\\_description/models:/home/tylerlum/vrx\\_ws/src/vrx/wamv\\_gazebo/models\\`, it works reliably.\n\n**Summary: This way works perfectly, except that it forces us to treat gps, WAM-V-Base like Gazebo models. Currently that leaves us with these Fake Models and Errors if they are pressed.**\n\n![](data/bitbucket.org/repo/BgXLzgM/images/4233133010-image.png)\n```\nError [parser.cc:334] Error finding file [/home/tylerlum/vrx_ws/src/vrx/wamv_gazebo/models/gps/model.sdf].\n```\n\n\u200c\n\n**2** [**393ccbb**](#!/osrf/vrx/commits/393ccbbf7027cb72a19a4829592c3256c42ddba7?at=default) **Fully functional solution, with model.config errors only when non\\_competition\\_mode:=false**\n\nThis involves leaving everything as is, making `robot_description` have meshes in the form of `package://vrx_gazebo/models/3d_lidar/mesh/3d_lidar.dae` or `package://wamv_gazebo/models/gps/mesh/gps.dae`.  Then having \\`GAZEBO\\_MODEL\\_PATH=/home/tylerlum/vrx\\_ws/src/vrx\\`. This is perfectly functional, except it has errors when running in `non_competition_mode:=false`\n\n\u200c\n\n**Summary: This way works perfectly, except that it outputs the following error ONLY when verbose:=true and non\\_competition\\_mode:=false. No error if non-verbose or if non\\_competition\\_mode.**  \n\n```\n[Err] [InsertModelWidget.cc:433] Missing model.config for model \"/home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/launch/../../.hg\"\n[Err] [InsertModelWidget.cc:433] Missing model.config for model \"/home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/launch/../../docker\"\n[Err] [InsertModelWidget.cc:433] Missing model.config for model \"/home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/launch/../../images\"\n[Err] [InsertModelWidget.cc:433] Missing model.config for model \"/home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/launch/../../tools\"\n[Err] [InsertModelWidget.cc:433] Missing model.config for model \"/home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/launch/../../usv_gazebo_plugins\"\n[Err] [InsertModelWidget.cc:433] Missing model.config for model \"/home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/launch/../../vrx_gazebo\"\n[Err] [InsertModelWidget.cc:433] Missing model.config for model \"/home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/launch/../../wamv_description\"\n[Err] [InsertModelWidget.cc:433] Missing model.config for model \"/home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/launch/../../wamv_gazebo\"\n[Err] [InsertModelWidget.cc:433] Missing model.config for model \"/home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/launch/../../wave_gazebo\"\n[Err] [InsertModelWidget.cc:433] Missing model.config for model \"/home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/launch/../../wave_gazebo_plugins\"\n```", "markup": "markdown", "html": "<p><strong>Original Issue</strong> </p>\n<p>When following tutorial <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/wiki/tutorials/Visualizing%20with%20RViz\" rel=\"nofollow\">#!/osrf/vrx/wiki/tutorials/Visualizing%20with%20RViz</a>, there are errors like:</p>\n<div class=\"codehilite\"><pre><span></span>[ERROR] [1565646595.593786107, 28.110000000]: Could not load resource [model://cpu_cases/mesh/cpu_cases.dae]: Unable to open file &quot;model://cpu_cases/mesh/cpu_cases.dae&quot;.\n[ERROR] [1565646595.595902926, 28.113000000]: Could not load model &#39;model://cpu_cases/mesh/cpu_cases.dae&#39; for link &#39;cpu_cases_link&#39;: OGRE EXCEPTION(6:FileNotFoundException): Cannot locate resource model://cpu_cases/mesh/cpu_cases.dae in resource group Autodetect or any other group. in ResourceGroupManager::openResource at /build/ogre-1.9-B6QkmW/ogre-1.9-1.9.0+dfsg1/OgreMain/src/OgreResourceGroupManager.cpp (line 756)\n[ERROR] [1565646595.596011230, 28.113000000]: Could not load model &#39;model://cpu_cases/mesh/cpu_cases.dae&#39; for link &#39;cpu_cases_link&#39;: OGRE EXCEPTION(6:FileNotFoundException): Cannot locate resource model://cpu_cases/mesh/cpu_cases.dae in resource group Autodetect or any other group. in ResourceGroupManager::openResource at /build/ogre-1.9-B6QkmW/ogre-1.9-1.9.0+dfsg1/OgreMain/src/OgreResourceGroupManager.cpp (line 756)\n[ERROR] [1565646595.716515686, 28.232000000]: Could not load resource [model://mono_camera/mesh/mono_camera.dae]: Unable to open file &quot;model://mono_camera/mesh/mono_camera.dae&quot;.\n</pre></div>\n\n\n<p>This is fundamentally because we have an uneven model/mesh file structure. We have some meshes in vrx_gazebo/models/&lt;model&gt;/mesh/&lt;model&gt;.dae, but others in wamv_gazebo/mesh/&lt;model&gt;.dae or wamv_description/mesh/&lt;model&gt;.dae. </p>\n<p>Rviz needs <code>robot_description</code> to have meshes in the form of <code>package://vrx_gazebo/models/3d_lidar/mesh/3d_lidar.dae</code> or <code>package://wamv_gazebo/mesh/gps.dae</code>.  It does not acknowledge <code>model://</code> and it leads to errors.</p>\n<p>We also use <code>gz model</code> to spawn a wamv and it does not care if it is either <code>package://</code> or <code>model://</code>. However,  the remaining path must be relative to `GAZEBO_MODEL_PATH`.</p>\n<p>I have implemented two solutions. Please compare them and let me know which looks better:</p>\n<p><strong>1</strong> <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/f7f7796e8b41b23b3a7178af9ced3d12bcfaa32d?at=default\" rel=\"nofollow\"><strong>f7f7796</strong></a> <strong>Fully functional solution, with urdf file modified when calling spawn_wamv.bash and giving proper model dirs to wamv_gazebo and wamv_description</strong></p>\n<p>This involves making the model/mesh file structure consistent, so that we now have vrx_gazebo/models/&lt;model&gt;/mesh/&lt;model&gt;.dae, wamv_description/models/&lt;model&gt;/mesh/&lt;model&gt;.dae, wamv_gazebo/models/&lt;model&gt;/mesh/&lt;model&gt;.dae. From here, <code>robot_description</code> has meshes in the form of <code>package://vrx_gazebo/models/3d_lidar/mesh/3d_lidar.dae</code> or <code>package://wamv_gazebo/models/gps/mesh/gps.dae</code>.  </p>\n<p>To make it work with <code>gz model</code>, I added code to the script to change all <code>package://vrx_gazebo/models/3d_lidar/mesh/3d_lidar.dae</code> =&gt;  <code>package://3d_lidar/mesh/3d_lidar.dae</code> and<code>package://wamv_gazebo/models/gps/mesh/gps.dae</code> =&gt; <code>package://gps/mesh/gps.dae</code>.  Now if we have `GAZEBO_MODEL_PATH=/home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/models:/home/tylerlum/vrx_ws/src/vrx/wamv_description/models:/home/tylerlum/vrx_ws/src/vrx/wamv_gazebo/models`, it works reliably.</p>\n<p><strong>Summary: This way works perfectly, except that it forces us to treat gps, WAM-V-Base like Gazebo models. Currently that leaves us with these Fake Models and Errors if they are pressed.</strong></p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/4233133010-image.png\" /></p>\n<div class=\"codehilite\"><pre><span></span>Error [parser.cc:334] Error finding file [/home/tylerlum/vrx_ws/src/vrx/wamv_gazebo/models/gps/model.sdf].\n</pre></div>\n\n\n<p>\u200c</p>\n<p><strong>2</strong> <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/393ccbbf7027cb72a19a4829592c3256c42ddba7?at=default\" rel=\"nofollow\"><strong>393ccbb</strong></a> <strong>Fully functional solution, with model.config errors only when non_competition_mode:=false</strong></p>\n<p>This involves leaving everything as is, making <code>robot_description</code> have meshes in the form of <code>package://vrx_gazebo/models/3d_lidar/mesh/3d_lidar.dae</code> or <code>package://wamv_gazebo/models/gps/mesh/gps.dae</code>.  Then having `GAZEBO_MODEL_PATH=/home/tylerlum/vrx_ws/src/vrx`. This is perfectly functional, except it has errors when running in <code>non_competition_mode:=false</code></p>\n<p>\u200c</p>\n<p><strong>Summary: This way works perfectly, except that it outputs the following error ONLY when verbose:=true and non_competition_mode:=false. No error if non-verbose or if non_competition_mode.</strong>  </p>\n<div class=\"codehilite\"><pre><span></span>[Err] [InsertModelWidget.cc:433] Missing model.config for model &quot;/home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/launch/../../.hg&quot;\n[Err] [InsertModelWidget.cc:433] Missing model.config for model &quot;/home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/launch/../../docker&quot;\n[Err] [InsertModelWidget.cc:433] Missing model.config for model &quot;/home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/launch/../../images&quot;\n[Err] [InsertModelWidget.cc:433] Missing model.config for model &quot;/home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/launch/../../tools&quot;\n[Err] [InsertModelWidget.cc:433] Missing model.config for model &quot;/home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/launch/../../usv_gazebo_plugins&quot;\n[Err] [InsertModelWidget.cc:433] Missing model.config for model &quot;/home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/launch/../../vrx_gazebo&quot;\n[Err] [InsertModelWidget.cc:433] Missing model.config for model &quot;/home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/launch/../../wamv_description&quot;\n[Err] [InsertModelWidget.cc:433] Missing model.config for model &quot;/home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/launch/../../wamv_gazebo&quot;\n[Err] [InsertModelWidget.cc:433] Missing model.config for model &quot;/home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/launch/../../wave_gazebo&quot;\n[Err] [InsertModelWidget.cc:433] Missing model.config for model &quot;/home/tylerlum/vrx_ws/src/vrx/vrx_gazebo/launch/../../wave_gazebo_plugins&quot;\n</pre></div>", "type": "rendered"}, "created_on": "2019-08-13T01:08:38.205957+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-13T01:08:38.217286+00:00", "type": "pullrequest_comment", "id": 112840763}