{"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/158/comments/112841223.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/158/_/diff#comment-112841223"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 158, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/158.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/158"}}, "title": "Fix RVIZ Mesh Issue"}, "content": {"raw": "**How to test 1** [**f7f7796**](#!/osrf/vrx/commits/f7f7796e8b41b23b3a7178af9ced3d12bcfaa32d?at=default) **Fully functional solution, with urdf file modified when calling spawn\\_wamv.bash and giving proper model dirs to wamv\\_gazebo and wamv\\_description**\n\n**TEST 1**\n\n_Terminal 1_\n\n`hg update f7f7796` `source ~/vrx_ws/devel/setup.bash` `roslaunch vrx_gazebo sandisland.launch verbose:=true`\n\n_Terminal 2_\n\n`rosrun robot_state_publisher robot_state_publisher`\n\n_Terminal 3_\n\n`source ~/vrx_ws/devel/setup.bash` `roslaunch wamv_gazebo rviz_vrx.launch`\n\nShould be no errors present.\n\n**TEST 2**\n\n_Terminal 1_\n\n`source ~/vrx_ws/devel/setup.bash` `roslaunch vrx_gazebo sandisland.launch verbose:=true non_competition_mode:=false`\n\n_Terminal 2_\n\n`rosrun robot_state_publisher robot_state_publisher`\n\n_Terminal 3_\n\n`source ~/vrx_ws/devel/setup.bash` `roslaunch wamv_gazebo rviz_vrx.launch`\n\nShould be no errors present.\n\n**TEST 3**\n\n_Terminal 1_\n\n`source ~/vrx_ws/devel/setup.bash` `roslaunch vrx_gazebo vrx.launch camera_enabled:=true gps_enabled:=true imu_enabled:=true verbose:=true`\n\n_Terminal 2_\n\n`rosrun robot_state_publisher robot_state_publisher`\n\n_Terminal 3_\n\n`source ~/vrx_ws/devel/setup.bash` `roslaunch wamv_gazebo rviz_vrx.launch`\n\nShould be no errors present.\n\n---\n\n**How to test 2** [**393ccbb**](#!/osrf/vrx/commits/393ccbbf7027cb72a19a4829592c3256c42ddba7?at=default) **Fully functional solution, with model.config errors only when non\\_competition\\_mode:=false**\n\n**TEST 1**\n\n_Terminal 1_\n\n`hg update 393ccbb` `source ~/vrx_ws/devel/setup.bash` `roslaunch vrx_gazebo sandisland.launch verbose:=true`\n\n_Terminal 2_\n\n`rosrun robot_state_publisher robot_state_publisher`\n\n_Terminal 3_\n\n`source ~/vrx_ws/devel/setup.bash` `roslaunch wamv_gazebo rviz_vrx.launch`\n\nShould be no errors present.\n\n**TEST 2**\n\n_Terminal 1_\n\n`source ~/vrx_ws/devel/setup.bash` `roslaunch vrx_gazebo sandisland.launch verbose:=true non_competition_mode:=false`\n\n_Terminal 2_\n\n`rosrun robot_state_publisher robot_state_publisher`\n\n_Terminal 3_\n\n`source ~/vrx_ws/devel/setup.bash` `roslaunch wamv_gazebo rviz_vrx.launch`\n\nShould be the expected model.config errors present in the sandisland launch.\n\n**TEST 3**\n\n_Terminal 1_\n\n`source ~/vrx_ws/devel/setup.bash` `roslaunch vrx_gazebo sandisland.launch non_competition_mode:=false`\n\n_Terminal 2_\n\n`rosrun robot_state_publisher robot_state_publisher`\n\n_Terminal 3_\n\n`source ~/vrx_ws/devel/setup.bash` `roslaunch wamv_gazebo rviz_vrx.launch`\n\nShould be no errors present.\n\n**TEST 4**\n\n_Terminal 1_\n\n`source ~/vrx_ws/devel/setup.bash` `roslaunch vrx_gazebo vrx.launch camera_enabled:=true gps_enabled:=true imu_enabled:=true verbose:=true`\n\n_Terminal 2_\n\n`rosrun robot_state_publisher robot_state_publisher`\n\n_Terminal 3_\n\n`source ~/vrx_ws/devel/setup.bash` `roslaunch wamv_gazebo rviz_vrx.launch`\n\nShould be no errors present.", "markup": "markdown", "html": "<p><strong>How to test 1</strong> <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/f7f7796e8b41b23b3a7178af9ced3d12bcfaa32d?at=default\" rel=\"nofollow\"><strong>f7f7796</strong></a> <strong>Fully functional solution, with urdf file modified when calling spawn_wamv.bash and giving proper model dirs to wamv_gazebo and wamv_description</strong></p>\n<p><strong>TEST 1</strong></p>\n<p><em>Terminal 1</em></p>\n<p><code>hg update f7f7796</code> <code>source ~/vrx_ws/devel/setup.bash</code> <code>roslaunch vrx_gazebo sandisland.launch verbose:=true</code></p>\n<p><em>Terminal 2</em></p>\n<p><code>rosrun robot_state_publisher robot_state_publisher</code></p>\n<p><em>Terminal 3</em></p>\n<p><code>source ~/vrx_ws/devel/setup.bash</code> <code>roslaunch wamv_gazebo rviz_vrx.launch</code></p>\n<p>Should be no errors present.</p>\n<p><strong>TEST 2</strong></p>\n<p><em>Terminal 1</em></p>\n<p><code>source ~/vrx_ws/devel/setup.bash</code> <code>roslaunch vrx_gazebo sandisland.launch verbose:=true non_competition_mode:=false</code></p>\n<p><em>Terminal 2</em></p>\n<p><code>rosrun robot_state_publisher robot_state_publisher</code></p>\n<p><em>Terminal 3</em></p>\n<p><code>source ~/vrx_ws/devel/setup.bash</code> <code>roslaunch wamv_gazebo rviz_vrx.launch</code></p>\n<p>Should be no errors present.</p>\n<p><strong>TEST 3</strong></p>\n<p><em>Terminal 1</em></p>\n<p><code>source ~/vrx_ws/devel/setup.bash</code> <code>roslaunch vrx_gazebo vrx.launch camera_enabled:=true gps_enabled:=true imu_enabled:=true verbose:=true</code></p>\n<p><em>Terminal 2</em></p>\n<p><code>rosrun robot_state_publisher robot_state_publisher</code></p>\n<p><em>Terminal 3</em></p>\n<p><code>source ~/vrx_ws/devel/setup.bash</code> <code>roslaunch wamv_gazebo rviz_vrx.launch</code></p>\n<p>Should be no errors present.</p>\n<hr />\n<p><strong>How to test 2</strong> <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/commits/393ccbbf7027cb72a19a4829592c3256c42ddba7?at=default\" rel=\"nofollow\"><strong>393ccbb</strong></a> <strong>Fully functional solution, with model.config errors only when non_competition_mode:=false</strong></p>\n<p><strong>TEST 1</strong></p>\n<p><em>Terminal 1</em></p>\n<p><code>hg update 393ccbb</code> <code>source ~/vrx_ws/devel/setup.bash</code> <code>roslaunch vrx_gazebo sandisland.launch verbose:=true</code></p>\n<p><em>Terminal 2</em></p>\n<p><code>rosrun robot_state_publisher robot_state_publisher</code></p>\n<p><em>Terminal 3</em></p>\n<p><code>source ~/vrx_ws/devel/setup.bash</code> <code>roslaunch wamv_gazebo rviz_vrx.launch</code></p>\n<p>Should be no errors present.</p>\n<p><strong>TEST 2</strong></p>\n<p><em>Terminal 1</em></p>\n<p><code>source ~/vrx_ws/devel/setup.bash</code> <code>roslaunch vrx_gazebo sandisland.launch verbose:=true non_competition_mode:=false</code></p>\n<p><em>Terminal 2</em></p>\n<p><code>rosrun robot_state_publisher robot_state_publisher</code></p>\n<p><em>Terminal 3</em></p>\n<p><code>source ~/vrx_ws/devel/setup.bash</code> <code>roslaunch wamv_gazebo rviz_vrx.launch</code></p>\n<p>Should be the expected model.config errors present in the sandisland launch.</p>\n<p><strong>TEST 3</strong></p>\n<p><em>Terminal 1</em></p>\n<p><code>source ~/vrx_ws/devel/setup.bash</code> <code>roslaunch vrx_gazebo sandisland.launch non_competition_mode:=false</code></p>\n<p><em>Terminal 2</em></p>\n<p><code>rosrun robot_state_publisher robot_state_publisher</code></p>\n<p><em>Terminal 3</em></p>\n<p><code>source ~/vrx_ws/devel/setup.bash</code> <code>roslaunch wamv_gazebo rviz_vrx.launch</code></p>\n<p>Should be no errors present.</p>\n<p><strong>TEST 4</strong></p>\n<p><em>Terminal 1</em></p>\n<p><code>source ~/vrx_ws/devel/setup.bash</code> <code>roslaunch vrx_gazebo vrx.launch camera_enabled:=true gps_enabled:=true imu_enabled:=true verbose:=true</code></p>\n<p><em>Terminal 2</em></p>\n<p><code>rosrun robot_state_publisher robot_state_publisher</code></p>\n<p><em>Terminal 3</em></p>\n<p><code>source ~/vrx_ws/devel/setup.bash</code> <code>roslaunch wamv_gazebo rviz_vrx.launch</code></p>\n<p>Should be no errors present.</p>", "type": "rendered"}, "created_on": "2019-08-13T01:18:18.937891+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-08-13T01:24:36.834271+00:00", "type": "pullrequest_comment", "id": 112841223}