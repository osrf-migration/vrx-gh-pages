{"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/216/comments/144547003.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/216/_/diff#comment-144547003"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 216, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/216.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/216"}}, "title": "Fix issue #188"}, "content": {"raw": "Hi guys, thanks for the amazing fix! I noticed similar issues while working with the IMU plugin while using fixed joints. Using revolute joints fixed the issue \\(mostly\\) or so I thought as I have discovered a bug.  Rotations in yaw for the IMU plugin work perfectly with this new fix \\(the fixed joint method reports inaccurate readings\\), however, rotations in pitch or roll result in incorrect readings from the IMU. For example,  using `<xacro:wamv_imu name=\"imu_wamv\" y=\"-0.2\" R=\"3.14159\"/>` where the roll is set to 180 degrees instead of yaw, the raw readings reported by the IMU plugin is \\(r,p,y\\) =  \\(0,0, 2.76\\) when the correct readings are supposed to be \\(r,p,y\\) = \\(0,0,-2.76\\) \\(notice the yaw has been flipped/inverted\\). This does not make sense since physical IMU has been flipped 180 degrees. Setting an arbitary value of rpy in the macro results in even more disastrous results.   \n  \nExample: `<xacro:wamv_imu name=\"imu_wamv\" y=\"-0.2\" R=\"1\" P=\"1\" Y=\"1\"/>`\n\nDo you guys know why this is happening? Although I understand this is a strange requirement for teams to mount their sensors in weird positions \\(roll, pitch\\).  Thanks.", "markup": "markdown", "html": "<p>Hi guys, thanks for the amazing fix! I noticed similar issues while working with the IMU plugin while using fixed joints. Using revolute joints fixed the issue (mostly) or so I thought as I have discovered a bug.  Rotations in yaw for the IMU plugin work perfectly with this new fix (the fixed joint method reports inaccurate readings), however, rotations in pitch or roll result in incorrect readings from the IMU. For example,  using <code>&lt;xacro:wamv_imu name=\"imu_wamv\" y=\"-0.2\" R=\"3.14159\"/&gt;</code> where the roll is set to 180 degrees instead of yaw, the raw readings reported by the IMU plugin is (r,p,y) =  (0,0, 2.76) when the correct readings are supposed to be (r,p,y) = (0,0,-2.76) (notice the yaw has been flipped/inverted). This does not make sense since physical IMU has been flipped 180 degrees. Setting an arbitary value of rpy in the macro results in even more disastrous results.   </p>\n<p>Example: <code>&lt;xacro:wamv_imu name=\"imu_wamv\" y=\"-0.2\" R=\"1\" P=\"1\" Y=\"1\"/&gt;</code></p>\n<p>Do you guys know why this is happening? Although I understand this is a strange requirement for teams to mount their sensors in weird positions (roll, pitch).  Thanks.</p>", "type": "rendered"}, "created_on": "2020-04-09T15:51:00.578090+00:00", "user": {"display_name": "Hashir Zahir", "uuid": "{0033cdb9-ea6e-4c6a-a9ad-d462a485643d}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0033cdb9-ea6e-4c6a-a9ad-d462a485643d%7D"}, "html": {"href": "https://bitbucket.org/%7B0033cdb9-ea6e-4c6a-a9ad-d462a485643d%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/3c71628af17207fad1dd0ea6280b41f1d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsHZ-5.png"}}, "nickname": "hzahir", "type": "user", "account_id": "557058:6b6463b7-2835-47c7-8c22-fdef36e9e325"}, "updated_on": "2020-04-09T15:51:00.581220+00:00", "type": "pullrequest_comment", "id": 144547003}