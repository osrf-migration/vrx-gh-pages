{"links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/216/comments/137841311.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/216/_/diff#comment-137841311"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 216, "links": {"self": {"href": "data/repositories/osrf/vrx/pullrequests/216.json"}, "html": {"href": "#!/osrf/vrx/pull-requests/216"}}, "title": "Fix issue #188"}, "content": {"raw": "Ashamed that it took so long to get to this, but feels nice to run VRX again after a break!\n\nI tested along the lines that Kevin suggested in the reporting issue \\(details below\\).  I could verify that moving the pose of the GPS and IMU had expected results with one exception - the GPS reported altitude does not agree with what I expected.  I set the origin of the revolute joint to z = 100, but the GPS fix has an altitude close to 200.  See === Verify vert. distance. section below.\n\n@{557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd} Any clue on the altitude discrepancy?\n\n\u200c\n\n---\n\n## Config A\\) Check default step\n\n* roslaunch vrx\\_gazebo vrx.launch\n* rostopic echo /wamv/sensors/gps/gps/fix yields\n\n```\nlatitude: 21.3109379275\nlongitude: -157.888570247\naltitude: 2.48590402649\n```\n\n* rostopic echo /wamv/sensors/imu/imu/data yields\n\n```\nheader: \n  seq: 1077\n  stamp: \n    secs: 71\n    nsecs: 867000000\n  frame_id: \"wamv/imu_wamv_link\"\norientation: \n  x: -0.00794067821936\n  y: -0.00241581306909\n  z: -0.981803397012\n  w: 0.189718736798\norientation_covariance: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\nangular_velocity: \n  x: -0.00101142008712\n  y: -0.00408081303609\n  z: 1.41976630001e-05\nangular_velocity_covariance: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\nlinear_acceleration: \n  x: 0.196233921458\n  y: 0.0199191218194\n  z: 9.81967269712\nlinear_acceleration_covariance: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\n```\n\n== Config B\\) Change sensor locations and retest\n\n* Edit wamv\\_gazebo/urdf/wamv\\_gazebo.urdf.xacro to translate GPS and rotate IMU\n\n```\n    \t<!-- Add simulated GPS -->\n      <xacro:wamv_gps name=\"gps_wamv\" x=\"-0.85\" y=\"100.0\" z=\"100.0\" />\n\t\t\t\n      <!-- Add Simulated IMU -->\n      <xacro:wamv_imu name=\"imu_wamv\" y=\"-0.2\" Y=\"3.14159\"/>\n```\n\n* Note - can't put GPS out at y=1000 because it has a non-zero mass which causes the vessel to be unstable!\n* Remake and relaunch\n* Echo GPS fix\n\n```\nlatitude: 21.3100789254\nlongitude: -157.888191105\naltitude: 196.85366178\nposition_covariance: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\nposition_covariance_type: 2\n```\n\n* Echo IMU data\n\n```\norientation: \n  x: -0.00162243659762\n  y: 0.0117598847966\n  z: 0.184937594048\n  w: 0.982678563477\norientation_covariance: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\nangular_velocity: \n  x: 0.00351846188189\n  y: -0.00400872612212\n  z: 0.00430841915039\nangular_velocity_covariance: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\nlinear_acceleration: \n  x: -0.269482707697\n  y: -0.0398469741012\n  z: 9.78778357931\n```\n\n== Verify\n\n=== Verify horiz. distance\n\nUse haversine \\([https://github.com/mapado/haversine\\)](https://github.com/mapado/haversine)) to check 2D distance\n\n```\nimport haversine\np1 = (21.3109379275,-157.888570247)\np2 = (21.3100789254,-157.888191105)\nprint haversine.haversine(p1,p2,unit=haversine.Unit.METERS)\n```\n\nyields\n\n```\nIn [3]: run -i ex.py\n103.276681408\n```\n\nSeems valid.\n\n=== Verify vert. distance.\n\nExpect altitude in GPS fix for  configuration B to be ~100 m.  Reported altitude is more like 200 m.  Not sure why?\n\nAlso tried with a simpler GPS joint:\n\n```\n\t<!-- Add simulated GPS -->\n      <xacro:wamv_gps name=\"gps_wamv\" x=\"-0.85\" y=\"0.0\" z=\"100.0\" />\n```\n\nSame result - expected altitude of ~100, but received altitude of ~200.\n\n== Verify orientation\n\n```\nfrom tf.transformations import euler_from_quaternion\n# Quaternion in order of x, y, z, w\nq = (-0.00794067821936,\n     -0.00241581306909,\n     -0.981803397012,\n     0.189718736798)\nprint euler_from_quaternion(q)\n\nq = (-0.00162243659762,\n     0.0117598847966,\n     0.184937594048,\n     0.982678563477)\nprint euler_from_quaternion(q)\n```\n\nyields\n\n```\nIn [1]: run -i q2e.py\n(0.0017309528373354386, -0.01650976971627963, -2.7598422849744475)\n(0.0011613490803237202, 0.02371469518148903, 0.3720570154418935)\n```\n\nSeems about right.", "markup": "markdown", "html": "<p>Ashamed that it took so long to get to this, but feels nice to run VRX again after a break!</p>\n<p>I tested along the lines that Kevin suggested in the reporting issue (details below).  I could verify that moving the pose of the GPS and IMU had expected results with one exception - the GPS reported altitude does not agree with what I expected.  I set the origin of the revolute joint to z = 100, but the GPS fix has an altitude close to 200.  See === Verify vert. distance. section below.</p>\n<p><span class=\"ap-mention\" data-atlassian-id=\"557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd\">@Carlos Ag\u00fcero</span> Any clue on the altitude discrepancy?</p>\n<p>\u200c</p>\n<hr />\n<h2 id=\"markdown-header-config-a41-check-default-step\">Config A) Check default step</h2>\n<ul>\n<li>roslaunch vrx_gazebo vrx.launch</li>\n<li>rostopic echo /wamv/sensors/gps/gps/fix yields</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">latitude</span><span class=\"o\">:</span> <span class=\"mf\">21.3109379275</span>\n<span class=\"n\">longitude</span><span class=\"o\">:</span> <span class=\"o\">-</span><span class=\"mf\">157.888570247</span>\n<span class=\"n\">altitude</span><span class=\"o\">:</span> <span class=\"mf\">2.48590402649</span>\n</pre></div>\n\n\n<ul>\n<li>rostopic echo /wamv/sensors/imu/imu/data yields</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">header</span><span class=\"o\">:</span> \n  <span class=\"n\">seq</span><span class=\"o\">:</span> <span class=\"mi\">1077</span>\n  <span class=\"n\">stamp</span><span class=\"o\">:</span> \n    <span class=\"n\">secs</span><span class=\"o\">:</span> <span class=\"mi\">71</span>\n    <span class=\"n\">nsecs</span><span class=\"o\">:</span> <span class=\"mi\">867000000</span>\n  <span class=\"n\">frame_id</span><span class=\"o\">:</span> <span class=\"s2\">&quot;wamv/imu_wamv_link&quot;</span>\n<span class=\"n\">orientation</span><span class=\"o\">:</span> \n  <span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"o\">-</span><span class=\"mf\">0.00794067821936</span>\n  <span class=\"n\">y</span><span class=\"o\">:</span> <span class=\"o\">-</span><span class=\"mf\">0.00241581306909</span>\n  <span class=\"n\">z</span><span class=\"o\">:</span> <span class=\"o\">-</span><span class=\"mf\">0.981803397012</span>\n  <span class=\"n\">w</span><span class=\"o\">:</span> <span class=\"mf\">0.189718736798</span>\n<span class=\"n\">orientation_covariance</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">]</span>\n<span class=\"n\">angular_velocity</span><span class=\"o\">:</span> \n  <span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"o\">-</span><span class=\"mf\">0.00101142008712</span>\n  <span class=\"n\">y</span><span class=\"o\">:</span> <span class=\"o\">-</span><span class=\"mf\">0.00408081303609</span>\n  <span class=\"n\">z</span><span class=\"o\">:</span> <span class=\"mf\">1.41976630001</span><span class=\"n\">e</span><span class=\"o\">-</span><span class=\"mi\">05</span>\n<span class=\"n\">angular_velocity_covariance</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">]</span>\n<span class=\"n\">linear_acceleration</span><span class=\"o\">:</span> \n  <span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"mf\">0.196233921458</span>\n  <span class=\"n\">y</span><span class=\"o\">:</span> <span class=\"mf\">0.0199191218194</span>\n  <span class=\"n\">z</span><span class=\"o\">:</span> <span class=\"mf\">9.81967269712</span>\n<span class=\"n\">linear_acceleration_covariance</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">]</span>\n</pre></div>\n\n\n<p>== Config B) Change sensor locations and retest</p>\n<ul>\n<li>Edit wamv_gazebo/urdf/wamv_gazebo.urdf.xacro to translate GPS and rotate IMU</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span>        &lt;!-- Add simulated GPS --&gt;\n      &lt;xacro:wamv_gps name=&quot;gps_wamv&quot; x=&quot;-0.85&quot; y=&quot;100.0&quot; z=&quot;100.0&quot; /&gt;\n\n      &lt;!-- Add Simulated IMU --&gt;\n      &lt;xacro:wamv_imu name=&quot;imu_wamv&quot; y=&quot;-0.2&quot; Y=&quot;3.14159&quot;/&gt;\n</pre></div>\n\n\n<ul>\n<li>Note - can't put GPS out at y=1000 because it has a non-zero mass which causes the vessel to be unstable!</li>\n<li>Remake and relaunch</li>\n<li>Echo GPS fix</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">latitude</span><span class=\"o\">:</span> <span class=\"mf\">21.3100789254</span>\n<span class=\"n\">longitude</span><span class=\"o\">:</span> <span class=\"o\">-</span><span class=\"mf\">157.888191105</span>\n<span class=\"n\">altitude</span><span class=\"o\">:</span> <span class=\"mf\">196.85366178</span>\n<span class=\"n\">position_covariance</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">]</span>\n<span class=\"n\">position_covariance_type</span><span class=\"o\">:</span> <span class=\"mi\">2</span>\n</pre></div>\n\n\n<ul>\n<li>Echo IMU data</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">orientation</span><span class=\"o\">:</span> \n  <span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"o\">-</span><span class=\"mf\">0.00162243659762</span>\n  <span class=\"n\">y</span><span class=\"o\">:</span> <span class=\"mf\">0.0117598847966</span>\n  <span class=\"n\">z</span><span class=\"o\">:</span> <span class=\"mf\">0.184937594048</span>\n  <span class=\"n\">w</span><span class=\"o\">:</span> <span class=\"mf\">0.982678563477</span>\n<span class=\"n\">orientation_covariance</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">]</span>\n<span class=\"n\">angular_velocity</span><span class=\"o\">:</span> \n  <span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"mf\">0.00351846188189</span>\n  <span class=\"n\">y</span><span class=\"o\">:</span> <span class=\"o\">-</span><span class=\"mf\">0.00400872612212</span>\n  <span class=\"n\">z</span><span class=\"o\">:</span> <span class=\"mf\">0.00430841915039</span>\n<span class=\"n\">angular_velocity_covariance</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">,</span> <span class=\"mf\">0.0</span><span class=\"o\">]</span>\n<span class=\"n\">linear_acceleration</span><span class=\"o\">:</span> \n  <span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"o\">-</span><span class=\"mf\">0.269482707697</span>\n  <span class=\"n\">y</span><span class=\"o\">:</span> <span class=\"o\">-</span><span class=\"mf\">0.0398469741012</span>\n  <span class=\"n\">z</span><span class=\"o\">:</span> <span class=\"mf\">9.78778357931</span>\n</pre></div>\n\n\n<p>== Verify</p>\n<p>=== Verify horiz. distance</p>\n<p>Use haversine (<a data-is-external-link=\"true\" href=\"https://github.com/mapado/haversine\" rel=\"nofollow\">https://github.com/mapado/haversine)</a>) to check 2D distance</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">haversine</span>\n<span class=\"n\">p1</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mf\">21.3109379275</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mf\">157.888570247</span><span class=\"p\">)</span>\n<span class=\"n\">p2</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mf\">21.3100789254</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mf\">157.888191105</span><span class=\"p\">)</span>\n<span class=\"k\">print</span> <span class=\"n\">haversine</span><span class=\"o\">.</span><span class=\"n\">haversine</span><span class=\"p\">(</span><span class=\"n\">p1</span><span class=\"p\">,</span><span class=\"n\">p2</span><span class=\"p\">,</span><span class=\"n\">unit</span><span class=\"o\">=</span><span class=\"n\">haversine</span><span class=\"o\">.</span><span class=\"n\">Unit</span><span class=\"o\">.</span><span class=\"n\">METERS</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>yields</p>\n<div class=\"codehilite\"><pre><span></span>In [3]: run -i ex.py\n103.276681408\n</pre></div>\n\n\n<p>Seems valid.</p>\n<p>=== Verify vert. distance.</p>\n<p>Expect altitude in GPS fix for  configuration B to be ~100 m.  Reported altitude is more like 200 m.  Not sure why?</p>\n<p>Also tried with a simpler GPS joint:</p>\n<div class=\"codehilite\"><pre><span></span>    &lt;!-- Add simulated GPS --&gt;\n      &lt;xacro:wamv_gps name=&quot;gps_wamv&quot; x=&quot;-0.85&quot; y=&quot;0.0&quot; z=&quot;100.0&quot; /&gt;\n</pre></div>\n\n\n<p>Same result - expected altitude of ~100, but received altitude of ~200.</p>\n<p>== Verify orientation</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">tf.transformations</span> <span class=\"kn\">import</span> <span class=\"n\">euler_from_quaternion</span>\n<span class=\"c1\"># Quaternion in order of x, y, z, w</span>\n<span class=\"n\">q</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">0.00794067821936</span><span class=\"p\">,</span>\n     <span class=\"o\">-</span><span class=\"mf\">0.00241581306909</span><span class=\"p\">,</span>\n     <span class=\"o\">-</span><span class=\"mf\">0.981803397012</span><span class=\"p\">,</span>\n     <span class=\"mf\">0.189718736798</span><span class=\"p\">)</span>\n<span class=\"k\">print</span> <span class=\"n\">euler_from_quaternion</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"p\">)</span>\n\n<span class=\"n\">q</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">0.00162243659762</span><span class=\"p\">,</span>\n     <span class=\"mf\">0.0117598847966</span><span class=\"p\">,</span>\n     <span class=\"mf\">0.184937594048</span><span class=\"p\">,</span>\n     <span class=\"mf\">0.982678563477</span><span class=\"p\">)</span>\n<span class=\"k\">print</span> <span class=\"n\">euler_from_quaternion</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>yields</p>\n<div class=\"codehilite\"><pre><span></span>In [1]: run -i q2e.py\n(0.0017309528373354386, -0.01650976971627963, -2.7598422849744475)\n(0.0011613490803237202, 0.02371469518148903, 0.3720570154418935)\n</pre></div>\n\n\n<p>Seems about right.</p>", "type": "rendered"}, "created_on": "2020-02-27T16:41:21.588349+00:00", "user": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "updated_on": "2020-02-27T16:41:21.602365+00:00", "type": "pullrequest_comment", "id": 137841311}