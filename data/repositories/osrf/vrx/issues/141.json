{"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/141/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/141.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/141/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/141/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/141/event-driven-final-score-keeping-and"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/141/vote"}}, "reporter": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "title": "Event-Driven Final Score Keeping and Logging", "component": null, "votes": 0, "watches": 1, "content": {"raw": "**Overview**\r\n\r\nWe need a way to record the final score accurately and log the results. \r\n\r\n**Currently being done**\r\n\r\nCurrently, we simply publish to `/vrx/task/info` a message that includes the score at 1Hz.\r\n\r\n```\r\nname: &amp;#34;scan_dock&amp;#34;\r\nstate: &amp;#34;finished&amp;#34;\r\nready_time: \r\n  secs: 3\r\n  nsecs:         0\r\nrunning_time: \r\n  secs: 6\r\n  nsecs:         0\r\nelapsed_time: \r\n  secs: 10\r\n  nsecs:         0\r\nremaining_time: \r\n  secs: 0\r\n  nsecs:         0\r\ntimed_out: True\r\nscore: 0.0\r\n```\r\n\r\nHowever, we want to record some key times \\(eg. how long it took the WAM-V to perform a certain task\\) and use that time for more accurate scoring. 1Hz is not enough resolution. We likely need an event-driven check for end conditions \\(both success, failure and time-out\\)\r\n\r\n```\r\nrostopic hz  /vrx/task/info \r\nsubscribed to [/vrx/task/info]\r\nWARNING: may be using simulated time\r\naverage rate: 0.999\r\n    min: 1.001s max: 1.001s std dev: 0.00000s window: 2\r\naverage rate: 1.000\r\n    min: 0.999s max: 1.001s std dev: 0.00100s window: 3\r\n```\r\n\r\n* Should we output final score to the screen? Put it in the Gazebo or ROS log file \\(probably ROS\\)?\r\n\r\n    * Probably ROS log file\r\n    \r\n\r\n**How it was done in ARIAC:**\r\n\r\n```\r\n$ tail logs/example_team/sample/performance.log -n 25\r\n(1518553810 6169392) [Dbg] [ROSAriacTaskManagerPlugin.cc:492] Sim time: 22\r\n(1518553810 675725351) [Dbg] [ROSAriacTaskManagerPlugin.cc:717] Handle end service called\r\n(1518553810 676916277) [Dbg] [ROSAriacTaskManagerPlugin.cc:579] End of trial. Final score: 0\r\nScore breakdown:\r\n<game_score>\r\nTotal game score: [0]\r\nTotal process time: [10.433]\r\nProduct travel time: [0]\r\n<order_score order_0>\r\nTotal order score: [0]\r\nTime taken: [10.432]\r\nComplete: [false]\r\n<shipment_score order_0_shipment_0>\r\nCompletion score: [0]\r\nComplete: [false]\r\nSubmitted: [false]\r\nProduct presence score: [0]\r\nAll products bonus: [0]\r\nProduct pose score: [0]\r\n</shipment_score>\r\n\r\n</order_score>\r\n\r\n</game_score>\r\n```\r\n\r\nSource code: [https://bitbucket.org/osrf/ariac/src/master/osrf\\_gear/include/osrf\\_gear/ARIAC.hh](https://bitbucket.org/osrf/ariac/src/master/osrf_gear/include/osrf_gear/ARIAC.hh)", "markup": "markdown", "html": "<p><strong>Overview</strong></p>\n<p>We need a way to record the final score accurately and log the results. </p>\n<p><strong>Currently being done</strong></p>\n<p>Currently, we simply publish to <code>/vrx/task/info</code> a message that includes the score at 1Hz.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">name</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"nt\">amp</span><span class=\"o\">;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span><span class=\"nt\">scan_dock</span><span class=\"o\">&amp;</span><span class=\"nt\">amp</span><span class=\"o\">;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span>\n<span class=\"nt\">state</span><span class=\"o\">:</span> <span class=\"o\">&amp;</span><span class=\"nt\">amp</span><span class=\"o\">;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span><span class=\"nt\">finished</span><span class=\"o\">&amp;</span><span class=\"nt\">amp</span><span class=\"o\">;</span><span class=\"p\">#</span><span class=\"nn\">34</span><span class=\"o\">;</span>\n<span class=\"nt\">ready_time</span><span class=\"o\">:</span> \n  <span class=\"nt\">secs</span><span class=\"o\">:</span> <span class=\"nt\">3</span>\n  <span class=\"nt\">nsecs</span><span class=\"o\">:</span>         <span class=\"nt\">0</span>\n<span class=\"nt\">running_time</span><span class=\"o\">:</span> \n  <span class=\"nt\">secs</span><span class=\"o\">:</span> <span class=\"nt\">6</span>\n  <span class=\"nt\">nsecs</span><span class=\"o\">:</span>         <span class=\"nt\">0</span>\n<span class=\"nt\">elapsed_time</span><span class=\"o\">:</span> \n  <span class=\"nt\">secs</span><span class=\"o\">:</span> <span class=\"nt\">10</span>\n  <span class=\"nt\">nsecs</span><span class=\"o\">:</span>         <span class=\"nt\">0</span>\n<span class=\"nt\">remaining_time</span><span class=\"o\">:</span> \n  <span class=\"nt\">secs</span><span class=\"o\">:</span> <span class=\"nt\">0</span>\n  <span class=\"nt\">nsecs</span><span class=\"o\">:</span>         <span class=\"nt\">0</span>\n<span class=\"nt\">timed_out</span><span class=\"o\">:</span> <span class=\"nt\">True</span>\n<span class=\"nt\">score</span><span class=\"o\">:</span> <span class=\"nt\">0</span><span class=\"p\">.</span><span class=\"nc\">0</span>\n</pre></div>\n\n\n<p>However, we want to record some key times (eg. how long it took the WAM-V to perform a certain task) and use that time for more accurate scoring. 1Hz is not enough resolution. We likely need an event-driven check for end conditions (both success, failure and time-out)</p>\n<div class=\"codehilite\"><pre><span></span>rostopic hz  /vrx/task/info \nsubscribed to [/vrx/task/info]\nWARNING: may be using simulated time\naverage rate: 0.999\n    min: 1.001s max: 1.001s std dev: 0.00000s window: 2\naverage rate: 1.000\n    min: 0.999s max: 1.001s std dev: 0.00100s window: 3\n</pre></div>\n\n\n<ul>\n<li>\n<p>Should we output final score to the screen? Put it in the Gazebo or ROS log file (probably ROS)?</p>\n<ul>\n<li>Probably ROS log file</li>\n</ul>\n</li>\n</ul>\n<p><strong>How it was done in ARIAC:</strong></p>\n<div class=\"codehilite\"><pre><span></span>$ tail logs/example_team/sample/performance.log -n 25\n(1518553810 6169392) [Dbg] [ROSAriacTaskManagerPlugin.cc:492] Sim time: 22\n(1518553810 675725351) [Dbg] [ROSAriacTaskManagerPlugin.cc:717] Handle end service called\n(1518553810 676916277) [Dbg] [ROSAriacTaskManagerPlugin.cc:579] End of trial. Final score: 0\nScore breakdown:\n<span class=\"nt\">&lt;game_score&gt;</span>\nTotal game score: [0]\nTotal process time: [10.433]\nProduct travel time: [0]\n<span class=\"nt\">&lt;order_score</span> <span class=\"err\">order_0</span><span class=\"nt\">&gt;</span>\nTotal order score: [0]\nTime taken: [10.432]\nComplete: [false]\n<span class=\"nt\">&lt;shipment_score</span> <span class=\"err\">order_0_shipment_0</span><span class=\"nt\">&gt;</span>\nCompletion score: [0]\nComplete: [false]\nSubmitted: [false]\nProduct presence score: [0]\nAll products bonus: [0]\nProduct pose score: [0]\n<span class=\"nt\">&lt;/shipment_score&gt;</span>\n\n<span class=\"nt\">&lt;/order_score&gt;</span>\n\n<span class=\"nt\">&lt;/game_score&gt;</span>\n</pre></div>\n\n\n<p>Source code: <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/ariac/src/master/osrf_gear/include/osrf_gear/ARIAC.hh\" rel=\"nofollow\">https://bitbucket.org/osrf/ariac/src/master/osrf_gear/include/osrf_gear/ARIAC.hh</a></p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-07-17T22:53:53.131655+00:00", "milestone": null, "updated_on": "2019-07-31T21:13:44.684282+00:00", "type": "issue", "id": 141}