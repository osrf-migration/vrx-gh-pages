{"pagelen": 100, "values": [{"changes": {"assignee_account_id": {"new": "5a8b94bb21870439aa9167ef", "old": ""}, "assignee": {"new": "rumman05", "old": ""}}, "links": {"self": {"href": "data/repositories/osrf/vrx/issues/94/changes/52281295.json"}, "html": {"href": "#!/osrf/vrx/issues/94#comment-52281295"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/94.json"}}, "type": "issue", "id": 94, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Buoyancy plugin improvement for flat ocean and standard shapes"}, "created_on": "2019-05-25T04:37:05.312099+00:00", "user": {"display_name": "Rumman Waqar", "uuid": "{375366ee-150c-4843-9449-cbec61c538ca}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B375366ee-150c-4843-9449-cbec61c538ca%7D"}, "html": {"href": "https://bitbucket.org/%7B375366ee-150c-4843-9449-cbec61c538ca%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5a8b94bb21870439aa9167ef/026c5cb4-b99d-4aad-90d7-62d45fe41395/128"}}, "nickname": "rumman05", "type": "user", "account_id": "5a8b94bb21870439aa9167ef"}, "message": {"raw": "Currently the [buoyancy\\_gazebo\\_plugin.cc](#!/osrf/vrx/src/default/usv_gazebo_plugins/src/buoyancy_gazebo_plugin.cc) is used to provide a vertical buoyancy force to objects at or near the surface of the water such as course elements like buoys, markers, obstacles, etc.  As an example see the surmark950400 [model.sdf.](#!/osrf/vrx/src/default/vrx_gazebo/models/surmark950400/model.sdf)  In the current implementation each model plugin is independently configured with\r\n\r\n* water level in z direction, gazebo coordinates\r\n* drag\r\n* water density\r\n* cross-sectional-area\r\n* height\r\n* center of volume \r\n\r\nThe effective buoyancy force is calculated as simply the product of the cross-sectional-area and the relative z displacement of the object and the water level. This method models any link as a shape of constant cross-sectional area  for a finite height object.  Also, the buoyancy object is always considered to be oriented perpendicular to the water surface.\r\n\r\nConsider revising the plugin to enable specifying simple geometry\\(ies\\).  For example, the model.sdf for the surmark950400 marker might look something like\u2026\r\n\r\n```\r\n<plugin name=\"BuoyancyPlugin\" filename=\"libbuoyancy_gazebo_plugin.so\">\r\n      <fluid_density>1000</fluid_density>\r\n      <fluid_level>0.0</fluid_level>\r\n      <fluid_drag>5.0</fluid_drag>\r\n      <element name=\"buoyancy_inner\">\r\n        <link_name>link</link_name>\r\n        <pose>0 0 0.5 0 0 0</pose>\r\n        <geometry>\r\n          <cylinder>\r\n            <radius>0.15</radius>\r\n            <length>1.18</length>\r\n          </cylinder>\r\n        </geometry>\r\n      </element>\r\n      <element name=\"buoyancy_outer\">\r\n        <link_name>link</link_name>\r\n        <pose>0 0 -0.31 0 0 0</pose>\r\n        <geometry>\r\n          <cylinder>\r\n            <radius>0.24</radius>\r\n            <length>0.2</length>\r\n          </cylinder>\r\n        </geometry>\r\n      </element>\r\n \r\n    </plugin>\r\n```\r\n\r\n\u200c\r\n\r\n* Should be able to support box, cylinder and sphere geometries.\r\n* Should be able to support multiple \u201celements\u201d for each model\r\n* Should take into account the orientation of each geometry element when calculating the center of buoyancy - where the force is applied.\r\n\r\nWill need to put together some simple tests to verify the implementation.\r\n\r\nFollow-on work will be to have the ability to get the instantaneous water height at the object location to include the wave field, but that will need to wait until after we address [issue #23](#!/osrf/vrx/issues/23/coordinate-the-physics-and-visualization).", "markup": "markdown", "html": "<p>Currently the <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/src/default/usv_gazebo_plugins/src/buoyancy_gazebo_plugin.cc\" rel=\"nofollow\">buoyancy_gazebo_plugin.cc</a> is used to provide a vertical buoyancy force to objects at or near the surface of the water such as course elements like buoys, markers, obstacles, etc.  As an example see the surmark950400 <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/src/default/vrx_gazebo/models/surmark950400/model.sdf\" rel=\"nofollow\">model.sdf.</a>  In the current implementation each model plugin is independently configured with</p>\n<ul>\n<li>water level in z direction, gazebo coordinates</li>\n<li>drag</li>\n<li>water density</li>\n<li>cross-sectional-area</li>\n<li>height</li>\n<li>center of volume </li>\n</ul>\n<p>The effective buoyancy force is calculated as simply the product of the cross-sectional-area and the relative z displacement of the object and the water level. This method models any link as a shape of constant cross-sectional area  for a finite height object.  Also, the buoyancy object is always considered to be oriented perpendicular to the water surface.</p>\n<p>Consider revising the plugin to enable specifying simple geometry(ies).  For example, the model.sdf for the surmark950400 marker might look something like\u2026</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;plugin</span> <span class=\"na\">name=</span><span class=\"s\">&quot;BuoyancyPlugin&quot;</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;libbuoyancy_gazebo_plugin.so&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;fluid_density&gt;</span>1000<span class=\"nt\">&lt;/fluid_density&gt;</span>\n      <span class=\"nt\">&lt;fluid_level&gt;</span>0.0<span class=\"nt\">&lt;/fluid_level&gt;</span>\n      <span class=\"nt\">&lt;fluid_drag&gt;</span>5.0<span class=\"nt\">&lt;/fluid_drag&gt;</span>\n      <span class=\"nt\">&lt;element</span> <span class=\"na\">name=</span><span class=\"s\">&quot;buoyancy_inner&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;link_name&gt;</span>link<span class=\"nt\">&lt;/link_name&gt;</span>\n        <span class=\"nt\">&lt;pose&gt;</span>0 0 0.5 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n        <span class=\"nt\">&lt;geometry&gt;</span>\n          <span class=\"nt\">&lt;cylinder&gt;</span>\n            <span class=\"nt\">&lt;radius&gt;</span>0.15<span class=\"nt\">&lt;/radius&gt;</span>\n            <span class=\"nt\">&lt;length&gt;</span>1.18<span class=\"nt\">&lt;/length&gt;</span>\n          <span class=\"nt\">&lt;/cylinder&gt;</span>\n        <span class=\"nt\">&lt;/geometry&gt;</span>\n      <span class=\"nt\">&lt;/element&gt;</span>\n      <span class=\"nt\">&lt;element</span> <span class=\"na\">name=</span><span class=\"s\">&quot;buoyancy_outer&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;link_name&gt;</span>link<span class=\"nt\">&lt;/link_name&gt;</span>\n        <span class=\"nt\">&lt;pose&gt;</span>0 0 -0.31 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n        <span class=\"nt\">&lt;geometry&gt;</span>\n          <span class=\"nt\">&lt;cylinder&gt;</span>\n            <span class=\"nt\">&lt;radius&gt;</span>0.24<span class=\"nt\">&lt;/radius&gt;</span>\n            <span class=\"nt\">&lt;length&gt;</span>0.2<span class=\"nt\">&lt;/length&gt;</span>\n          <span class=\"nt\">&lt;/cylinder&gt;</span>\n        <span class=\"nt\">&lt;/geometry&gt;</span>\n      <span class=\"nt\">&lt;/element&gt;</span>\n\n    <span class=\"nt\">&lt;/plugin&gt;</span>\n</pre></div>\n\n\n<p>\u200c</p>\n<ul>\n<li>Should be able to support box, cylinder and sphere geometries.</li>\n<li>Should be able to support multiple \u201celements\u201d for each model</li>\n<li>Should take into account the orientation of each geometry element when calculating the center of buoyancy - where the force is applied.</li>\n</ul>\n<p>Will need to put together some simple tests to verify the implementation.</p>\n<p>Follow-on work will be to have the ability to get the instantaneous water height at the object location to include the wave field, but that will need to wait until after we address <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/issues/23/coordinate-the-physics-and-visualization\" rel=\"nofollow\">issue #23</a>.</p>", "type": "rendered"}, "type": "issue_change", "id": 52281295}, {"changes": {"state": {"new": "resolved", "old": "new"}}, "links": {"self": {"href": "data/repositories/osrf/vrx/issues/94/changes/52809796.json"}, "html": {"href": "#!/osrf/vrx/issues/94#comment-52809796"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/94.json"}}, "type": "issue", "id": 94, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Buoyancy plugin improvement for flat ocean and standard shapes"}, "created_on": "2019-07-01T22:35:56.632807+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "message": {"raw": "See pull request #122.", "markup": "markdown", "html": "<p>See <a href=\"#!/osrf/vrx/pull-requests/122/issue-94-buoyancy\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #122</a>.</p>", "type": "rendered"}, "type": "issue_change", "id": 52809796}], "page": 1, "size": 2}