{"links": {"self": {"href": "data/repositories/osrf/vrx/issues/29/comments/49403339.json"}, "html": {"href": "#!/osrf/vrx/issues/29#comment-49403339"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/29.json"}}, "type": "issue", "id": 29, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "The ocean reflects the laser beams"}, "content": {"raw": "Hi Carlos,\n\nI have been looking at this and the linked issue.  If you want an example of the behavior of a velodyne on the water, the lidar data in the following image was accumulated from several scans of an artificial lake.  The sensor was an HDL-32 mounted on a WAM-V. The top of the image includes trees and a beach, the bottom is the water surface.  Note that in this image,  the velodyne produces only a very few returns from the water surface.\n\nhttps://csem.flinders.edu.au/competitions/maritime_robotx/images/gallery/LiDAR%20west%20lakes%20data..jpg\n\nA connected issue may be that the GPU velodyne implementation does not currently support variable reflectivity.  A bug has been filed about this on the dataspeed bitbucket.\n\nhttps://bitbucket.org/DataspeedInc/velodyne_simulator/issues/13/same-intensity-values-populated-if-gpu_ray\n\nIf the bug is resolved, it may be possible to create the expected behaviour by setting the oceans laser_retro value to zero.\n\nRegards,\nJonathan.", "markup": "markdown", "html": "<p>Hi Carlos,</p>\n<p>I have been looking at this and the linked issue.  If you want an example of the behavior of a velodyne on the water, the lidar data in the following image was accumulated from several scans of an artificial lake.  The sensor was an HDL-32 mounted on a WAM-V. The top of the image includes trees and a beach, the bottom is the water surface.  Note that in this image,  the velodyne produces only a very few returns from the water surface.</p>\n<p><a href=\"https://csem.flinders.edu.au/competitions/maritime_robotx/images/gallery/LiDAR%20west%20lakes%20data..jpg\" rel=\"nofollow\" class=\"ap-connect-link\">https://csem.flinders.edu.au/competitions/maritime_robotx/images/gallery/LiDAR%20west%20lakes%20data..jpg</a></p>\n<p>A connected issue may be that the GPU velodyne implementation does not currently support variable reflectivity.  A bug has been filed about this on the dataspeed bitbucket.</p>\n<p><a href=\"https://bitbucket.org/DataspeedInc/velodyne_simulator/issues/13/same-intensity-values-populated-if-gpu_ray\" rel=\"nofollow\" class=\"ap-connect-link\">https://bitbucket.org/DataspeedInc/velodyne_simulator/issues/13/same-intensity-values-populated-if-gpu_ray</a></p>\n<p>If the bug is resolved, it may be possible to create the expected behaviour by setting the oceans laser_retro value to zero.</p>\n<p>Regards,\nJonathan.</p>", "type": "rendered"}, "created_on": "2018-12-11T12:08:13.131957+00:00", "user": {"display_name": "Jonathan Wheare", "uuid": "{65043b9b-c505-4efe-852a-3d2393a0ee80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B65043b9b-c505-4efe-852a-3d2393a0ee80%7D"}, "html": {"href": "https://bitbucket.org/%7B65043b9b-c505-4efe-852a-3d2393a0ee80%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/JW-2.png"}}, "nickname": "Jonathan Wheare", "type": "user", "account_id": "5b9791e8a9fd6d2c834b5864"}, "updated_on": null, "type": "issue_comment", "id": 49403339}