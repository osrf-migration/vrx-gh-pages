{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/vrx/issues/92/comments/52308365.json"}, "html": {"href": "#!/osrf/vrx/issues/92#comment-52308365"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/92.json"}}, "type": "issue", "id": 92, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Wind plugin random seed specification"}, "content": {"raw": "To be able to run the competition it is important that the random parts of the environment, for example the stochastic aspects of the wind speed/direction, be repeatable.  This will allow the evaluation of each team\u2019s solution to be done with the same environmental conditions.\r\n\r\nCurrently the wind plugin exposes \u201crandom\\_seed\u201d integer to the user which can be used to set the random number generator seed value.\r\n\r\n* We should run some tests to verify that this method generates repeatable wind conditions.\r\n\r\nAlternatively, Gazebo has[ two methods for setting the seed value.](http://gazebosim.org/tutorials?tut=random_numbers&cat=math)  \r\n\r\n* Is this feature of gazebo equivalent to setting the seed integer within the plugin?  If so, could/should we simplify the plugin and use the native gazebo feature?", "markup": "markdown", "html": "<p>To be able to run the competition it is important that the random parts of the environment, for example the stochastic aspects of the wind speed/direction, be repeatable.  This will allow the evaluation of each team\u2019s solution to be done with the same environmental conditions.</p>\n<p>Currently the wind plugin exposes \u201crandom_seed\u201d integer to the user which can be used to set the random number generator seed value.</p>\n<ul>\n<li>We should run some tests to verify that this method generates repeatable wind conditions.</li>\n</ul>\n<p>Alternatively, Gazebo has<a data-is-external-link=\"true\" href=\"http://gazebosim.org/tutorials?tut=random_numbers&amp;cat=math\" rel=\"nofollow\"> two methods for setting the seed value.</a>  </p>\n<ul>\n<li>Is this feature of gazebo equivalent to setting the seed integer within the plugin?  If so, could/should we simplify the plugin and use the native gazebo feature?</li>\n</ul>", "type": "rendered"}, "created_on": "2019-05-27T23:00:31.286329+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": null, "type": "issue_comment", "id": 52308365}, {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/92/comments/52397344.json"}, "html": {"href": "#!/osrf/vrx/issues/92#comment-52397344"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/92.json"}}, "type": "issue", "id": 92, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Wind plugin random seed specification"}, "content": {"raw": "**Gazebo Random Setting is the Same**\n\nI believe it is worthwhile to simplify the plugin and use the native Gazebo feature. Do you agree?\n\n![](data/bitbucket.org/repo/BgXLzgM/images/3584702803-Gazebo_Set_Seed.png)\n  \n_Figure 1: Gazebo Random Seed Setting using ignition::math::Rand::Seed\\(\\)_\n\n---\n\n\u200c\n\n![](data/bitbucket.org/repo/BgXLzgM/images/3827338082-Wind_Plugin_Seed_Setting.png)\n  \n_Figure 2: Wind Plugin Random Seed Setting using ignition::math::Rand::Seed\\(\\)_", "markup": "markdown", "html": "<p><strong>Gazebo Random Setting is the Same</strong></p>\n<p>I believe it is worthwhile to simplify the plugin and use the native Gazebo feature. Do you agree?</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3584702803-Gazebo_Set_Seed.png\" /></p>\n<p><em>Figure 1: Gazebo Random Seed Setting using ignition::math::Rand::Seed()</em></p>\n<hr />\n<p>\u200c</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3827338082-Wind_Plugin_Seed_Setting.png\" /></p>\n<p><em>Figure 2: Wind Plugin Random Seed Setting using ignition::math::Rand::Seed()</em></p>", "type": "rendered"}, "created_on": "2019-06-01T22:51:45.666345+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-01T22:53:00.648218+00:00", "type": "issue_comment", "id": 52397344}, {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/92/comments/52397637.json"}, "html": {"href": "#!/osrf/vrx/issues/92#comment-52397637"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/92.json"}}, "type": "issue", "id": 92, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Wind plugin random seed specification"}, "content": {"raw": "Preliminary, crude tests show that the random seed is resulting in repeatable wind conditions. \n\n![](data/bitbucket.org/repo/BgXLzgM/images/3204627664-random_seed_1.jpg)\n![](data/bitbucket.org/repo/BgXLzgM/images/4171849667-random_seed_2.jpg)\n![](data/bitbucket.org/repo/BgXLzgM/images/914064359-random_seed_3.jpg)\n", "markup": "markdown", "html": "<p>Preliminary, crude tests show that the random seed is resulting in repeatable wind conditions. </p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3204627664-random_seed_1.jpg\" />\n<img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/4171849667-random_seed_2.jpg\" />\n<img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/914064359-random_seed_3.jpg\" /></p>", "type": "rendered"}, "created_on": "2019-06-02T00:08:58.853533+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": null, "type": "issue_comment", "id": 52397637}, {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/92/comments/52397672.json"}, "html": {"href": "#!/osrf/vrx/issues/92#comment-52397672"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/92.json"}}, "type": "issue", "id": 92, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Wind plugin random seed specification"}, "content": {"raw": "The `UsvWindPlugin::update()`\n\n* Gets a random number\n* Uses that random number to create a wind speed\n* Calculates relative wind speed that the WAM-V \u2018feels\u2019\n* Puts a force on the COM of the WAM-V\n\n**How would you recommend I test the repeatability of the wind?** \n\nThis function does not \u2018expose\u2019 any of these numbers, and so far I have only added a gzmsg line for preliminary testing. Should I:\n\n* add a ros\\_publisher or something to expose the wind and then write a Google test to check that it matches what it should be with a given seed value\n* run a Google test that simply sets the seed value, doesn\u2019t send commands to the boat, and then checks its position after a few seconds \\(assuming the same wind would hopefully mean that it ends in the same spot\\)\n* something else\n\n", "markup": "markdown", "html": "<p>The <code>UsvWindPlugin::update()</code></p>\n<ul>\n<li>Gets a random number</li>\n<li>Uses that random number to create a wind speed</li>\n<li>Calculates relative wind speed that the WAM-V \u2018feels\u2019</li>\n<li>Puts a force on the COM of the WAM-V</li>\n</ul>\n<p><strong>How would you recommend I test the repeatability of the wind?</strong> </p>\n<p>This function does not \u2018expose\u2019 any of these numbers, and so far I have only added a gzmsg line for preliminary testing. Should I:</p>\n<ul>\n<li>add a ros_publisher or something to expose the wind and then write a Google test to check that it matches what it should be with a given seed value</li>\n<li>run a Google test that simply sets the seed value, doesn\u2019t send commands to the boat, and then checks its position after a few seconds (assuming the same wind would hopefully mean that it ends in the same spot)</li>\n<li>something else</li>\n</ul>", "type": "rendered"}, "created_on": "2019-06-02T00:19:29.017933+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": null, "type": "issue_comment", "id": 52397672}, {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/92/comments/52397707.json"}, "html": {"href": "#!/osrf/vrx/issues/92#comment-52397707"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/92.json"}}, "type": "issue", "id": 92, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Wind plugin random seed specification"}, "content": {"raw": "I have a question about how random generators work. When the seed is set, we expect the random numbers returned to be the same every time. However, if different modules call random functions from `ignition::math::Rand`, then will it change the random numbers from what we desired? Will the behavior we get from the simulation depend on the order and timing of random calls from across different functions?\n\nFor example, if I set `random seed = 1`, I would expect repeated calls to `ignition::math::Rand::DblNormal(0, 1)` to always output something like:\n\n`1.343243, 0.223434, -0.454543, -0.6565456, -1.45435....`\n\nFor consistency, we would want the `UsvWindPlugin::update()` method to always get this order of numbers.\n\nHowever, if I were to call `ignition::math::Rand::DblNormal(0, 1)` from another method partway through, would this slightly change the output from `UsvWindPlugin::update()`? If so, is this the correct behavior and we would just not have anything else run using random when running repeatability tests?\n\n1. WindPlugin receives: `1.343243, 0.223434, -0.454543, -0.6565456, -1.45435....`\n2. WindPlugin receives: `1.343243, 0.223434,`\n\nOther function receives: `-0.454543`\n\nWindPlugin receives: `-0.6565456, -1.45435....`\n\nLet me know if my question makes sense. Thanks!\n\n![](data/bitbucket.org/repo/BgXLzgM/images/350838844-Symbol_Controller_Random.png)\n", "markup": "markdown", "html": "<p>I have a question about how random generators work. When the seed is set, we expect the random numbers returned to be the same every time. However, if different modules call random functions from <code>ignition::math::Rand</code>, then will it change the random numbers from what we desired? Will the behavior we get from the simulation depend on the order and timing of random calls from across different functions?</p>\n<p>For example, if I set <code>random seed = 1</code>, I would expect repeated calls to <code>ignition::math::Rand::DblNormal(0, 1)</code> to always output something like:</p>\n<p><code>1.343243, 0.223434, -0.454543, -0.6565456, -1.45435....</code></p>\n<p>For consistency, we would want the <code>UsvWindPlugin::update()</code> method to always get this order of numbers.</p>\n<p>However, if I were to call <code>ignition::math::Rand::DblNormal(0, 1)</code> from another method partway through, would this slightly change the output from <code>UsvWindPlugin::update()</code>? If so, is this the correct behavior and we would just not have anything else run using random when running repeatability tests?</p>\n<ol>\n<li>WindPlugin receives: <code>1.343243, 0.223434, -0.454543, -0.6565456, -1.45435....</code></li>\n<li>WindPlugin receives: <code>1.343243, 0.223434,</code></li>\n</ol>\n<p>Other function receives: <code>-0.454543</code></p>\n<p>WindPlugin receives: <code>-0.6565456, -1.45435....</code></p>\n<p>Let me know if my question makes sense. Thanks!</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/350838844-Symbol_Controller_Random.png\" /></p>", "type": "rendered"}, "created_on": "2019-06-02T00:28:07.794744+00:00", "user": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "updated_on": "2019-06-02T19:24:56.121755+00:00", "type": "issue_comment", "id": 52397707}, {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/92/comments/52402644.json"}, "html": {"href": "#!/osrf/vrx/issues/92#comment-52402644"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/92.json"}}, "type": "issue", "id": 92, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Wind plugin random seed specification"}, "content": {"raw": "Looking into how to set the seed for gazebo, we need to add something like\n\n```\n<arg name=\"use_random_seed\" default=\"false\"mailto:tylergwlum@gmail.com\">&#116;&#121;&#108;&#101;&#114;&#103;&#119;&#108;&#117;&#109;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;</a></p>\n<p>\u2192 &lt;&lt;cset <a href=\"#!/osrf/vrx/commits/27a797286c6c\" rel=\"nofollow\" class=\"ap-connect-link\">27a797286c6c</a>&gt;&gt;</p>", "type": "rendered"}, "created_on": "2019-08-08T22:30:05.261419+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": null, "type": "issue_comment", "id": 53341689}], "page": 1, "size": 16}