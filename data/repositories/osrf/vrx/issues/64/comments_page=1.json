{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/vrx/issues/64/comments/52059143.json"}, "html": {"href": "#!/osrf/vrx/issues/64#comment-52059143"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/64.json"}}, "type": "issue", "id": 64, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Possible frame error in simulated GPS velocity generation"}, "content": {"raw": "@brian_bingham , do you have time to take a look at this issue reported by Jonathan?", "markup": "markdown", "html": "<p>@brian_bingham , do you have time to take a look at this issue reported by Jonathan?</p>", "type": "rendered"}, "created_on": "2019-05-09T18:10:01.205889+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": null, "type": "issue_comment", "id": 52059143}, {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/64/comments/52532791.json"}, "html": {"href": "#!/osrf/vrx/issues/64#comment-52532791"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/64.json"}}, "type": "issue", "id": 64, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Possible frame error in simulated GPS velocity generation"}, "content": {"raw": "Hi Carlos,\n\nWould it be useful for me to develop a gazebo world that demonstrated the issue?\n\nRegards,\n\nJonathan.", "markup": "markdown", "html": "<p>Hi Carlos,</p>\n<p>Would it be useful for me to develop a gazebo world that demonstrated the issue?</p>\n<p>Regards,</p>\n<p>Jonathan.</p>", "type": "rendered"}, "created_on": "2019-06-11T12:10:56.009268+00:00", "user": {"display_name": "Jonathan Wheare", "uuid": "{65043b9b-c505-4efe-852a-3d2393a0ee80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B65043b9b-c505-4efe-852a-3d2393a0ee80%7D"}, "html": {"href": "https://bitbucket.org/%7B65043b9b-c505-4efe-852a-3d2393a0ee80%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/JW-2.png"}}, "nickname": "Jonathan Wheare", "type": "user", "account_id": "5b9791e8a9fd6d2c834b5864"}, "updated_on": null, "type": "issue_comment", "id": 52532791}, {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/64/comments/52535737.json"}, "html": {"href": "#!/osrf/vrx/issues/64#comment-52535737"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/64.json"}}, "type": "issue", "id": 64, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Possible frame error in simulated GPS velocity generation"}, "content": {"raw": "That would be very helpful!", "markup": "markdown", "html": "<p>That would be very helpful!</p>", "type": "rendered"}, "created_on": "2019-06-11T14:52:09.232510+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": null, "type": "issue_comment", "id": 52535737}, {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/64/comments/52539629.json"}, "html": {"href": "#!/osrf/vrx/issues/64#comment-52539629"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/64.json"}}, "type": "issue", "id": 64, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Possible frame error in simulated GPS velocity generation"}, "content": {"raw": "Agreed - making it simple to reproduce would be a big help.\n\nI\u2019m just seeing Carlos' note about taking a look.  I\u2019m wrapping up my teaching quarter so should have more time to work on this.", "markup": "markdown", "html": "<p>Agreed - making it simple to reproduce would be a big help.</p>\n<p>I\u2019m just seeing Carlos' note about taking a look.  I\u2019m wrapping up my teaching quarter so should have more time to work on this.</p>", "type": "rendered"}, "created_on": "2019-06-11T20:14:53.576252+00:00", "user": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "updated_on": null, "type": "issue_comment", "id": 52539629}, {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/64/comments/52539639.json"}, "html": {"href": "#!/osrf/vrx/issues/64#comment-52539639"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/64.json"}}, "type": "issue", "id": 64, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Possible frame error in simulated GPS velocity generation"}, "content": {"raw": "Hi There,\r\n\r\nI have been experimenting with the state estimation in the VRX simulation, and believe I have found a frame error in the generation of velocity information by the simulated GPS sensor.\r\nROS and Gazebo both appear to use a right-handed East-North-Up coordinate system, defined in [REP-015](http://www.ros.org/reps/rep-0105.html#map) and also specified in the ```spherical_coordinates``` tag of the sand island world.\r\n\r\nHowever, if a wam-v is placed in the VRX world, aligned with the x-axis and driven forwards, the world frame velocity reported by the ```fix_velocity``` topic will be negative y, Similarly, when aligned with the y-axis, the velocity will be positive x.  Examination of the simulated GPS sensor in ```wamv_gps.xacro``` shows that the ```referenceHeading``` tag has been used to rotate the GPS frame to align the latitude and longitude values with the ENU frame.\r\n\r\nThis may be caused by the way that the underlying hector_gazebo [gps plugin](https://github.com/tu-darmstadt-ros-pkg/hector_gazebo/blob/kinetic-devel/hector_gazebo_plugins/src/gazebo_ros_gps.cpp)  operates.  With a zero ```referenceHeading```, the plugin appears to use a North-West-Up frame to generate latitude and longitude.  Rotating this into East-North-Up causes the velocity data to be similarly rotated.\r\n\r\nSteps to reproduce;\r\n\r\nSelect sensor wamv in the ```vmrc.launch``` file, then run the keydrive examples.\r\n\r\n```rostopic echo /gps/fix_velocity```\r\n\r\nUse keydrive to move the wamv forward.  ```fix_velocity``` should show a negative y value as the largest component.\r\n\r\nRotate the wam-v to align with the y-axis and move the wam-v forward.   ```fix_velocity``` should show a positive x value as the largest component.\r\n\r\nRegards,\r\nJonathan Wheare.", "markup": "markdown", "html": "<p>Hi There,</p>\n<p>I have been experimenting with the state estimation in the VRX simulation, and believe I have found a frame error in the generation of velocity information by the simulated GPS sensor.\nROS and Gazebo both appear to use a right-handed East-North-Up coordinate system, defined in <a data-is-external-link=\"true\" href=\"http://www.ros.org/reps/rep-0105.html#map\" rel=\"nofollow\">REP-015</a> and also specified in the <code>spherical_coordinates</code> tag of the sand island world.</p>\n<p>However, if a wam-v is placed in the VRX world, aligned with the x-axis and driven forwards, the world frame velocity reported by the <code>fix_velocity</code> topic will be negative y, Similarly, when aligned with the y-axis, the velocity will be positive x.  Examination of the simulated GPS sensor in <code>wamv_gps.xacro</code> shows that the <code>referenceHeading</code> tag has been used to rotate the GPS frame to align the latitude and longitude values with the ENU frame.</p>\n<p>This may be caused by the way that the underlying hector_gazebo <a data-is-external-link=\"true\" href=\"https://github.com/tu-darmstadt-ros-pkg/hector_gazebo/blob/kinetic-devel/hector_gazebo_plugins/src/gazebo_ros_gps.cpp\" rel=\"nofollow\">gps plugin</a>  operates.  With a zero <code>referenceHeading</code>, the plugin appears to use a North-West-Up frame to generate latitude and longitude.  Rotating this into East-North-Up causes the velocity data to be similarly rotated.</p>\n<p>Steps to reproduce;</p>\n<p>Select sensor wamv in the <code>vmrc.launch</code> file, then run the keydrive examples.</p>\n<p><code>rostopic echo /gps/fix_velocity</code></p>\n<p>Use keydrive to move the wamv forward.  <code>fix_velocity</code> should show a negative y value as the largest component.</p>\n<p>Rotate the wam-v to align with the y-axis and move the wam-v forward.   <code>fix_velocity</code> should show a positive x value as the largest component.</p>\n<p>Regards,\nJonathan Wheare.</p>", "type": "rendered"}, "created_on": "2019-06-11T20:15:19.247009+00:00", "user": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "updated_on": null, "type": "issue_comment", "id": 52539639}, {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/64/comments/52579506.json"}, "html": {"href": "#!/osrf/vrx/issues/64#comment-52579506"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/64.json"}}, "type": "issue", "id": 64, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Possible frame error in simulated GPS velocity generation"}, "content": {"raw": "To illustrate the issue, I have developed two plugins in a separate branch of my repository \\([https://bitbucket.org/JonathanWheare/vrx/branch/gps\\_plugin](https://bitbucket.org/JonathanWheare/vrx/branch/gps_plugin)\\). These plugins are;\n\n* gazebo\\_v3d, that publishes the world frame velocity as reported by Gazebo.\n* gazebo\\_gps, that publishes the data generated by gazebo\u2019s own GPS sensor\n\nI have modified the GPS configuration of the default wamv by adding both GPS sensors and the velocity plugin. The topics published by the system are;\n\n* gps1/fix and gps1/fix\\_velocity - position and velocity published by the hector gazebo GPS sensor\n* gps2/fix and gps2/fix\\_velocity - position and velocity published by the gazebo internal GPS sensor\n* v3d/vel - velocity published directly from the model\u2019s world frame velocity\n\nTurning on Gazebo\u2019s axes show that the x-axis appears to be pointing towards the east, with the y-axis pointing north. This appears to be correlated with the view of google maps.\n\n![](data/bitbucket.org/repo/BgXLzgM/images/1551995168-Screenshot_from_2019-06-14_18-25-21.png)\nI started off by moving the wamv vehicle north and south of the axes, plotting the latitudes of the two sensors, I got the following graph;\n\n![](data/bitbucket.org/repo/BgXLzgM/images/2318167230-fix_lat.png)\nI then repeated this with longitude;\n\n![](data/bitbucket.org/repo/BgXLzgM/images/3414130841-fix_lon.png)\nFrom this, it appears the hector pluging is producing ENU oriented data, the gazebo GPS sensor appears to be reversed. From this I moved on to testing velocities. To do this, the simulated wamv was driven using the usv\\_keydrive launch file;\n\n![](data/bitbucket.org/repo/BgXLzgM/images/4249077376-vel_x.png)\nthe v3d output should be a ground truth, gps2 the gazebo GPS sensor appears to be generating a negative value. Simultaneously, I was plotting the y values;\n\n![](data/bitbucket.org/repo/BgXLzgM/images/4067654028-vel_y.png)\nThe velocities of GPS sensor 1 seem be swapped, the x axis correlated with the y-axis of the v3d plugin. the y-axis correlates with the reverse of the x-axis of the v3d plugin.\n\nNotes:\n\n* The reference heading of the gazebo world is set to zero degrees, and the frame convention is set to East North Up\n* The gazebo world seems to match the sand island environment using the East - North - Up frame convention\n* The fix position of the hector gazebo sensor appears correct\n* The fix position generated by the built-in GPS sensor appears to be rotated 180 degrees \\(West South Up\\)\n* The hector gazebo sensor appears to have it\u2019s velocities rotated by ninety degrees. This may be caused by the 90 degree reference heading in the sensor plugin\n* The velocities generated by the the gazebo plugin appear to be reversed compared to the v3d plugin, the output of this plugin thus appears to be rotated by 180 degrees\n\nConclusion\n\nThere appears to be an error in frame transformation in both the hector gazebo GPS sensor, and gazebo\u2019s built in GPS sensor. I found this quite surprising, and I would appreciate it if you could check my results.\n\nRegards,\n\nJonathan.", "markup": "markdown", "html": "<p>To illustrate the issue, I have developed two plugins in a separate branch of my repository (<a data-is-external-link=\"true\" href=\"https://bitbucket.org/JonathanWheare/vrx/branch/gps_plugin\" rel=\"nofollow\">https://bitbucket.org/JonathanWheare/vrx/branch/gps_plugin</a>). These plugins are;</p>\n<ul>\n<li>gazebo_v3d, that publishes the world frame velocity as reported by Gazebo.</li>\n<li>gazebo_gps, that publishes the data generated by gazebo\u2019s own GPS sensor</li>\n</ul>\n<p>I have modified the GPS configuration of the default wamv by adding both GPS sensors and the velocity plugin. The topics published by the system are;</p>\n<ul>\n<li>gps1/fix and gps1/fix_velocity - position and velocity published by the hector gazebo GPS sensor</li>\n<li>gps2/fix and gps2/fix_velocity - position and velocity published by the gazebo internal GPS sensor</li>\n<li>v3d/vel - velocity published directly from the model\u2019s world frame velocity</li>\n</ul>\n<p>Turning on Gazebo\u2019s axes show that the x-axis appears to be pointing towards the east, with the y-axis pointing north. This appears to be correlated with the view of google maps.</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/1551995168-Screenshot_from_2019-06-14_18-25-21.png\" />\nI started off by moving the wamv vehicle north and south of the axes, plotting the latitudes of the two sensors, I got the following graph;</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/2318167230-fix_lat.png\" />\nI then repeated this with longitude;</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/3414130841-fix_lon.png\" />\nFrom this, it appears the hector pluging is producing ENU oriented data, the gazebo GPS sensor appears to be reversed. From this I moved on to testing velocities. To do this, the simulated wamv was driven using the usv_keydrive launch file;</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/4249077376-vel_x.png\" />\nthe v3d output should be a ground truth, gps2 the gazebo GPS sensor appears to be generating a negative value. Simultaneously, I was plotting the y values;</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/BgXLzgM/images/4067654028-vel_y.png\" />\nThe velocities of GPS sensor 1 seem be swapped, the x axis correlated with the y-axis of the v3d plugin. the y-axis correlates with the reverse of the x-axis of the v3d plugin.</p>\n<p>Notes:</p>\n<ul>\n<li>The reference heading of the gazebo world is set to zero degrees, and the frame convention is set to East North Up</li>\n<li>The gazebo world seems to match the sand island environment using the East - North - Up frame convention</li>\n<li>The fix position of the hector gazebo sensor appears correct</li>\n<li>The fix position generated by the built-in GPS sensor appears to be rotated 180 degrees (West South Up)</li>\n<li>The hector gazebo sensor appears to have it\u2019s velocities rotated by ninety degrees. This may be caused by the 90 degree reference heading in the sensor plugin</li>\n<li>The velocities generated by the the gazebo plugin appear to be reversed compared to the v3d plugin, the output of this plugin thus appears to be rotated by 180 degrees</li>\n</ul>\n<p>Conclusion</p>\n<p>There appears to be an error in frame transformation in both the hector gazebo GPS sensor, and gazebo\u2019s built in GPS sensor. I found this quite surprising, and I would appreciate it if you could check my results.</p>\n<p>Regards,</p>\n<p>Jonathan.</p>", "type": "rendered"}, "created_on": "2019-06-14T09:52:50.204899+00:00", "user": {"display_name": "Jonathan Wheare", "uuid": "{65043b9b-c505-4efe-852a-3d2393a0ee80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B65043b9b-c505-4efe-852a-3d2393a0ee80%7D"}, "html": {"href": "https://bitbucket.org/%7B65043b9b-c505-4efe-852a-3d2393a0ee80%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/JW-2.png"}}, "nickname": "Jonathan Wheare", "type": "user", "account_id": "5b9791e8a9fd6d2c834b5864"}, "updated_on": "2019-06-15T00:00:08.328519+00:00", "type": "issue_comment", "id": 52579506}, {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/64/comments/52589397.json"}, "html": {"href": "#!/osrf/vrx/issues/64#comment-52589397"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/64.json"}}, "type": "issue", "id": 64, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Possible frame error in simulated GPS velocity generation"}, "content": {"raw": "The issue with coordinate generation in the built in GPS sensor may be related to an issue with spherical coordinates.  The following gazebo answers post shows a possible issue in the conversion of local to spherical coordinates:\n\n[http://answers.gazebosim.org/question/13820/bug-in-sphericalcoordinatessphericalfromlocal/](http://answers.gazebosim.org/question/13820/bug-in-sphericalcoordinatessphericalfromlocal/)\n\nIn that post a test program that converts from local to spherical coordinates is used to test some simple values.  Positive x and y values generate negative longitudes and latitudes respectively, implying that the coordinates are being reversed during the transform.  I have tried the code sample, and my calculated values do seem to match those in the post.\n\nExamining the [linked source code](https://bitbucket.org/osrf/gazebo/src/48039241c95fcf879ef5861e5ca66efcd4f22e6c/gazebo/common/SphericalCoordinates.cc?at=default&fileviewer=file-view-default#SphericalCoordinates.cc-313), which shows the local to spherical transformation of both coordinates and velocities, the SphericalCoordinates class appears to start by reversing the sign of the x and y components.  This could be the source of the coordinate reversal.  Checking the ignition version of the code it seems identical, implying that later version of gazebo that use the ignition library are also likely to be affected.  \n\nRegards,\n\nJonathan.", "markup": "markdown", "html": "<p>The issue with coordinate generation in the built in GPS sensor may be related to an issue with spherical coordinates.  The following gazebo answers post shows a possible issue in the conversion of local to spherical coordinates:</p>\n<p><a data-is-external-link=\"true\" href=\"http://answers.gazebosim.org/question/13820/bug-in-sphericalcoordinatessphericalfromlocal/\" rel=\"nofollow\">http://answers.gazebosim.org/question/13820/bug-in-sphericalcoordinatessphericalfromlocal/</a></p>\n<p>In that post a test program that converts from local to spherical coordinates is used to test some simple values.  Positive x and y values generate negative longitudes and latitudes respectively, implying that the coordinates are being reversed during the transform.  I have tried the code sample, and my calculated values do seem to match those in the post.</p>\n<p>Examining the <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/48039241c95fcf879ef5861e5ca66efcd4f22e6c/gazebo/common/SphericalCoordinates.cc?at=default&amp;fileviewer=file-view-default#SphericalCoordinates.cc-313\" rel=\"nofollow\">linked source code</a>, which shows the local to spherical transformation of both coordinates and velocities, the SphericalCoordinates class appears to start by reversing the sign of the x and y components.  This could be the source of the coordinate reversal.  Checking the ignition version of the code it seems identical, implying that later version of gazebo that use the ignition library are also likely to be affected.  </p>\n<p>Regards,</p>\n<p>Jonathan.</p>", "type": "rendered"}, "created_on": "2019-06-14T23:43:27.949826+00:00", "user": {"display_name": "Jonathan Wheare", "uuid": "{65043b9b-c505-4efe-852a-3d2393a0ee80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B65043b9b-c505-4efe-852a-3d2393a0ee80%7D"}, "html": {"href": "https://bitbucket.org/%7B65043b9b-c505-4efe-852a-3d2393a0ee80%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/JW-2.png"}}, "nickname": "Jonathan Wheare", "type": "user", "account_id": "5b9791e8a9fd6d2c834b5864"}, "updated_on": null, "type": "issue_comment", "id": 52589397}, {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/64/comments/52689569.json"}, "html": {"href": "#!/osrf/vrx/issues/64#comment-52689569"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/64.json"}}, "type": "issue", "id": 64, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Possible frame error in simulated GPS velocity generation"}, "content": {"raw": "Thank you for doing such a great job of documenting all of this and setting up the test cases. \n\nWith regards to the coordinate frames for Gazebo and the [hector\\_gazebo\\_ros\\_gps plugin](http://wiki.ros.org/hector_gazebo_plugins#GazeboRosGps), I believe this is what is going on\u2026\n\n* For the hector\\_gazebo\\_ros\\_gps plugin, the referenceHeading parameter defines the 2D rotation from the Gazebo \\+X coordinate to the HectorGPS \\+Latitude coordinate - in degrees.\n\n    * For our setup, the referenceHeading of 90 degrees creates a scenario where Gazebo\\+X=HectorGPS\\+Lon=East, which is the setup we are going for.  This keeps the Gazebo frame consistent with the ROS ENU convention.\n    * If we change the referenceHeading to 0 degrees, then Gazebo\\+X=HectorGPS\\+Lat=East, not what we want.\n    \n* The hector\\_gazebo\\_ros\\_gps fix\\_velocity publication provides the velocity in NWU \\(north, west, up\\) coordinates.  \n\n    * So, with the referenceHeading of 90 degrees, moving along the Gazebo\\+X=HectorGPS\\+Lon=East direction generates a fix\\_velocity in the negative y direction \\(West\\).  I believe this is consistent with your testing.\n    \n\nSo from my testing, I think there is consistency between the Gazebo coordinates and the Hector GPS plugin.  The NWU convention for reporting fix velocities isn\u2019t necessarily intuitive.\n\nI haven\u2019t had much experience with the built-in Gazebo GPS sensor, so I\u2019m not sure why it would provide lat/lon values that are 180 degrees out from the Hector plugin.", "markup": "markdown", "html": "<p>Thank you for doing such a great job of documenting all of this and setting up the test cases. </p>\n<p>With regards to the coordinate frames for Gazebo and the <a data-is-external-link=\"true\" href=\"http://wiki.ros.org/hector_gazebo_plugins#GazeboRosGps\" rel=\"nofollow\">hector_gazebo_ros_gps plugin</a>, I believe this is what is going on\u2026</p>\n<ul>\n<li>\n<p>For the hector_gazebo_ros_gps plugin, the referenceHeading parameter defines the 2D rotation from the Gazebo +X coordinate to the HectorGPS +Latitude coordinate - in degrees.</p>\n<ul>\n<li>For our setup, the referenceHeading of 90 degrees creates a scenario where Gazebo+X=HectorGPS+Lon=East, which is the setup we are going for.  This keeps the Gazebo frame consistent with the ROS ENU convention.</li>\n<li>If we change the referenceHeading to 0 degrees, then Gazebo+X=HectorGPS+Lat=East, not what we want.</li>\n</ul>\n</li>\n<li>\n<p>The hector_gazebo_ros_gps fix_velocity publication provides the velocity in NWU (north, west, up) coordinates.  </p>\n<ul>\n<li>So, with the referenceHeading of 90 degrees, moving along the Gazebo+X=HectorGPS+Lon=East direction generates a fix_velocity in the negative y direction (West).  I believe this is consistent with your testing.</li>\n</ul>\n</li>\n</ul>\n<p>So from my testing, I think there is consistency between the Gazebo coordinates and the Hector GPS plugin.  The NWU convention for reporting fix velocities isn\u2019t necessarily intuitive.</p>\n<p>I haven\u2019t had much experience with the built-in Gazebo GPS sensor, so I\u2019m not sure why it would provide lat/lon values that are 180 degrees out from the Hector plugin.</p>", "type": "rendered"}, "created_on": "2019-06-21T18:12:12.979247+00:00", "user": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "updated_on": null, "type": "issue_comment", "id": 52689569}, {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/64/comments/52689570.json"}, "html": {"href": "#!/osrf/vrx/issues/64#comment-52689570"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/64.json"}}, "type": "issue", "id": 64, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Possible frame error in simulated GPS velocity generation"}, "content": {"raw": "Let me know if this resolves the issue for you?", "markup": "markdown", "html": "<p>Let me know if this resolves the issue for you?</p>", "type": "rendered"}, "created_on": "2019-06-21T18:12:33.752854+00:00", "user": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "updated_on": null, "type": "issue_comment", "id": 52689570}, {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/64/comments/52776193.json"}, "html": {"href": "#!/osrf/vrx/issues/64#comment-52776193"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/64.json"}}, "type": "issue", "id": 64, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Possible frame error in simulated GPS velocity generation"}, "content": {"raw": "Hi Brian,\n\nWhile the coordinates generated by the GPS appear correct, the velocities created by the nmea\\_navsat\\_driver recommended by the robot\\_localisation package are in the ENU frame.  As such, a system developed using GPS velocities from the VRX simulation will not operate correctly if moved over to a real vehicle.\n\nThat said the issue seems to be with upstream.  I can look into opening an issue with the appropriate packages.\n\nRegards,\n\nJonathan.", "markup": "markdown", "html": "<p>Hi Brian,</p>\n<p>While the coordinates generated by the GPS appear correct, the velocities created by the nmea_navsat_driver recommended by the robot_localisation package are in the ENU frame.  As such, a system developed using GPS velocities from the VRX simulation will not operate correctly if moved over to a real vehicle.</p>\n<p>That said the issue seems to be with upstream.  I can look into opening an issue with the appropriate packages.</p>\n<p>Regards,</p>\n<p>Jonathan.</p>", "type": "rendered"}, "created_on": "2019-06-28T11:23:06.848364+00:00", "user": {"display_name": "Jonathan Wheare", "uuid": "{65043b9b-c505-4efe-852a-3d2393a0ee80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B65043b9b-c505-4efe-852a-3d2393a0ee80%7D"}, "html": {"href": "https://bitbucket.org/%7B65043b9b-c505-4efe-852a-3d2393a0ee80%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/JW-2.png"}}, "nickname": "Jonathan Wheare", "type": "user", "account_id": "5b9791e8a9fd6d2c834b5864"}, "updated_on": null, "type": "issue_comment", "id": 52776193}, {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/64/comments/52782964.json"}, "html": {"href": "#!/osrf/vrx/issues/64#comment-52782964"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/64.json"}}, "type": "issue", "id": 64, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Possible frame error in simulated GPS velocity generation"}, "content": {"raw": "Hi Jonathan,\n\nI think I am tracking now.  I believe this issue is that\u2026\n\n* The Hector GPS Gazebo plugin produces GPS velocities in NWU.\n* The nmea\\_navsat\\_driver reports velocities in ENU \\(I looked at the wiki page, but it didn\u2019t seem to be explicit\\)\n* Therefore, if a user was using the hector plugin in simulation and the nmea\\_navsat\\_driver on the physical robot they would have inconsistent GPS velocity information.\n\nWould one work around be to have a small translator node that converted the `fix_velocity` topic \\(Vector3 stamped\\) from the Gazebo plugin in NWU, to the `vel` topic \\(Twist\\) in ENU?  Then it the message types and coord. frame conventions would be compatible with robot\\_localization?", "markup": "markdown", "html": "<p>Hi Jonathan,</p>\n<p>I think I am tracking now.  I believe this issue is that\u2026</p>\n<ul>\n<li>The Hector GPS Gazebo plugin produces GPS velocities in NWU.</li>\n<li>The nmea_navsat_driver reports velocities in ENU (I looked at the wiki page, but it didn\u2019t seem to be explicit)</li>\n<li>Therefore, if a user was using the hector plugin in simulation and the nmea_navsat_driver on the physical robot they would have inconsistent GPS velocity information.</li>\n</ul>\n<p>Would one work around be to have a small translator node that converted the <code>fix_velocity</code> topic (Vector3 stamped) from the Gazebo plugin in NWU, to the <code>vel</code> topic (Twist) in ENU?  Then it the message types and coord. frame conventions would be compatible with robot_localization?</p>", "type": "rendered"}, "created_on": "2019-06-28T22:41:04.729613+00:00", "user": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "updated_on": null, "type": "issue_comment", "id": 52782964}, {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/64/comments/52784976.json"}, "html": {"href": "#!/osrf/vrx/issues/64#comment-52784976"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/64.json"}}, "type": "issue", "id": 64, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Possible frame error in simulated GPS velocity generation"}, "content": {"raw": "Hi Brian,\n\nYes, you are correct in your summary.\n\nThe documentation of nmea\\_navsat\\_driver doesn\u2019t claim to use ENU for velocity, but according to ROS Rep-103, ENU is the preferred coordinate frame for short-range cartesian coordinate frames. Examination of the [nmea\\_navsat\\_driver](https://github.com/ros-drivers/nmea_navsat_driver/blob/master/src/libnmea_navsat_driver/driver.py) code shows that the frame should be ENU. The GPVTG NMEA message outputs in the NED frame, and the axes are flipped into ENU.\n\nYour suggestion could work, however the NWU topic will still be visible, as such it would be possible to subscribe to it by accident. The GPS velcoity message could be prepended with a namespace such as \u201c/ignore\u201d. This may prevent teams from using it.\n\nRegards,\n\nJonathan.", "markup": "markdown", "html": "<p>Hi Brian,</p>\n<p>Yes, you are correct in your summary.</p>\n<p>The documentation of nmea_navsat_driver doesn\u2019t claim to use ENU for velocity, but according to ROS Rep-103, ENU is the preferred coordinate frame for short-range cartesian coordinate frames. Examination of the <a data-is-external-link=\"true\" href=\"https://github.com/ros-drivers/nmea_navsat_driver/blob/master/src/libnmea_navsat_driver/driver.py\" rel=\"nofollow\">nmea_navsat_driver</a> code shows that the frame should be ENU. The GPVTG NMEA message outputs in the NED frame, and the axes are flipped into ENU.</p>\n<p>Your suggestion could work, however the NWU topic will still be visible, as such it would be possible to subscribe to it by accident. The GPS velcoity message could be prepended with a namespace such as \u201c/ignore\u201d. This may prevent teams from using it.</p>\n<p>Regards,</p>\n<p>Jonathan.</p>", "type": "rendered"}, "created_on": "2019-06-29T08:55:25.552756+00:00", "user": {"display_name": "Jonathan Wheare", "uuid": "{65043b9b-c505-4efe-852a-3d2393a0ee80}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B65043b9b-c505-4efe-852a-3d2393a0ee80%7D"}, "html": {"href": "https://bitbucket.org/%7B65043b9b-c505-4efe-852a-3d2393a0ee80%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/JW-2.png"}}, "nickname": "Jonathan Wheare", "type": "user", "account_id": "5b9791e8a9fd6d2c834b5864"}, "updated_on": "2019-06-29T09:38:24.344624+00:00", "type": "issue_comment", "id": 52784976}, {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/64/comments/52805871.json"}, "html": {"href": "#!/osrf/vrx/issues/64#comment-52805871"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/64.json"}}, "type": "issue", "id": 64, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Possible frame error in simulated GPS velocity generation"}, "content": {"raw": "Jonathan,\n\nThat all sounds good to me.  I\u2019m putting in a [PR#134](#!/osrf/vrx/pull-requests/134/add-a-xacro-comment-for-issue-64/diff) to add a comment to the xacro to make it explicit that the plugin puts velocity in NWU - and a mention of this issue.  Hopefully this will remind folks.\n\nThank you for bringing this up and documenting it.  I imagine this discussion will benefit a number of users.\n\nI\u2019m going to go ahead a mark as resolved for now.\n\nBrian", "markup": "markdown", "html": "<p>Jonathan,</p>\n<p>That all sounds good to me.  I\u2019m putting in a <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/pull-requests/134/add-a-xacro-comment-for-issue-64/diff\" rel=\"nofollow\">PR#134</a> to add a comment to the xacro to make it explicit that the plugin puts velocity in NWU - and a mention of this issue.  Hopefully this will remind folks.</p>\n<p>Thank you for bringing this up and documenting it.  I imagine this discussion will benefit a number of users.</p>\n<p>I\u2019m going to go ahead a mark as resolved for now.</p>\n<p>Brian</p>", "type": "rendered"}, "created_on": "2019-07-01T16:28:49.152001+00:00", "user": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "updated_on": null, "type": "issue_comment", "id": 52805871}, {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/64/comments/52805875.json"}, "html": {"href": "#!/osrf/vrx/issues/64#comment-52805875"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/64.json"}}, "type": "issue", "id": 64, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Possible frame error in simulated GPS velocity generation"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2019-07-01T16:29:02.210006+00:00", "user": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "updated_on": null, "type": "issue_comment", "id": 52805875}], "page": 1, "size": 14}