{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx/issues/188/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx/issues/188.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/188/watch"}, "comments": {"href": "data/repositories/osrf/vrx/issues/188/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx/issues/188/gps-imu-are-measured-from-the-wrong-pose"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx/issues/188/vote"}}, "reporter": {"display_name": "Kevin Allen", "uuid": "{29f672ad-72f4-434e-bb0e-c6f2f69974f2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B29f672ad-72f4-434e-bb0e-c6f2f69974f2%7D"}, "html": {"href": "https://bitbucket.org/%7B29f672ad-72f4-434e-bb0e-c6f2f69974f2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/355d0415f6040ffb168f44275ac2ee2fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsKA-1.png"}}, "nickname": "kev-the-dev", "type": "user", "account_id": "5b04a6cf8a69f52b3ba2e5db"}, "title": "GPS/IMU are measured from the wrong pose", "component": null, "votes": 1, "watches": 1, "content": {"raw": "Team UF has spent about two weeks investigating instability in our control / state estimation systems. After much debugging, the problem has been identified as a bug upstream in VRX. There is some possibility that this is caused by a difference in dependency versions \\(we use a modified container\\), so I encourage the maintainers to attempt to reproduce the issue independently.\r\n\r\n\u200c\r\n\r\n**Summary**\r\n\r\nThe IMU and GPS report \\(in their header messages\\) that they are being measured relative to the link at the pose teams specify in their sensor\\_config.yaml. However, these measurements are actually at base\\_link.  AFAIK, this is not a documented behavior. These discrepancies will obviously throw off state estimation significantly.\r\n\r\n\u200c\r\n\r\n**How to reproduce**\r\n\r\n* Create a wamv with a gps at a some pose nearby to base link. Launch vrx, echo out the gps fix topic, and note the lat / long\r\n* Create a second wamv with a gps at some absurdly far away pose \\(x=10000\\). \r\n* Launch vrx, echo out the gps fix, and note the lat / long\r\n* In both cases, the lat / long is reported as the same. The analogous experiment is true of the IMU. The pose specified in sensor\\_config.yaml does not affect the pose the plugin measures relative to.\r\n\r\n\u200c\r\n\r\n**Analysis**\r\n\r\nAfter the URDF is generated, everything seems okay. Links exist at the correct poses and the hector\\_gazebo plugins have these links specified \r\n\r\n```xml\r\n  <gazebo>\r\n    <plugin filename=\"libhector_gazebo_ros_imu.so\" name=\"imu_plugin_imu_wamv\">\r\n     ...\r\n      <bodyName>imu_wamv_link</bodyName>\r\n      ...\r\n      <!-- Manually prepend namespace to tf frame. -->\r\n      <frameId>wamv/imu_wamv_link</frameId>\r\n     ...\r\n    </plugin>\r\n  </gazebo>\r\n```\r\n\r\nHowever, if you add some debug lines to hector\\_gazebo, you will see that at some point during the URDF->SDF process this tag seems to be changed.\r\n\r\n```c++\r\ndiff --git a/hector_gazebo_plugins/src/gazebo_ros_gps.cpp b/hector_gazebo_plugins/src/gazebo_ros_gps.cpp\r\nindex 79d860b..b27becf 100644\r\n--- a/hector_gazebo_plugins/src/gazebo_ros_gps.cpp\r\n+++ b/hector_gazebo_plugins/src/gazebo_ros_gps.cpp\r\n@@ -74,20 +74,34 @@ void GazeboRosGps::Load(physics::ModelPtr _model, sdf::ElementPtr _sdf)\r\n \r\n   if (!_sdf->HasElement(\"bodyName\"))\r\n   {\r\n+    ROS_ERROR(\"No body name flag, defaulting to base_link\");\r\n+\r\n     link = _model->GetLink();\r\n     link_name_ = link->GetName();\r\n   }\r\n   else {\r\n+\r\n     link_name_ = _sdf->GetElement(\"bodyName\")->GetValue()->GetAsString();\r\n+    ROS_ERROR_STREAM(\"Measuring GPS relative to \" << link_name_);\r\n+\r\n     link = _model->GetLink(link_name_);\r\n   }\r\n \r\n+\r\n   if (!link)\r\n   {\r\n     ROS_FATAL(\"GazeboRosGps plugin error: bodyName: %s does not exist\\n\", link_name_.c_str());\r\n     return;\r\n   }\r\n \r\n+\r\n+    for(auto link : _model->GetLinks())\r\n+    {\r\n+      ROS_ERROR_STREAM(\"Link \" << link->GetName() << \" Pose \" << link->RelativePose());\r\n+    }\r\n+\r\n+\r\n+\r\n   // default parameters\r\n   frame_id_ = \"/world\";\r\n   fix_topic_ = \"fix\";\r\n```\r\n\r\nThis produces:\r\n\r\n```\r\n[ERROR] [1573845827.616271176, 0.001000000]: Measuring GPS relative to base_link\r\n[ERROR] [1573845827.616431306, 0.001000000]: Link base_link Pose 0 0 0 0 -0 0\r\n```\r\n\r\nIndicating that hector\\_gazebo actually processes the sensors relative to base\\_link, but reports them at the sensor link.\r\n\r\n\u200c\r\n\r\n**Mitigiation**\r\n\r\nAs a hack, Team UF runs our URDF through a script to set the gps / imu links to have a pose of zero so transforms work correctly when published by robot\\_state\\_publisher. Others will have to change the hard coded joint names to their own.\r\n\r\n```\r\n#!/usr/bin/python2\r\n'''\r\nFixes an URDF file which uses hector_gazebo_plugins for gps/imu.\r\nBeacause gazebo_ros's URDF->SDF blindly replaces link name strings with base_link, thus\r\nmaking the imu/gps plugins measure from base_link but report a different link.\r\nThis fixes the urdf to have these sensors also be at baselink so transforms work correctly.\r\nNote: currently hardcoded for VRX purposes. Simply change the strings to work more genericly.\r\n'''\r\nfrom __future__ import print_function\r\nimport xml.etree.ElementTree as ET\r\nimport sys\r\n\r\n\r\ndef set_joint_origin_to_zero(root, name):\r\n    tag = root.find(\"*[@name='{}']\".format(name))\r\n    origin = tag.find(\"origin\")\r\n    origin.set('rpy', '0 0 0')\r\n    origin.set('xyz', '0 0 0')\r\n\r\n\r\ndef fix_gps(root):\r\n    set_joint_origin_to_zero(root, 'gps_wamv_joint')\r\n\r\n\r\ndef fix_imu(root):\r\n    set_joint_origin_to_zero(root, 'imu_wamv_joint')\r\n\r\n\r\ndef fix_file(filename):\r\n    tree = ET.parse(filename)\r\n    root = tree.getroot()\r\n    fix_gps(root)\r\n    fix_imu(root)\r\n    print(ET.tostring(root))\r\n\r\n\r\nif __name__ == '__main__':\r\n    fix_file(sys.argv[1])                             \r\n```\r\n\r\n\u200c", "markup": "markdown", "html": "<p>Team UF has spent about two weeks investigating instability in our control / state estimation systems. After much debugging, the problem has been identified as a bug upstream in VRX. There is some possibility that this is caused by a difference in dependency versions (we use a modified container), so I encourage the maintainers to attempt to reproduce the issue independently.</p>\n<p>\u200c</p>\n<p><strong>Summary</strong></p>\n<p>The IMU and GPS report (in their header messages) that they are being measured relative to the link at the pose teams specify in their sensor_config.yaml. However, these measurements are actually at base_link.  AFAIK, this is not a documented behavior. These discrepancies will obviously throw off state estimation significantly.</p>\n<p>\u200c</p>\n<p><strong>How to reproduce</strong></p>\n<ul>\n<li>Create a wamv with a gps at a some pose nearby to base link. Launch vrx, echo out the gps fix topic, and note the lat / long</li>\n<li>Create a second wamv with a gps at some absurdly far away pose (x=10000). </li>\n<li>Launch vrx, echo out the gps fix, and note the lat / long</li>\n<li>In both cases, the lat / long is reported as the same. The analogous experiment is true of the IMU. The pose specified in sensor_config.yaml does not affect the pose the plugin measures relative to.</li>\n</ul>\n<p>\u200c</p>\n<p><strong>Analysis</strong></p>\n<p>After the URDF is generated, everything seems okay. Links exist at the correct poses and the hector_gazebo plugins have these links specified </p>\n<div class=\"codehilite language-xml\"><pre><span></span>  <span class=\"nt\">&lt;gazebo&gt;</span>\n    <span class=\"nt\">&lt;plugin</span> <span class=\"na\">filename=</span><span class=\"s\">&quot;libhector_gazebo_ros_imu.so&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;imu_plugin_imu_wamv&quot;</span><span class=\"nt\">&gt;</span>\n     ...\n      <span class=\"nt\">&lt;bodyName&gt;</span>imu_wamv_link<span class=\"nt\">&lt;/bodyName&gt;</span>\n      ...\n      <span class=\"c\">&lt;!-- Manually prepend namespace to tf frame. --&gt;</span>\n      <span class=\"nt\">&lt;frameId&gt;</span>wamv/imu_wamv_link<span class=\"nt\">&lt;/frameId&gt;</span>\n     ...\n    <span class=\"nt\">&lt;/plugin&gt;</span>\n  <span class=\"nt\">&lt;/gazebo&gt;</span>\n</pre></div>\n\n\n<p>However, if you add some debug lines to hector_gazebo, you will see that at some point during the URDF-&gt;SDF process this tag seems to be changed.</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"n\">diff</span> <span class=\"o\">--</span><span class=\"n\">git</span> <span class=\"n\">a</span><span class=\"o\">/</span><span class=\"n\">hector_gazebo_plugins</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">gazebo_ros_gps</span><span class=\"p\">.</span><span class=\"n\">cpp</span> <span class=\"n\">b</span><span class=\"o\">/</span><span class=\"n\">hector_gazebo_plugins</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">gazebo_ros_gps</span><span class=\"p\">.</span><span class=\"n\">cpp</span>\n<span class=\"n\">index</span> <span class=\"mi\">79</span><span class=\"n\">d860b</span><span class=\"p\">..</span><span class=\"n\">b27becf</span> <span class=\"mi\">100644</span>\n<span class=\"o\">---</span> <span class=\"n\">a</span><span class=\"o\">/</span><span class=\"n\">hector_gazebo_plugins</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">gazebo_ros_gps</span><span class=\"p\">.</span><span class=\"n\">cpp</span>\n<span class=\"o\">+++</span> <span class=\"n\">b</span><span class=\"o\">/</span><span class=\"n\">hector_gazebo_plugins</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">gazebo_ros_gps</span><span class=\"p\">.</span><span class=\"n\">cpp</span>\n<span class=\"err\">@@</span> <span class=\"o\">-</span><span class=\"mi\">74</span><span class=\"p\">,</span><span class=\"mi\">20</span> <span class=\"o\">+</span><span class=\"mi\">74</span><span class=\"p\">,</span><span class=\"mi\">34</span> <span class=\"err\">@@</span> <span class=\"kt\">void</span> <span class=\"n\">GazeboRosGps</span><span class=\"o\">::</span><span class=\"n\">Load</span><span class=\"p\">(</span><span class=\"n\">physics</span><span class=\"o\">::</span><span class=\"n\">ModelPtr</span> <span class=\"n\">_model</span><span class=\"p\">,</span> <span class=\"n\">sdf</span><span class=\"o\">::</span><span class=\"n\">ElementPtr</span> <span class=\"n\">_sdf</span><span class=\"p\">)</span>\n\n   <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">_sdf</span><span class=\"o\">-&gt;</span><span class=\"n\">HasElement</span><span class=\"p\">(</span><span class=\"s\">&quot;bodyName&quot;</span><span class=\"p\">))</span>\n   <span class=\"p\">{</span>\n<span class=\"o\">+</span>    <span class=\"n\">ROS_ERROR</span><span class=\"p\">(</span><span class=\"s\">&quot;No body name flag, defaulting to base_link&quot;</span><span class=\"p\">);</span>\n<span class=\"o\">+</span>\n     <span class=\"n\">link</span> <span class=\"o\">=</span> <span class=\"n\">_model</span><span class=\"o\">-&gt;</span><span class=\"n\">GetLink</span><span class=\"p\">();</span>\n     <span class=\"n\">link_name_</span> <span class=\"o\">=</span> <span class=\"n\">link</span><span class=\"o\">-&gt;</span><span class=\"n\">GetName</span><span class=\"p\">();</span>\n   <span class=\"p\">}</span>\n   <span class=\"k\">else</span> <span class=\"p\">{</span>\n<span class=\"o\">+</span>\n     <span class=\"n\">link_name_</span> <span class=\"o\">=</span> <span class=\"n\">_sdf</span><span class=\"o\">-&gt;</span><span class=\"n\">GetElement</span><span class=\"p\">(</span><span class=\"s\">&quot;bodyName&quot;</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span><span class=\"n\">GetValue</span><span class=\"p\">()</span><span class=\"o\">-&gt;</span><span class=\"n\">GetAsString</span><span class=\"p\">();</span>\n<span class=\"o\">+</span>    <span class=\"n\">ROS_ERROR_STREAM</span><span class=\"p\">(</span><span class=\"s\">&quot;Measuring GPS relative to &quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">link_name_</span><span class=\"p\">);</span>\n<span class=\"o\">+</span>\n     <span class=\"n\">link</span> <span class=\"o\">=</span> <span class=\"n\">_model</span><span class=\"o\">-&gt;</span><span class=\"n\">GetLink</span><span class=\"p\">(</span><span class=\"n\">link_name_</span><span class=\"p\">);</span>\n   <span class=\"p\">}</span>\n\n<span class=\"o\">+</span>\n   <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">link</span><span class=\"p\">)</span>\n   <span class=\"p\">{</span>\n     <span class=\"n\">ROS_FATAL</span><span class=\"p\">(</span><span class=\"s\">&quot;GazeboRosGps plugin error: bodyName: %s does not exist</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">link_name_</span><span class=\"p\">.</span><span class=\"n\">c_str</span><span class=\"p\">());</span>\n     <span class=\"k\">return</span><span class=\"p\">;</span>\n   <span class=\"p\">}</span>\n\n<span class=\"o\">+</span>\n<span class=\"o\">+</span>    <span class=\"k\">for</span><span class=\"p\">(</span><span class=\"k\">auto</span> <span class=\"nl\">link</span> <span class=\"p\">:</span> <span class=\"n\">_model</span><span class=\"o\">-&gt;</span><span class=\"n\">GetLinks</span><span class=\"p\">())</span>\n<span class=\"o\">+</span>    <span class=\"p\">{</span>\n<span class=\"o\">+</span>      <span class=\"n\">ROS_ERROR_STREAM</span><span class=\"p\">(</span><span class=\"s\">&quot;Link &quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">link</span><span class=\"o\">-&gt;</span><span class=\"n\">GetName</span><span class=\"p\">()</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot; Pose &quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">link</span><span class=\"o\">-&gt;</span><span class=\"n\">RelativePose</span><span class=\"p\">());</span>\n<span class=\"o\">+</span>    <span class=\"p\">}</span>\n<span class=\"o\">+</span>\n<span class=\"o\">+</span>\n<span class=\"o\">+</span>\n   <span class=\"c1\">// default parameters</span>\n   <span class=\"n\">frame_id_</span> <span class=\"o\">=</span> <span class=\"s\">&quot;/world&quot;</span><span class=\"p\">;</span>\n   <span class=\"n\">fix_topic_</span> <span class=\"o\">=</span> <span class=\"s\">&quot;fix&quot;</span><span class=\"p\">;</span>\n</pre></div>\n\n\n<p>This produces:</p>\n<div class=\"codehilite\"><pre><span></span>[ERROR] [1573845827.616271176, 0.001000000]: Measuring GPS relative to base_link\n[ERROR] [1573845827.616431306, 0.001000000]: Link base_link Pose 0 0 0 0 -0 0\n</pre></div>\n\n\n<p>Indicating that hector_gazebo actually processes the sensors relative to base_link, but reports them at the sensor link.</p>\n<p>\u200c</p>\n<p><strong>Mitigiation</strong></p>\n<p>As a hack, Team UF runs our URDF through a script to set the gps / imu links to have a pose of zero so transforms work correctly when published by robot_state_publisher. Others will have to change the hard coded joint names to their own.</p>\n<div class=\"codehilite language-python2\"><pre><span></span><span class=\"ch\">#!/usr/bin/python2</span>\n<span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"sd\">Fixes an URDF file which uses hector_gazebo_plugins for gps/imu.</span>\n<span class=\"sd\">Beacause gazebo_ros&#39;s URDF-&gt;SDF blindly replaces link name strings with base_link, thus</span>\n<span class=\"sd\">making the imu/gps plugins measure from base_link but report a different link.</span>\n<span class=\"sd\">This fixes the urdf to have these sensors also be at baselink so transforms work correctly.</span>\n<span class=\"sd\">Note: currently hardcoded for VRX purposes. Simply change the strings to work more genericly.</span>\n<span class=\"sd\">&#39;&#39;&#39;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">print_function</span>\n<span class=\"kn\">import</span> <span class=\"nn\">xml.etree.ElementTree</span> <span class=\"kn\">as</span> <span class=\"nn\">ET</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">set_joint_origin_to_zero</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n    <span class=\"n\">tag</span> <span class=\"o\">=</span> <span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;*[@name=&#39;{}&#39;]&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">))</span>\n    <span class=\"n\">origin</span> <span class=\"o\">=</span> <span class=\"n\">tag</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;origin&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">origin</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">&#39;rpy&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;0 0 0&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">origin</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">&#39;xyz&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;0 0 0&#39;</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">fix_gps</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">):</span>\n    <span class=\"n\">set_joint_origin_to_zero</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"s1\">&#39;gps_wamv_joint&#39;</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">fix_imu</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">):</span>\n    <span class=\"n\">set_joint_origin_to_zero</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"s1\">&#39;imu_wamv_joint&#39;</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">fix_file</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">):</span>\n    <span class=\"n\">tree</span> <span class=\"o\">=</span> <span class=\"n\">ET</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">)</span>\n    <span class=\"n\">root</span> <span class=\"o\">=</span> <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">getroot</span><span class=\"p\">()</span>\n    <span class=\"n\">fix_gps</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">)</span>\n    <span class=\"n\">fix_imu</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">)</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">ET</span><span class=\"o\">.</span><span class=\"n\">tostring</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">))</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"n\">fix_file</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>                             \n</pre></div>\n\n\n<p>\u200c</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-11-15T19:26:57.325801+00:00", "milestone": null, "updated_on": "2020-04-10T03:10:20.287361+00:00", "type": "issue", "id": 188}