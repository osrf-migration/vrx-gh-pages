{"links": {"self": {"href": "data/repositories/osrf/vrx/issues/137/comments/53878317.json"}, "html": {"href": "#!/osrf/vrx/issues/137#comment-53878317"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/137.json"}}, "type": "issue", "id": 137, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Consider differences in heading sensor plugin options: IMU and GPS-based"}, "content": {"raw": "Thanks for the help! I was able to get the transformation to work using the second method you described.  Here are the steps I took in case anyone else wants to transform velocity from the gps into body coordinates.\n\n1. get the NWU from the fix velocity topic\n2. transform the vector into ENU: \\[vx, vy, vz\\] ENU = \\[-1 \\* vy, vx, vz\\] NWU\n3. get the quaternion from the imu data topic\n4. make the quaternion into an inverse quaternion using the quaternion\\_inverse function from the tf library\n5. create a TransformationStamped\\(\\) message and set the rotation part to the inverse quaternion calculated in step 4\n6. finally, get the transformed velocity vector using the do\\_transform\\_vector3 function from the tf2\\_geometry\\_msgs library and passing in \\[vx, vy, nz\\] ENU \\(step 2\\) and the TransformationStamped\\(\\) message \\(step 5\\) as arguments.", "markup": "markdown", "html": "<p>Thanks for the help! I was able to get the transformation to work using the second method you described.  Here are the steps I took in case anyone else wants to transform velocity from the gps into body coordinates.</p>\n<ol>\n<li>get the NWU from the fix velocity topic</li>\n<li>transform the vector into ENU: [vx, vy, vz] ENU = [-1 * vy, vx, vz] NWU</li>\n<li>get the quaternion from the imu data topic</li>\n<li>make the quaternion into an inverse quaternion using the quaternion_inverse function from the tf library</li>\n<li>create a TransformationStamped() message and set the rotation part to the inverse quaternion calculated in step 4</li>\n<li>finally, get the transformed velocity vector using the do_transform_vector3 function from the tf2_geometry_msgs library and passing in [vx, vy, nz] ENU (step 2) and the TransformationStamped() message (step 5) as arguments.</li>\n</ol>", "type": "rendered"}, "created_on": "2019-09-12T14:10:40.101650+00:00", "user": {"display_name": "Rahul Rameshbabu", "uuid": "{56ca272e-3a85-4005-ab7d-9c9b35da64be}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B56ca272e-3a85-4005-ab7d-9c9b35da64be%7D"}, "html": {"href": "https://bitbucket.org/%7B56ca272e-3a85-4005-ab7d-9c9b35da64be%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/3713a227f077029072fa3a4cc7803af0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRR-1.png"}}, "nickname": "Rahul Rameshbabu", "type": "user", "account_id": "5d7667778b0e290c45a9f8a6"}, "updated_on": null, "type": "issue_comment", "id": 53878317}