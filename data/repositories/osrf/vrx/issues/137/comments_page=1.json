{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/vrx/issues/137/comments/52964319.json"}, "html": {"href": "#!/osrf/vrx/issues/137#comment-52964319"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/137.json"}}, "type": "issue", "id": 137, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Consider differences in heading sensor plugin options: IMU and GPS-based"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2019-07-12T18:09:09.442326+00:00", "user": {"display_name": "Marshall Rawson", "uuid": "{e6f8e5b5-5261-44d3-b2d4-092469c4157a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D"}, "html": {"href": "https://bitbucket.org/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bd54845fa0ad1be5a529eb87d738f221d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMR-4.png"}}, "nickname": "MarshallRawson", "type": "user", "account_id": "5ce2e28709c5fa0fd9fb0c6c"}, "updated_on": null, "type": "issue_comment", "id": 52964319}, {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/137/comments/52965691.json"}, "html": {"href": "#!/osrf/vrx/issues/137#comment-52965691"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/137.json"}}, "type": "issue", "id": 137, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Consider differences in heading sensor plugin options: IMU and GPS-based"}, "content": {"raw": "I believe I have found the point of contention concerning the heading.\n\nThe nmea plugin publishes GPHDT message, which gives heading in nautical degrees \\(with noise\\).\n\nThe hector plugin publishes a quaternian with noise.\n\nThe in order to achieve the same interface with hector as the nmea, the team should:\n\nconvert from quat to euler angles \\(Vector3\\)\n\noffset to match nautical standard\n\n\\(see lines 377 -379 [https://github.com/OUXT-Polaris/nmea\\_gps\\_plugin/blob/master/src/nmea\\_gps\\_plugin.cpp](https://github.com/OUXT-Polaris/nmea_gps_plugin/blob/master/src/nmea_gps_plugin.cpp)\\)\n\nconvert rotation around the z \\(in radians\\) to degrees\n\n\\(see lines 269 to 274 [https://github.com/OUXT-Polaris/nmea\\_gps\\_plugin/blob/master/src/nmea\\_gps\\_plugin.cpp](https://github.com/OUXT-Polaris/nmea_gps_plugin/blob/master/src/nmea_gps_plugin.cpp)\\)", "markup": "markdown", "html": "<p>I believe I have found the point of contention concerning the heading.</p>\n<p>The nmea plugin publishes GPHDT message, which gives heading in nautical degrees (with noise).</p>\n<p>The hector plugin publishes a quaternian with noise.</p>\n<p>The in order to achieve the same interface with hector as the nmea, the team should:</p>\n<p>convert from quat to euler angles (Vector3)</p>\n<p>offset to match nautical standard</p>\n<p>(see lines 377 -379 <a data-is-external-link=\"true\" href=\"https://github.com/OUXT-Polaris/nmea_gps_plugin/blob/master/src/nmea_gps_plugin.cpp\" rel=\"nofollow\">https://github.com/OUXT-Polaris/nmea_gps_plugin/blob/master/src/nmea_gps_plugin.cpp</a>)</p>\n<p>convert rotation around the z (in radians) to degrees</p>\n<p>(see lines 269 to 274 <a data-is-external-link=\"true\" href=\"https://github.com/OUXT-Polaris/nmea_gps_plugin/blob/master/src/nmea_gps_plugin.cpp\" rel=\"nofollow\">https://github.com/OUXT-Polaris/nmea_gps_plugin/blob/master/src/nmea_gps_plugin.cpp</a>)</p>", "type": "rendered"}, "created_on": "2019-07-12T20:47:44.421632+00:00", "user": {"display_name": "Marshall Rawson", "uuid": "{e6f8e5b5-5261-44d3-b2d4-092469c4157a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D"}, "html": {"href": "https://bitbucket.org/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bd54845fa0ad1be5a529eb87d738f221d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMR-4.png"}}, "nickname": "MarshallRawson", "type": "user", "account_id": "5ce2e28709c5fa0fd9fb0c6c"}, "updated_on": "2019-07-12T20:51:00.024080+00:00", "type": "issue_comment", "id": 52965691}, {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/137/comments/53025456.json"}, "html": {"href": "#!/osrf/vrx/issues/137#comment-53025456"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/137.json"}}, "type": "issue", "id": 137, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Consider differences in heading sensor plugin options: IMU and GPS-based"}, "content": {"raw": "@**Marshall Rawson**\n\nIn the nmea\\_gps\\_plugin publish a nmea\\_sentence topic.\n\nThis format is a standard message format of the GPS sensor.\n\nSo, I think it is better to use nmea\\_sentence.", "markup": "markdown", "html": "<p>@<strong>Marshall Rawson</strong></p>\n<p>In the nmea_gps_plugin publish a nmea_sentence topic.</p>\n<p>This format is a standard message format of the GPS sensor.</p>\n<p>So, I think it is better to use nmea_sentence.</p>", "type": "rendered"}, "created_on": "2019-07-17T13:02:48.126887+00:00", "user": {"display_name": "Masaya Kataoka", "uuid": "{fd49a92b-7bd6-4ce7-b2c9-3c8d9f9a2835}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bfd49a92b-7bd6-4ce7-b2c9-3c8d9f9a2835%7D"}, "html": {"href": "https://bitbucket.org/%7Bfd49a92b-7bd6-4ce7-b2c9-3c8d9f9a2835%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:7faacef1-5834-4456-8b00-1aff6177afba/5297a07f-7bd3-45f2-8630-29f7bef23516/128"}}, "nickname": "hakuturu583", "type": "user", "account_id": "557058:7faacef1-5834-4456-8b00-1aff6177afba"}, "updated_on": null, "type": "issue_comment", "id": 53025456}, {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/137/comments/53029483.json"}, "html": {"href": "#!/osrf/vrx/issues/137#comment-53029483"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/137.json"}}, "type": "issue", "id": 137, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Consider differences in heading sensor plugin options: IMU and GPS-based"}, "content": {"raw": "Thank you both for looking into this.  Here is what I understand are the potential differences between the two methods for simulating a heading estimate:\n\n1. Coordinate frames:  As @{5ce2e28709c5fa0fd9fb0c6c} describes\u2026.\n\n    1. hector\\_gazebo\\_imu provides the orientation as a quaternion following [REP 103](#!/osrf/vrx/wiki/documentation)\n    2. nmea\\_gps\\_plugin provides compass heading - degrees, NED\n    \n2. Interface:\n\n    1. hector\\_gazebo\\_imu simulates a heading sensor at the ROS API layer by publishing  a sensor\\_msgs::Imu message\n    2. nmea\\_gps\\_plugin simulates a heading sensor at the sensor interface layer by publishing nmea\\_msgs::Sentence message\n    \n3. Models:  My impression is that both plugins are reporting true geographic heading \\(not magnetic heading\\) and are using equivalent Gaussian additive noise models to generate noisy heading measurements.\n\nPlease add any other issues that might be worth discussing.  \n\nHere is my opinion on the issues above:\n\n1. Coordinate frames are a convention.  The main thing is to make sure it is well documented.  Teams should be able to efficiently move between representations and frames.  I don\u2019t see this as a fundamental issue between the two.   The hector\\_gazebo\\_imu interface is certainly more in-line with the ROS conventions.\n2. Interface: Gazebo sensor plugins \\(at least for VRX\\) typically simulate the sensor information at the ROS API layer.    This makes things much more generalizable.  For example, the lidar data is simulated as point cloud ROS messages instead of publishing Ethernet packets.  While NMEA is a very standard serial sensor interface, we don\u2019t simulate the raw data from other sensors.  The hector\\_gazebo\\_imu interface is consistent with the other sensors and actuators in the VRX simulation.\n3. Models: Have we verified that the simulation of heading sensor measurements is equivalent in both scenarios?", "markup": "markdown", "html": "<p>Thank you both for looking into this.  Here is what I understand are the potential differences between the two methods for simulating a heading estimate:</p>\n<ol>\n<li>\n<p>Coordinate frames:  As <span class=\"ap-mention\" data-atlassian-id=\"5ce2e28709c5fa0fd9fb0c6c\">@Marshall Rawson</span> describes\u2026.</p>\n<ol>\n<li>hector_gazebo_imu provides the orientation as a quaternion following <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/wiki/documentation\" rel=\"nofollow\">REP 103</a></li>\n<li>nmea_gps_plugin provides compass heading - degrees, NED</li>\n</ol>\n</li>\n<li>\n<p>Interface:</p>\n<ol>\n<li>hector_gazebo_imu simulates a heading sensor at the ROS API layer by publishing  a sensor_msgs::Imu message</li>\n<li>nmea_gps_plugin simulates a heading sensor at the sensor interface layer by publishing nmea_msgs::Sentence message</li>\n</ol>\n</li>\n<li>\n<p>Models:  My impression is that both plugins are reporting true geographic heading (not magnetic heading) and are using equivalent Gaussian additive noise models to generate noisy heading measurements.</p>\n</li>\n</ol>\n<p>Please add any other issues that might be worth discussing.  </p>\n<p>Here is my opinion on the issues above:</p>\n<ol>\n<li>Coordinate frames are a convention.  The main thing is to make sure it is well documented.  Teams should be able to efficiently move between representations and frames.  I don\u2019t see this as a fundamental issue between the two.   The hector_gazebo_imu interface is certainly more in-line with the ROS conventions.</li>\n<li>Interface: Gazebo sensor plugins (at least for VRX) typically simulate the sensor information at the ROS API layer.    This makes things much more generalizable.  For example, the lidar data is simulated as point cloud ROS messages instead of publishing Ethernet packets.  While NMEA is a very standard serial sensor interface, we don\u2019t simulate the raw data from other sensors.  The hector_gazebo_imu interface is consistent with the other sensors and actuators in the VRX simulation.</li>\n<li>Models: Have we verified that the simulation of heading sensor measurements is equivalent in both scenarios?</li>\n</ol>", "type": "rendered"}, "created_on": "2019-07-17T17:57:54.405280+00:00", "user": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "updated_on": null, "type": "issue_comment", "id": 53029483}, {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/137/comments/53032037.json"}, "html": {"href": "#!/osrf/vrx/issues/137#comment-53032037"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/137.json"}}, "type": "issue", "id": 137, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Consider differences in heading sensor plugin options: IMU and GPS-based"}, "content": {"raw": "I believe the main difference in noise is that the imu simulates accumulating errors and drift based on a Gaussian distribution specified in the sdf and publishes the error as covariance in the imu message while the nmea simply applies a Gaussian distribution\\(also specified in sdf\\) on the ground truth pose, velocity, and orientation each independently before publishing.", "markup": "markdown", "html": "<p>I believe the main difference in noise is that the imu simulates accumulating errors and drift based on a Gaussian distribution specified in the sdf and publishes the error as covariance in the imu message while the nmea simply applies a Gaussian distribution(also specified in sdf) on the ground truth pose, velocity, and orientation each independently before publishing.</p>", "type": "rendered"}, "created_on": "2019-07-17T23:01:51.935312+00:00", "user": {"display_name": "Marshall Rawson", "uuid": "{e6f8e5b5-5261-44d3-b2d4-092469c4157a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D"}, "html": {"href": "https://bitbucket.org/%7Be6f8e5b5-5261-44d3-b2d4-092469c4157a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/bd54845fa0ad1be5a529eb87d738f221d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMR-4.png"}}, "nickname": "MarshallRawson", "type": "user", "account_id": "5ce2e28709c5fa0fd9fb0c6c"}, "updated_on": null, "type": "issue_comment", "id": 53032037}, {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/137/comments/53032566.json"}, "html": {"href": "#!/osrf/vrx/issues/137#comment-53032566"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/137.json"}}, "type": "issue", "id": 137, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Consider differences in heading sensor plugin options: IMU and GPS-based"}, "content": {"raw": "@**Marshall Rawson**\n\nIMU and GPS noise model is completely different, so I think hector gazebo plugin is not a good simulation for GPS.\n\nGPS often publishes a wrong position suddenly, I think this problem cannot be simulated with hector gazebo, because they are use same noise model for IMU and GPS.\n\nMy plugin is now just add a Gausian noise but designed to add another noise model very very easily.", "markup": "markdown", "html": "<p>@<strong>Marshall Rawson</strong></p>\n<p>IMU and GPS noise model is completely different, so I think hector gazebo plugin is not a good simulation for GPS.</p>\n<p>GPS often publishes a wrong position suddenly, I think this problem cannot be simulated with hector gazebo, because they are use same noise model for IMU and GPS.</p>\n<p>My plugin is now just add a Gausian noise but designed to add another noise model very very easily.</p>", "type": "rendered"}, "created_on": "2019-07-18T00:35:27.369169+00:00", "user": {"display_name": "Masaya Kataoka", "uuid": "{fd49a92b-7bd6-4ce7-b2c9-3c8d9f9a2835}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bfd49a92b-7bd6-4ce7-b2c9-3c8d9f9a2835%7D"}, "html": {"href": "https://bitbucket.org/%7Bfd49a92b-7bd6-4ce7-b2c9-3c8d9f9a2835%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:7faacef1-5834-4456-8b00-1aff6177afba/5297a07f-7bd3-45f2-8630-29f7bef23516/128"}}, "nickname": "hakuturu583", "type": "user", "account_id": "557058:7faacef1-5834-4456-8b00-1aff6177afba"}, "updated_on": null, "type": "issue_comment", "id": 53032566}, {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/137/comments/53820828.json"}, "html": {"href": "#!/osrf/vrx/issues/137#comment-53820828"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/137.json"}}, "type": "issue", "id": 137, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Consider differences in heading sensor plugin options: IMU and GPS-based"}, "content": {"raw": "Hi guys. I had some questions regarding the velocity coordinate frame and the heading coordinate frame published by the GPS and GPS-aided IMU with regard to calculating the surge \\(longitudinal\\) and sway \\(lateral\\) velocity in the WAMV body frame. Would these be the steps to do it?\n\n1. get vel\\_y\\_fix from fix velocity topic\n2. vel\\_x = -1\\* vel\\_y\\_fix  \\(this is from issue #64: [#!/osrf/vrx/issues/64/possible-frame-error-in-simulated-gps](#!/osrf/vrx/issues/64/possible-frame-error-in-simulated-gps)\\)\n3. calculate yaw from IMU quaternion from imu data topic\n4. multiply vel\\_x  by cosine of the yaw angle to get surge\\(longitudinal\\) velocity in the body frame \n5. multiply vel\\_x by sin of the yaw angle to get sway\\(lateral\\) velocity in the body frame\n\nCan you please let me know if there are any errors in my calculation or if there is a better way to get velocities in the body frame from the current VRX setup?", "markup": "markdown", "html": "<p>Hi guys. I had some questions regarding the velocity coordinate frame and the heading coordinate frame published by the GPS and GPS-aided IMU with regard to calculating the surge (longitudinal) and sway (lateral) velocity in the WAMV body frame. Would these be the steps to do it?</p>\n<ol>\n<li>get vel_y_fix from fix velocity topic</li>\n<li>vel_x = -1* vel_y_fix  (this is from issue <a href=\"#!/osrf/vrx/issues/64/possible-frame-error-in-simulated-gps\" rel=\"nofollow\" title=\"Possible frame error in simulated GPS velocity generation\" class=\"ap-connect-link\"><s>#64</s></a>: <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/issues/64/possible-frame-error-in-simulated-gps\" rel=\"nofollow\">#!/osrf/vrx/issues/64/possible-frame-error-in-simulated-gps</a>)</li>\n<li>calculate yaw from IMU quaternion from imu data topic</li>\n<li>multiply vel_x  by cosine of the yaw angle to get surge(longitudinal) velocity in the body frame </li>\n<li>multiply vel_x by sin of the yaw angle to get sway(lateral) velocity in the body frame</li>\n</ol>\n<p>Can you please let me know if there are any errors in my calculation or if there is a better way to get velocities in the body frame from the current VRX setup?</p>", "type": "rendered"}, "created_on": "2019-09-09T15:29:25.742385+00:00", "user": {"display_name": "Rahul Rameshbabu", "uuid": "{56ca272e-3a85-4005-ab7d-9c9b35da64be}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B56ca272e-3a85-4005-ab7d-9c9b35da64be%7D"}, "html": {"href": "https://bitbucket.org/%7B56ca272e-3a85-4005-ab7d-9c9b35da64be%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/3713a227f077029072fa3a4cc7803af0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRR-1.png"}}, "nickname": "Rahul Rameshbabu", "type": "user", "account_id": "5d7667778b0e290c45a9f8a6"}, "updated_on": null, "type": "issue_comment", "id": 53820828}, {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/137/comments/53826354.json"}, "html": {"href": "#!/osrf/vrx/issues/137#comment-53826354"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/137.json"}}, "type": "issue", "id": 137, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Consider differences in heading sensor plugin options: IMU and GPS-based"}, "content": {"raw": "I believe the key thing to make sure we have the documentation on the various frames correct.\n\n* As discussed in [Issue #64](#!/osrf/vrx/issues/64/possible-frame-error-in-simulated-gps), the hector\\_gazebo\\_ros\\_gps plugin provides an estimate of velocity in NWU coordinates.  This can be a little confusing because it doesn\u2019t follow [REP 105](https://www.ros.org/reps/rep-0105.html#map) for Map Conventions.\n\n    * I believe in steps 1 and 2 of your approach you are trying to express this velocity vector in ENU coordinates.\n    \n* The estimate of orientation provided by the hector\\_gazebo\\_ros\\_imu plugin is provided as a quaternion in ENU coordiantes.\n\nOnce you have this all consistent there are at least a couple of ways to calculate the velocity in body-frame coordinates.\n\n1. The method you describe is to determine the yaw angle and then do a 2D transformation \\(rotation\\) of the velocity vector.  However, you are only including one part of the velocity: vel\\_x in your notation and leaving out vel\\_y.  I would recommend looking at the 2D rotation matrix as a function of yaw angle.\n2. If you want to be more general, you might consider using the full 3D velocity vector and the full quaternion to transform \\(rotate\\) the velocity vector into the 3D body frame.  There are many tools to help do this - for example in ROS the tf2 package provides this functionality [http://wiki.ros.org/tf2/Tutorials/Quaternions#Applying\\_a\\_quaternion\\_rotation](http://wiki.ros.org/tf2/Tutorials/Quaternions#Applying_a_quaternion_rotation)\n\nA good test is to simply move around the simulated WAM-V and print out or plot the body-frame velocities to verify the results agree with the visual \\(driving forward, the surge velocity should be positive and dominate, etc.\\).  This should highlight most mistakes with coordinate frames, sign errors, etc.", "markup": "markdown", "html": "<p>I believe the key thing to make sure we have the documentation on the various frames correct.</p>\n<ul>\n<li>\n<p>As discussed in <a data-is-external-link=\"true\" href=\"#!/osrf/vrx/issues/64/possible-frame-error-in-simulated-gps\" rel=\"nofollow\">Issue #64</a>, the hector_gazebo_ros_gps plugin provides an estimate of velocity in NWU coordinates.  This can be a little confusing because it doesn\u2019t follow <a data-is-external-link=\"true\" href=\"https://www.ros.org/reps/rep-0105.html#map\" rel=\"nofollow\">REP 105</a> for Map Conventions.</p>\n<ul>\n<li>I believe in steps 1 and 2 of your approach you are trying to express this velocity vector in ENU coordinates.</li>\n</ul>\n</li>\n<li>\n<p>The estimate of orientation provided by the hector_gazebo_ros_imu plugin is provided as a quaternion in ENU coordiantes.</p>\n</li>\n</ul>\n<p>Once you have this all consistent there are at least a couple of ways to calculate the velocity in body-frame coordinates.</p>\n<ol>\n<li>The method you describe is to determine the yaw angle and then do a 2D transformation (rotation) of the velocity vector.  However, you are only including one part of the velocity: vel_x in your notation and leaving out vel_y.  I would recommend looking at the 2D rotation matrix as a function of yaw angle.</li>\n<li>If you want to be more general, you might consider using the full 3D velocity vector and the full quaternion to transform (rotate) the velocity vector into the 3D body frame.  There are many tools to help do this - for example in ROS the tf2 package provides this functionality <a data-is-external-link=\"true\" href=\"http://wiki.ros.org/tf2/Tutorials/Quaternions#Applying_a_quaternion_rotation\" rel=\"nofollow\">http://wiki.ros.org/tf2/Tutorials/Quaternions#Applying_a_quaternion_rotation</a></li>\n</ol>\n<p>A good test is to simply move around the simulated WAM-V and print out or plot the body-frame velocities to verify the results agree with the visual (driving forward, the surge velocity should be positive and dominate, etc.).  This should highlight most mistakes with coordinate frames, sign errors, etc.</p>", "type": "rendered"}, "created_on": "2019-09-09T23:54:37.249009+00:00", "user": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "updated_on": null, "type": "issue_comment", "id": 53826354}, {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/137/comments/53878317.json"}, "html": {"href": "#!/osrf/vrx/issues/137#comment-53878317"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/137.json"}}, "type": "issue", "id": 137, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Consider differences in heading sensor plugin options: IMU and GPS-based"}, "content": {"raw": "Thanks for the help! I was able to get the transformation to work using the second method you described.  Here are the steps I took in case anyone else wants to transform velocity from the gps into body coordinates.\n\n1. get the NWU from the fix velocity topic\n2. transform the vector into ENU: \\[vx, vy, vz\\] ENU = \\[-1 \\* vy, vx, vz\\] NWU\n3. get the quaternion from the imu data topic\n4. make the quaternion into an inverse quaternion using the quaternion\\_inverse function from the tf library\n5. create a TransformationStamped\\(\\) message and set the rotation part to the inverse quaternion calculated in step 4\n6. finally, get the transformed velocity vector using the do\\_transform\\_vector3 function from the tf2\\_geometry\\_msgs library and passing in \\[vx, vy, nz\\] ENU \\(step 2\\) and the TransformationStamped\\(\\) message \\(step 5\\) as arguments.", "markup": "markdown", "html": "<p>Thanks for the help! I was able to get the transformation to work using the second method you described.  Here are the steps I took in case anyone else wants to transform velocity from the gps into body coordinates.</p>\n<ol>\n<li>get the NWU from the fix velocity topic</li>\n<li>transform the vector into ENU: [vx, vy, vz] ENU = [-1 * vy, vx, vz] NWU</li>\n<li>get the quaternion from the imu data topic</li>\n<li>make the quaternion into an inverse quaternion using the quaternion_inverse function from the tf library</li>\n<li>create a TransformationStamped() message and set the rotation part to the inverse quaternion calculated in step 4</li>\n<li>finally, get the transformed velocity vector using the do_transform_vector3 function from the tf2_geometry_msgs library and passing in [vx, vy, nz] ENU (step 2) and the TransformationStamped() message (step 5) as arguments.</li>\n</ol>", "type": "rendered"}, "created_on": "2019-09-12T14:10:40.101650+00:00", "user": {"display_name": "Rahul Rameshbabu", "uuid": "{56ca272e-3a85-4005-ab7d-9c9b35da64be}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B56ca272e-3a85-4005-ab7d-9c9b35da64be%7D"}, "html": {"href": "https://bitbucket.org/%7B56ca272e-3a85-4005-ab7d-9c9b35da64be%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/3713a227f077029072fa3a4cc7803af0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRR-1.png"}}, "nickname": "Rahul Rameshbabu", "type": "user", "account_id": "5d7667778b0e290c45a9f8a6"}, "updated_on": null, "type": "issue_comment", "id": 53878317}, {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/137/comments/53880326.json"}, "html": {"href": "#!/osrf/vrx/issues/137#comment-53880326"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/137.json"}}, "type": "issue", "id": 137, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Consider differences in heading sensor plugin options: IMU and GPS-based"}, "content": {"raw": "That is great.   Thank you for posting the working method.  I imagine other folks will really appreciate the hints.", "markup": "markdown", "html": "<p>That is great.   Thank you for posting the working method.  I imagine other folks will really appreciate the hints.</p>", "type": "rendered"}, "created_on": "2019-09-12T15:41:01.641663+00:00", "user": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "updated_on": null, "type": "issue_comment", "id": 53880326}, {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/137/comments/53880332.json"}, "html": {"href": "#!/osrf/vrx/issues/137#comment-53880332"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/vrx/issues/137.json"}}, "type": "issue", "id": 137, "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx.json"}, "html": {"href": "#!/osrf/vrx"}, "avatar": {"href": "data/bytebucket.org/ravatar/{e278ca38-7edb-4e62-b785-46dff5617d98}ts=2274605"}}, "type": "repository", "name": "vrx", "full_name": "osrf/vrx", "uuid": "{e278ca38-7edb-4e62-b785-46dff5617d98}"}, "title": "Consider differences in heading sensor plugin options: IMU and GPS-based"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2019-09-12T15:41:16.296707+00:00", "user": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "updated_on": null, "type": "issue_comment", "id": 53880332}], "page": 1, "size": 11}