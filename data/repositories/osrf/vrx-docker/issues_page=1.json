{"pagelen": 100, "values": [{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx-docker.json"}, "html": {"href": "#!/osrf/vrx-docker"}, "avatar": {"href": "data/bytebucket.org/ravatar/{6aad36a4-6d9e-4aac-beef-5d3783a46826}ts=default"}}, "type": "repository", "name": "vrx-docker", "full_name": "osrf/vrx-docker", "uuid": "{6aad36a4-6d9e-4aac-beef-5d3783a46826}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx-docker/issues/1/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx-docker/issues/1.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/1/watch"}, "comments": {"href": "data/repositories/osrf/vrx-docker/issues/1/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx-docker/issues/1/gazebo-playback-missing-wam-v"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/1/vote"}}, "reporter": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "title": "Gazebo Playback Missing WAM-V", "component": null, "votes": 0, "watches": 1, "content": {"raw": "**Description**\r\n\r\nCurrently, the Gazebo simulation playback log files are being created and saved onto the host computer. The issue is that when these files are played, the WAM-V is not visible. It is still listed as one of the Models on the Gazebo GUI, but right-clicking > Move to moves to a location where the boat is not visible.\r\n\r\n**Instructions to Recreate**\r\n\r\n1. Move to `vrx-docker`\r\n2. Run `./prepare_team_wamv.bash example_team && ./prepare_task_trials.bash example_task && ./vrx_server/build_image.bash && ./run_trial.bash example_team example_task 0`\r\n3. Playback with `roslaunch vrx_gazebo playback.launch log_file:=/home/tylerlum/vrx-docker/logs/<recent date>/gazebo-server/log/<data>/state.log` <path to log file>", "markup": "markdown", "html": "<p><strong>Description</strong></p>\n<p>Currently, the Gazebo simulation playback log files are being created and saved onto the host computer. The issue is that when these files are played, the WAM-V is not visible. It is still listed as one of the Models on the Gazebo GUI, but right-clicking &gt; Move to moves to a location where the boat is not visible.</p>\n<p><strong>Instructions to Recreate</strong></p>\n<ol>\n<li>Move to <code>vrx-docker</code></li>\n<li>Run <code>./prepare_team_wamv.bash example_team &amp;&amp; ./prepare_task_trials.bash example_task &amp;&amp; ./vrx_server/build_image.bash &amp;&amp; ./run_trial.bash example_team example_task 0</code></li>\n<li>Playback with <code>roslaunch vrx_gazebo playback.launch log_file:=/home/tylerlum/vrx-docker/logs/&lt;recent date&gt;/gazebo-server/log/&lt;data&gt;/state.log</code> &lt;path to log file&gt;</li>\n</ol>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-07-09T22:47:44.668209+00:00", "milestone": null, "updated_on": "2019-07-31T21:09:29.424321+00:00", "type": "issue", "id": 1}, {"priority": "minor", "kind": "task", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx-docker.json"}, "html": {"href": "#!/osrf/vrx-docker"}, "avatar": {"href": "data/bytebucket.org/ravatar/{6aad36a4-6d9e-4aac-beef-5d3783a46826}ts=default"}}, "type": "repository", "name": "vrx-docker", "full_name": "osrf/vrx-docker", "uuid": "{6aad36a4-6d9e-4aac-beef-5d3783a46826}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx-docker/issues/2/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx-docker/issues/2.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/2/watch"}, "comments": {"href": "data/repositories/osrf/vrx-docker/issues/2/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx-docker/issues/2/decide-how-to-check-compliance-of-team"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/2/vote"}}, "reporter": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "title": "Decide How to Check Compliance of Team Configs", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently, the testing workflow is: \r\n\r\n1. Setup server image\r\n2. Build trial world files\r\n3. Build team urdf files\r\n4. Run all teams on all worlds\r\n\r\nIf teams fail the compliance tests in the build team urdf step, then what should we do? Manual checks? Booleans stored somewhere?", "markup": "markdown", "html": "<p>Currently, the testing workflow is: </p>\n<ol>\n<li>Setup server image</li>\n<li>Build trial world files</li>\n<li>Build team urdf files</li>\n<li>Run all teams on all worlds</li>\n</ol>\n<p>If teams fail the compliance tests in the build team urdf step, then what should we do? Manual checks? Booleans stored somewhere?</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-07-12T21:53:35.738336+00:00", "milestone": null, "updated_on": "2019-08-05T01:32:40.024633+00:00", "type": "issue", "id": 2}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx-docker.json"}, "html": {"href": "#!/osrf/vrx-docker"}, "avatar": {"href": "data/bytebucket.org/ravatar/{6aad36a4-6d9e-4aac-beef-5d3783a46826}ts=default"}}, "type": "repository", "name": "vrx-docker", "full_name": "osrf/vrx-docker", "uuid": "{6aad36a4-6d9e-4aac-beef-5d3783a46826}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx-docker/issues/3/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx-docker/issues/3.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/3/watch"}, "comments": {"href": "data/repositories/osrf/vrx-docker/issues/3/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx-docker/issues/3/gpu-ray-sensor-and-camera-sensor-not"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/3/vote"}}, "reporter": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "title": "GPU Ray Sensor and Camera Sensor Not Working", "component": null, "votes": 0, "watches": 1, "content": {"raw": "When running `./vrx_server/build_image.bash; ./prepare_team_wamv.bash example_team; ./prepare_task_trials.bash example_team; ./run_trial.bash example_team example_task 0`, the following error shows up. \r\n\r\n```\r\n[Err] [CameraSensor.cc:112] Unable to create CameraSensor. Rendering is disabled.\r\n[Err] [GpuRaySensor.cc:136] Unable to create GpuRaySensor. Rendering is disabled.\r\n```\r\n\r\nA possible solution to look into is [http://answers.gazebosim.org/question/8065/unable-to-create-depthcamerasensor-when-launching-in-remote-computer/](http://answers.gazebosim.org/question/8065/unable-to-create-depthcamerasensor-when-launching-in-remote-computer/). I believe it is not related to `gui:=false`, but the fact that it cannot render correctly from docker containers without a screen. This may be related to Issue#1, as this error may prevent the model from spawning.", "markup": "markdown", "html": "<p>When running <code>./vrx_server/build_image.bash; ./prepare_team_wamv.bash example_team; ./prepare_task_trials.bash example_team; ./run_trial.bash example_team example_task 0</code>, the following error shows up. </p>\n<div class=\"codehilite\"><pre><span></span>[Err] [CameraSensor.cc:112] Unable to create CameraSensor. Rendering is disabled.\n[Err] [GpuRaySensor.cc:136] Unable to create GpuRaySensor. Rendering is disabled.\n</pre></div>\n\n\n<p>A possible solution to look into is <a data-is-external-link=\"true\" href=\"http://answers.gazebosim.org/question/8065/unable-to-create-depthcamerasensor-when-launching-in-remote-computer/\" rel=\"nofollow\">http://answers.gazebosim.org/question/8065/unable-to-create-depthcamerasensor-when-launching-in-remote-computer/</a>. I believe it is not related to <code>gui:=false</code>, but the fact that it cannot render correctly from docker containers without a screen. This may be related to Issue<a href=\"#!/osrf/vrx-docker/issues/1/gazebo-playback-missing-wam-v\" rel=\"nofollow\" title=\"Gazebo Playback Missing WAM-V\" class=\"ap-connect-link\">#1</a>, as this error may prevent the model from spawning.</p>", "type": "rendered"}, "assignee": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-07-16T17:57:54.549872+00:00", "milestone": null, "updated_on": "2019-08-05T01:33:18.674095+00:00", "type": "issue", "id": 3}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx-docker.json"}, "html": {"href": "#!/osrf/vrx-docker"}, "avatar": {"href": "data/bytebucket.org/ravatar/{6aad36a4-6d9e-4aac-beef-5d3783a46826}ts=default"}}, "type": "repository", "name": "vrx-docker", "full_name": "osrf/vrx-docker", "uuid": "{6aad36a4-6d9e-4aac-beef-5d3783a46826}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx-docker/issues/4/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx-docker/issues/4.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/4/watch"}, "comments": {"href": "data/repositories/osrf/vrx-docker/issues/4/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx-docker/issues/4/finalize-how-to-log-command-output-for"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/4/vote"}}, "reporter": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "title": "Finalize how to log command output for multi-scripts", "component": null, "votes": 0, "watches": 1, "content": {"raw": "For multi-scripts, we want to store command outputs to a text file so that we can review the output and not be overwhelmed by the output of all scripts called. We should finalize how the output should be. \\(Use append to file, where it is stored, should it show errors to terminal still? should we have option to show all? also colored text looks bad in txt file currently\\)\r\n\r\nThis gives a good description of the options there are for logging command output. [https://askubuntu.com/questions/420981/how-do-i-save-terminal-output-to-a-file](https://askubuntu.com/questions/420981/how-do-i-save-terminal-output-to-a-file)", "markup": "markdown", "html": "<p>For multi-scripts, we want to store command outputs to a text file so that we can review the output and not be overwhelmed by the output of all scripts called. We should finalize how the output should be. (Use append to file, where it is stored, should it show errors to terminal still? should we have option to show all? also colored text looks bad in txt file currently)</p>\n<p>This gives a good description of the options there are for logging command output. <a data-is-external-link=\"true\" href=\"https://askubuntu.com/questions/420981/how-do-i-save-terminal-output-to-a-file\" rel=\"nofollow\">https://askubuntu.com/questions/420981/how-do-i-save-terminal-output-to-a-file</a></p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-07-16T18:16:13.718574+00:00", "milestone": null, "updated_on": "2019-07-16T19:13:28.667686+00:00", "type": "issue", "id": 4}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx-docker.json"}, "html": {"href": "#!/osrf/vrx-docker"}, "avatar": {"href": "data/bytebucket.org/ravatar/{6aad36a4-6d9e-4aac-beef-5d3783a46826}ts=default"}}, "type": "repository", "name": "vrx-docker", "full_name": "osrf/vrx-docker", "uuid": "{6aad36a4-6d9e-4aac-beef-5d3783a46826}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx-docker/issues/5/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx-docker/issues/5.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/5/watch"}, "comments": {"href": "data/repositories/osrf/vrx-docker/issues/5/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx-docker/issues/5/finalize-how-ros_hostname-and"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/5/vote"}}, "reporter": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "title": "Finalize how ROS_HOSTNAME and ROS_MASTER_URI and ROS_IP work", "component": null, "votes": 0, "watches": 1, "content": {"raw": "From [http://wiki.ros.org/ROS/Tutorials/MultipleMachines](http://wiki.ros.org/ROS/Tutorials/MultipleMachines), it looks like I should only be setting `ROS_IP` or `ROS_HOSTNAME`. For our case, which should we set? If hostname, does it matter what names I choose? If IP address, how do I choose an IP Address? Please read the section below to ensure that any changes made do not make the same issue that happened before. \\( Initially, when I started the server and competition containers, the competition could see the topics \\(\\`rostopic list\\` showed topics from the simulator\\), but if I published to /left\\_thrust\\_cmd from the competition container, the server container was not seeing it. Changing the ROS\\_MASTER\\_URIs made it work.\\)\r\n\r\n**Previous Steps taken to make it work**\r\n\r\nI am not super confident about how ROS\\_MASTER\\_URI, ROS\\_HOSTNAME, ROS\\_IP, and GAZEBO\\_IP work. I used [[https://answers.ros.org/question/228292/exposing-ros-containers-to-host-machine/](https://answers.ros.org/question/228292/exposing-ros-containers-to-host-machine/)](https://answers.ros.org/question/228292/exposing-ros-containers-to-host-machine) and [[https://answers.ros.org/question/298602/how-to-have-topics-publish-and-subscribe-both-ways-between-host-and-docker-container/](https://answers.ros.org/question/298602/how-to-have-topics-publish-and-subscribe-both-ways-between-host-and-docker-container/)](https://answers.ros.org/question/298602/how-to-have-topics-publish-and-subscribe-both-ways-between-host-and-docker-container) for reference. Initially, when I started the server and competition containers, the competition could see the topics \\(\\`rostopic list\\` showed topics from the simulator\\), but if I published to /left\\_thrust\\_cmd from the competition container, the server container was not seeing it. Changing the ROS\\_MASTER\\_URIs made it work.\r\n\r\n[http://wiki.ros.org/ROS/EnvironmentVariables](http://wiki.ros.org/ROS/EnvironmentVariables)\r\n\r\nROS\\_IP/ROS\\_HOSTNAME\r\n\r\n`ROS_IP` _and_ `ROS_HOSTNAME` _are optional environment variable that sets the declared network address of a ROS_ [_Node_](http://wiki.ros.org/Node) _or tool. The options are mutually exclusive, if both are set_ `ROS_HOSTNAME` _will take precedence. Use_ `ROS_IP` _if you are specifying an IP address, and_ `ROS_HOSTNAME` _if you are specifying a host name. When a ROS component reports a URI to the master or other components, this value will be used. This setting is only needed in situations where you have multiple addresses for a computer and need to force ROS to a particular one._\r\n\r\n_With the exception of 'localhost', it does not affect the actual bound address as ROS components bind to all available network interfaces. If the value is set to localhost, the ROS component will bind only to the loopback interface. This will prevent remote components from being able to talk to your local component._\r\n\r\n\u200c\r\n\r\n[http://wiki.ros.org/ROS/Tutorials/MultipleMachines](http://wiki.ros.org/ROS/Tutorials/MultipleMachines)\r\n\r\n_If something in the above sequence didn't work, the cause is likely in your network configuration. See_ [_ROS/NetworkSetup_](http://wiki.ros.org/ROS/NetworkSetup) _and_ [_ROS/Troubleshooting_](http://wiki.ros.org/ROS/Troubleshooting) _for configuration requirements and troubleshooting tips._\r\n\r\n_One common trap is the missing define of ROS\\_IP on the machine, where talker.py is running._\r\n\r\n_check it with: echo $ROS\\_IP_\r\n\r\n_If you dont't define ROS\\_IP, then rostopic info will show indeed the proper connections of publisher and listener, but rostopic echo will be empty. You will see no TX-traffic on LAN, on machine with talker. First, after defining ROS\\_IP with proper IP-address \\( export ROS\\_IP=machine\\_ip\\_addr\\) you will see trafic on LAN and the listener.py will show received data._\r\n\r\nIt looks like I should only be setting `ROS_IP` or `ROS_HOSTNAME`. For our case, which should we set? If hostname, does it matter what names I choose? If IP address, how do I choose an IP Address? I am still new to these network topics.", "markup": "markdown", "html": "<p>From <a data-is-external-link=\"true\" href=\"http://wiki.ros.org/ROS/Tutorials/MultipleMachines\" rel=\"nofollow\">http://wiki.ros.org/ROS/Tutorials/MultipleMachines</a>, it looks like I should only be setting <code>ROS_IP</code> or <code>ROS_HOSTNAME</code>. For our case, which should we set? If hostname, does it matter what names I choose? If IP address, how do I choose an IP Address? Please read the section below to ensure that any changes made do not make the same issue that happened before. ( Initially, when I started the server and competition containers, the competition could see the topics (`rostopic list` showed topics from the simulator), but if I published to /left_thrust_cmd from the competition container, the server container was not seeing it. Changing the ROS_MASTER_URIs made it work.)</p>\n<p><strong>Previous Steps taken to make it work</strong></p>\n<p>I am not super confident about how ROS_MASTER_URI, ROS_HOSTNAME, ROS_IP, and GAZEBO_IP work. I used <a data-is-external-link=\"true\" href=\"https://answers.ros.org/question/228292/exposing-ros-containers-to-host-machine\" rel=\"nofollow\">[https://answers.ros.org/question/228292/exposing-ros-containers-to-host-machine/](https://answers.ros.org/question/228292/exposing-ros-containers-to-host-machine/)</a> and <a data-is-external-link=\"true\" href=\"https://answers.ros.org/question/298602/how-to-have-topics-publish-and-subscribe-both-ways-between-host-and-docker-container\" rel=\"nofollow\">[https://answers.ros.org/question/298602/how-to-have-topics-publish-and-subscribe-both-ways-between-host-and-docker-container/](https://answers.ros.org/question/298602/how-to-have-topics-publish-and-subscribe-both-ways-between-host-and-docker-container/)</a> for reference. Initially, when I started the server and competition containers, the competition could see the topics (`rostopic list` showed topics from the simulator), but if I published to /left_thrust_cmd from the competition container, the server container was not seeing it. Changing the ROS_MASTER_URIs made it work.</p>\n<p><a data-is-external-link=\"true\" href=\"http://wiki.ros.org/ROS/EnvironmentVariables\" rel=\"nofollow\">http://wiki.ros.org/ROS/EnvironmentVariables</a></p>\n<p>ROS_IP/ROS_HOSTNAME</p>\n<p><code>ROS_IP</code> <em>and</em> <code>ROS_HOSTNAME</code> <em>are optional environment variable that sets the declared network address of a ROS</em> <a data-is-external-link=\"true\" href=\"http://wiki.ros.org/Node\" rel=\"nofollow\"><em>Node</em></a> <em>or tool. The options are mutually exclusive, if both are set</em> <code>ROS_HOSTNAME</code> <em>will take precedence. Use</em> <code>ROS_IP</code> <em>if you are specifying an IP address, and</em> <code>ROS_HOSTNAME</code> <em>if you are specifying a host name. When a ROS component reports a URI to the master or other components, this value will be used. This setting is only needed in situations where you have multiple addresses for a computer and need to force ROS to a particular one.</em></p>\n<p><em>With the exception of 'localhost', it does not affect the actual bound address as ROS components bind to all available network interfaces. If the value is set to localhost, the ROS component will bind only to the loopback interface. This will prevent remote components from being able to talk to your local component.</em></p>\n<p>\u200c</p>\n<p><a data-is-external-link=\"true\" href=\"http://wiki.ros.org/ROS/Tutorials/MultipleMachines\" rel=\"nofollow\">http://wiki.ros.org/ROS/Tutorials/MultipleMachines</a></p>\n<p><em>If something in the above sequence didn't work, the cause is likely in your network configuration. See</em> <a data-is-external-link=\"true\" href=\"http://wiki.ros.org/ROS/NetworkSetup\" rel=\"nofollow\"><em>ROS/NetworkSetup</em></a> <em>and</em> <a data-is-external-link=\"true\" href=\"http://wiki.ros.org/ROS/Troubleshooting\" rel=\"nofollow\"><em>ROS/Troubleshooting</em></a> <em>for configuration requirements and troubleshooting tips.</em></p>\n<p><em>One common trap is the missing define of ROS_IP on the machine, where talker.py is running.</em></p>\n<p><em>check it with: echo $ROS_IP</em></p>\n<p><em>If you dont't define ROS_IP, then rostopic info will show indeed the proper connections of publisher and listener, but rostopic echo will be empty. You will see no TX-traffic on LAN, on machine with talker. First, after defining ROS_IP with proper IP-address ( export ROS_IP=machine_ip_addr) you will see trafic on LAN and the listener.py will show received data.</em></p>\n<p>It looks like I should only be setting <code>ROS_IP</code> or <code>ROS_HOSTNAME</code>. For our case, which should we set? If hostname, does it matter what names I choose? If IP address, how do I choose an IP Address? I am still new to these network topics.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-07-16T18:50:10.276982+00:00", "milestone": null, "updated_on": "2019-08-05T01:34:08.690976+00:00", "type": "issue", "id": 5}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx-docker.json"}, "html": {"href": "#!/osrf/vrx-docker"}, "avatar": {"href": "data/bytebucket.org/ravatar/{6aad36a4-6d9e-4aac-beef-5d3783a46826}ts=default"}}, "type": "repository", "name": "vrx-docker", "full_name": "osrf/vrx-docker", "uuid": "{6aad36a4-6d9e-4aac-beef-5d3783a46826}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx-docker/issues/6/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx-docker/issues/6.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/6/watch"}, "comments": {"href": "data/repositories/osrf/vrx-docker/issues/6/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx-docker/issues/6/change-server-simulation-docker-image-to"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/6/vote"}}, "reporter": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "title": "Change Server Simulation Docker image to use branch of Gazebo with limited exposed topics", "component": null, "votes": 0, "watches": 1, "content": {"raw": "For competition purposes, we need to use a different branch of Gazebo ROS packages such that there will be limited exposure of topics that are not meant for competitors to use. This will involve updating the VRX server Dockerfile to use the custom gazebo\\_ros packages and to make a new branch of Gazebo based on the template given by ARIAC. We need to figure out which topics need to be removed and which should stay.\r\n\r\n\u200c\r\n\r\n**ARIAC**\r\n\r\n_The Gazebo server running in the ARIAC server container is configured to not accept communication from external clients such as the competitor container. A custom version of the Gazebo-ROS interface that runs in the ARIAC server container is used, which does not expose ROS interfaces that can be used to interface with the simulator. Only the ARIAC ROS interface is exposed._\r\n\r\n[https://github.com/osrf/ariac-docker/blob/master/ariac-server/ariac-server/Dockerfile](https://github.com/osrf/ariac-docker/blob/master/ariac-server/ariac-server/Dockerfile)\r\n\r\n[https://github.com/ros-simulation/gazebo\\_ros\\_pkgs/tree/ariac-network-kinetic](https://github.com/ros-simulation/gazebo_ros_pkgs/tree/ariac-network-kinetic)\r\n\r\n[https://github.com/ros-simulation/gazebo\\_ros\\_pkgs/tree/ariac-network-melodic](https://github.com/ros-simulation/gazebo_ros_pkgs/tree/ariac-network-melodic)", "markup": "markdown", "html": "<p>For competition purposes, we need to use a different branch of Gazebo ROS packages such that there will be limited exposure of topics that are not meant for competitors to use. This will involve updating the VRX server Dockerfile to use the custom gazebo_ros packages and to make a new branch of Gazebo based on the template given by ARIAC. We need to figure out which topics need to be removed and which should stay.</p>\n<p>\u200c</p>\n<p><strong>ARIAC</strong></p>\n<p><em>The Gazebo server running in the ARIAC server container is configured to not accept communication from external clients such as the competitor container. A custom version of the Gazebo-ROS interface that runs in the ARIAC server container is used, which does not expose ROS interfaces that can be used to interface with the simulator. Only the ARIAC ROS interface is exposed.</em></p>\n<p><a data-is-external-link=\"true\" href=\"https://github.com/osrf/ariac-docker/blob/master/ariac-server/ariac-server/Dockerfile\" rel=\"nofollow\">https://github.com/osrf/ariac-docker/blob/master/ariac-server/ariac-server/Dockerfile</a></p>\n<p><a data-is-external-link=\"true\" href=\"https://github.com/ros-simulation/gazebo_ros_pkgs/tree/ariac-network-kinetic\" rel=\"nofollow\">https://github.com/ros-simulation/gazebo_ros_pkgs/tree/ariac-network-kinetic</a></p>\n<p><a data-is-external-link=\"true\" href=\"https://github.com/ros-simulation/gazebo_ros_pkgs/tree/ariac-network-melodic\" rel=\"nofollow\">https://github.com/ros-simulation/gazebo_ros_pkgs/tree/ariac-network-melodic</a></p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-07-17T23:04:37.492457+00:00", "milestone": null, "updated_on": "2019-08-08T23:34:06.357561+00:00", "type": "issue", "id": 6}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx-docker.json"}, "html": {"href": "#!/osrf/vrx-docker"}, "avatar": {"href": "data/bytebucket.org/ravatar/{6aad36a4-6d9e-4aac-beef-5d3783a46826}ts=default"}}, "type": "repository", "name": "vrx-docker", "full_name": "osrf/vrx-docker", "uuid": "{6aad36a4-6d9e-4aac-beef-5d3783a46826}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx-docker/issues/7/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx-docker/issues/7.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/7/watch"}, "comments": {"href": "data/repositories/osrf/vrx-docker/issues/7/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx-docker/issues/7/figure-out-if-server-or-competitor-image"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/7/vote"}}, "reporter": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "title": "Figure out if Server or Competitor Image Starts First", "component": null, "votes": 0, "watches": 1, "content": {"raw": "As of right now, the simulation server container is created first before the competitor container, but we should figure out if this is the right approach\r\n\r\nPros of Server First\r\n\r\n* The server creates the ROS master, which should be created before the competitor\u2019s container is run to prevent error messages and possible errors in competitor container that prevents it from running correctly\r\n\r\nCons of Server First\r\n\r\n* If slow to start, competition might start before competitor container is created. This would mean the competitor would be at a disadvantage if their software starts too late. \\(should be okay with the ready time\\)\r\n\r\n\u200c\r\n\r\nPros of Client First\r\n\r\n* ARIAC had the competitor\u2019s container start first, likely to ensure that the competition didn\u2019t somehow start early before the competitor container had even been run\r\n\r\nCons of Client First\r\n\r\n* ROS Master not created, will have error message\r\n\r\n\u200c\r\n\r\nI believe that the ready time before the competition is long enough, but we should test it to be sure.\r\n\r\nThe important thing is to make sure that this ordering makes no impact on the competition.", "markup": "markdown", "html": "<p>As of right now, the simulation server container is created first before the competitor container, but we should figure out if this is the right approach</p>\n<p>Pros of Server First</p>\n<ul>\n<li>The server creates the ROS master, which should be created before the competitor\u2019s container is run to prevent error messages and possible errors in competitor container that prevents it from running correctly</li>\n</ul>\n<p>Cons of Server First</p>\n<ul>\n<li>If slow to start, competition might start before competitor container is created. This would mean the competitor would be at a disadvantage if their software starts too late. (should be okay with the ready time)</li>\n</ul>\n<p>\u200c</p>\n<p>Pros of Client First</p>\n<ul>\n<li>ARIAC had the competitor\u2019s container start first, likely to ensure that the competition didn\u2019t somehow start early before the competitor container had even been run</li>\n</ul>\n<p>Cons of Client First</p>\n<ul>\n<li>ROS Master not created, will have error message</li>\n</ul>\n<p>\u200c</p>\n<p>I believe that the ready time before the competition is long enough, but we should test it to be sure.</p>\n<p>The important thing is to make sure that this ordering makes no impact on the competition.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-07-22T17:13:19.091014+00:00", "milestone": null, "updated_on": "2019-08-05T01:35:35.149070+00:00", "type": "issue", "id": 7}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx-docker.json"}, "html": {"href": "#!/osrf/vrx-docker"}, "avatar": {"href": "data/bytebucket.org/ravatar/{6aad36a4-6d9e-4aac-beef-5d3783a46826}ts=default"}}, "type": "repository", "name": "vrx-docker", "full_name": "osrf/vrx-docker", "uuid": "{6aad36a4-6d9e-4aac-beef-5d3783a46826}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx-docker/issues/8/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx-docker/issues/8.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/8/watch"}, "comments": {"href": "data/repositories/osrf/vrx-docker/issues/8/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx-docker/issues/8/generate-video-gazebo-window-not-in-front"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/8/vote"}}, "reporter": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "title": "Generate Video Gazebo Window Not in Front", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently, the generate video script works, except that the Gazebo window is hidden in the background, rather than in the front as it needs to be. We should find a way to move it to foreground without human intervention.", "markup": "markdown", "html": "<p>Currently, the generate video script works, except that the Gazebo window is hidden in the background, rather than in the front as it needs to be. We should find a way to move it to foreground without human intervention.</p>", "type": "rendered"}, "assignee": {"display_name": "Tyler Lum", "uuid": "{305d9368-23ba-4f72-b1d4-7d17d2a062d8}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D"}, "html": {"href": "https://bitbucket.org/%7B305d9368-23ba-4f72-b1d4-7d17d2a062d8%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b96b66385af94340e7cabce/b8bb780f-62b7-47f8-9d03-ee65c7d17ad4/128"}}, "nickname": "tylerlum", "type": "user", "account_id": "5b96b66385af94340e7cabce"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-07-22T18:20:42.888996+00:00", "milestone": null, "updated_on": "2019-08-05T01:36:35.749580+00:00", "type": "issue", "id": 8}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx-docker.json"}, "html": {"href": "#!/osrf/vrx-docker"}, "avatar": {"href": "data/bytebucket.org/ravatar/{6aad36a4-6d9e-4aac-beef-5d3783a46826}ts=default"}}, "type": "repository", "name": "vrx-docker", "full_name": "osrf/vrx-docker", "uuid": "{6aad36a4-6d9e-4aac-beef-5d3783a46826}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx-docker/issues/9/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx-docker/issues/9.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/9/watch"}, "comments": {"href": "data/repositories/osrf/vrx-docker/issues/9/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx-docker/issues/9/infinite-loop-when-executing-run"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/9/vote"}}, "reporter": {"display_name": "Steven Liu", "uuid": "{70a3f7ee-cda4-4f67-af91-5b48afa6d011}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B70a3f7ee-cda4-4f67-af91-5b48afa6d011%7D"}, "html": {"href": "https://bitbucket.org/%7B70a3f7ee-cda4-4f67-af91-5b48afa6d011%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d7bb598b395e3656d5793c27f79ad8edd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSL-0.png"}}, "nickname": "acenturyandabit", "type": "user", "account_id": "5c9ecb16203e134514cf9d29"}, "title": "Infinite loop when executing run", "component": null, "votes": 0, "watches": 1, "content": {"raw": "After following the previous instructions and running run\\_trial.bash, the containers never finish. I see stdout from my container and `docker ps` verifies they are running.\r\n\r\nI am running on a non-nvidia device; but the containers have been running for 6 hours with no gazebo log file or rosbag file in sight.\r\n\r\n\u200c\r\n\r\nCan I have a hand?", "markup": "markdown", "html": "<p>After following the previous instructions and running run_trial.bash, the containers never finish. I see stdout from my container and <code>docker ps</code> verifies they are running.</p>\n<p>I am running on a non-nvidia device; but the containers have been running for 6 hours with no gazebo log file or rosbag file in sight.</p>\n<p>\u200c</p>\n<p>Can I have a hand?</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-09-20T01:22:55.098997+00:00", "milestone": null, "updated_on": "2019-10-07T00:38:47.356038+00:00", "type": "issue", "id": 9}, {"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx-docker.json"}, "html": {"href": "#!/osrf/vrx-docker"}, "avatar": {"href": "data/bytebucket.org/ravatar/{6aad36a4-6d9e-4aac-beef-5d3783a46826}ts=default"}}, "type": "repository", "name": "vrx-docker", "full_name": "osrf/vrx-docker", "uuid": "{6aad36a4-6d9e-4aac-beef-5d3783a46826}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx-docker/issues/10/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx-docker/issues/10.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/10/watch"}, "comments": {"href": "data/repositories/osrf/vrx-docker/issues/10/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx-docker/issues/10/station_keepingyaml-and-wayfindingyaml"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/10/vote"}}, "reporter": {"display_name": "Michael McCarrin", "uuid": "{3c3f500d-bbf6-472c-b8f7-627e5eabc226}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D"}, "html": {"href": "https://bitbucket.org/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a50abc93a3175f92c79e7521dfe089c0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "m1chaelm", "type": "user", "account_id": "5b2a9176467c9a09caa71ab1"}, "title": "station_keeping.yaml and wayfinding.yaml have the wrong number of steps", "component": null, "votes": 0, "watches": 1, "content": {"raw": "These files both have 1 step but 2 sequences. The second sequence gets ignored. This is a problem if people are reading these files as examples of how to write their own, since it is confusing.\r\n\r\nDo we intend to generate only one world, or should we increment the step number?", "markup": "markdown", "html": "<p>These files both have 1 step but 2 sequences. The second sequence gets ignored. This is a problem if people are reading these files as examples of how to write their own, since it is confusing.</p>\n<p>Do we intend to generate only one world, or should we increment the step number?</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-09-21T03:03:26.094171+00:00", "milestone": null, "updated_on": "2019-09-21T03:03:26.094171+00:00", "type": "issue", "id": 10}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx-docker.json"}, "html": {"href": "#!/osrf/vrx-docker"}, "avatar": {"href": "data/bytebucket.org/ravatar/{6aad36a4-6d9e-4aac-beef-5d3783a46826}ts=default"}}, "type": "repository", "name": "vrx-docker", "full_name": "osrf/vrx-docker", "uuid": "{6aad36a4-6d9e-4aac-beef-5d3783a46826}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx-docker/issues/11/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx-docker/issues/11.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/11/watch"}, "comments": {"href": "data/repositories/osrf/vrx-docker/issues/11/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx-docker/issues/11/oyaml-dependency"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/11/vote"}}, "reporter": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "title": "oyaml dependency", "component": null, "votes": 0, "watches": 1, "content": {"raw": "We discussed removing the oyaml dependency listed in [README.md](http://README.md)\r\n\r\n `pip install oyaml` - for generating wam-v and worlds\r\n\r\nI believe the default yaml library is sufficient and this avoids using pip, which we are not using in other parts of the project.", "markup": "markdown", "html": "<p>We discussed removing the oyaml dependency listed in <a data-is-external-link=\"true\" href=\"http://README.md\" rel=\"nofollow\">README.md</a></p>\n<p><code>pip install oyaml</code> - for generating wam-v and worlds</p>\n<p>I believe the default yaml library is sufficient and this avoids using pip, which we are not using in other parts of the project.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-10-04T18:09:31.171474+00:00", "milestone": null, "updated_on": "2019-10-04T18:09:31.171474+00:00", "type": "issue", "id": 11}, {"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx-docker.json"}, "html": {"href": "#!/osrf/vrx-docker"}, "avatar": {"href": "data/bytebucket.org/ravatar/{6aad36a4-6d9e-4aac-beef-5d3783a46826}ts=default"}}, "type": "repository", "name": "vrx-docker", "full_name": "osrf/vrx-docker", "uuid": "{6aad36a4-6d9e-4aac-beef-5d3783a46826}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx-docker/issues/12/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx-docker/issues/12.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/12/watch"}, "comments": {"href": "data/repositories/osrf/vrx-docker/issues/12/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx-docker/issues/12/modifications-to-example-team-docker-image"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/12/vote"}}, "reporter": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "title": "Modifications to example team docker image", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently the example docker image is under Tyler\u2019s account \\(see [#!/osrf/vrx-docker/src/default/team\\_config/example\\_team/dockerhub\\_image.txt](#!/osrf/vrx-docker/src/default/team_config/example_team/dockerhub_image.txt)\\)\r\n\r\n* Can we move this image to the OSRF account to better maintain?\r\n* Can we provide the Dockerfile used to build this docker container as a minimum working example?\r\n\r\n\u200c", "markup": "markdown", "html": "<p>Currently the example docker image is under Tyler\u2019s account (see <a data-is-external-link=\"true\" href=\"#!/osrf/vrx-docker/src/default/team_config/example_team/dockerhub_image.txt\" rel=\"nofollow\">#!/osrf/vrx-docker/src/default/team_config/example_team/dockerhub_image.txt</a>)</p>\n<ul>\n<li>Can we move this image to the OSRF account to better maintain?</li>\n<li>Can we provide the Dockerfile used to build this docker container as a minimum working example?</li>\n</ul>\n<p>\u200c</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-10-04T18:12:33.364946+00:00", "milestone": null, "updated_on": "2019-10-04T20:23:26.894244+00:00", "type": "issue", "id": 12}, {"priority": "major", "kind": "task", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx-docker.json"}, "html": {"href": "#!/osrf/vrx-docker"}, "avatar": {"href": "data/bytebucket.org/ravatar/{6aad36a4-6d9e-4aac-beef-5d3783a46826}ts=default"}}, "type": "repository", "name": "vrx-docker", "full_name": "osrf/vrx-docker", "uuid": "{6aad36a4-6d9e-4aac-beef-5d3783a46826}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx-docker/issues/13/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx-docker/issues/13.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/13/watch"}, "comments": {"href": "data/repositories/osrf/vrx-docker/issues/13/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx-docker/issues/13/evaluation-timing-verification"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/13/vote"}}, "reporter": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "title": "Evaluation timing verification", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Currently the run\\_trial.bash script does the following in order:\r\n\r\n* Starts up the vrx-server container\r\n* Waits a fixed amount of time \\(9 seconds\\)\r\n* Then starts the team\u2019s container\r\n\r\nWe should verify that this timing won\u2019t cause any problems.  I believe it is done this way b/c if we start the team\u2019s container first, it will not have a ROS master on the network which could cause problems.\r\n\r\nThis seems to have the potential for the simulation to start \\(and proceed towards Running state\\) before the team\u2019s code gets up and running, especially if the team\u2019s container takes significant time to spin up.\r\n\r\nAlso, Tyler left notes in the source to check on this, so wanted to get it into our list.\r\n\r\n\u200c", "markup": "markdown", "html": "<p>Currently the run_trial.bash script does the following in order:</p>\n<ul>\n<li>Starts up the vrx-server container</li>\n<li>Waits a fixed amount of time (9 seconds)</li>\n<li>Then starts the team\u2019s container</li>\n</ul>\n<p>We should verify that this timing won\u2019t cause any problems.  I believe it is done this way b/c if we start the team\u2019s container first, it will not have a ROS master on the network which could cause problems.</p>\n<p>This seems to have the potential for the simulation to start (and proceed towards Running state) before the team\u2019s code gets up and running, especially if the team\u2019s container takes significant time to spin up.</p>\n<p>Also, Tyler left notes in the source to check on this, so wanted to get it into our list.</p>\n<p>\u200c</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-10-04T18:23:49.451972+00:00", "milestone": null, "updated_on": "2019-10-04T18:23:49.451972+00:00", "type": "issue", "id": 13}, {"priority": "major", "kind": "proposal", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx-docker.json"}, "html": {"href": "#!/osrf/vrx-docker"}, "avatar": {"href": "data/bytebucket.org/ravatar/{6aad36a4-6d9e-4aac-beef-5d3783a46826}ts=default"}}, "type": "repository", "name": "vrx-docker", "full_name": "osrf/vrx-docker", "uuid": "{6aad36a4-6d9e-4aac-beef-5d3783a46826}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx-docker/issues/14/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx-docker/issues/14.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/14/watch"}, "comments": {"href": "data/repositories/osrf/vrx-docker/issues/14/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx-docker/issues/14/gzclient-on-host"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/14/vote"}}, "reporter": {"display_name": "Brian Bingham", "uuid": "{9cdea257-248f-486e-8858-49d8485a916f}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9cdea257-248f-486e-8858-49d8485a916f%7D"}, "html": {"href": "https://bitbucket.org/%7B9cdea257-248f-486e-8858-49d8485a916f%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1/7a690884-fc47-4bca-9c2b-baecee4d3dc9/128"}}, "nickname": "brian_bingham", "type": "user", "account_id": "557058:6c52d6e5-77e0-41a8-8b6e-cb9462f4d5f1"}, "title": "Gzclient on host?", "component": null, "votes": 0, "watches": 1, "content": {"raw": "In [vrx\\_entrypoint.sh](#!/osrf/vrx-docker/src/default/vrx_server/vrx-server/vrx_entrypoint.sh) is the line: \u201cTODO: optionally disable this so a gzclient can be run on the host for development.\u201d\r\n\r\nIs it possible to be able to run the client on the host \\(or even in a different container\\)?  I think that would be very powerful.\r\n\r\n\u200c", "markup": "markdown", "html": "<p>In <a data-is-external-link=\"true\" href=\"#!/osrf/vrx-docker/src/default/vrx_server/vrx-server/vrx_entrypoint.sh\" rel=\"nofollow\">vrx_entrypoint.sh</a> is the line: \u201cTODO: optionally disable this so a gzclient can be run on the host for development.\u201d</p>\n<p>Is it possible to be able to run the client on the host (or even in a different container)?  I think that would be very powerful.</p>\n<p>\u200c</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-10-04T19:06:12.750864+00:00", "milestone": null, "updated_on": "2019-10-04T19:06:12.750864+00:00", "type": "issue", "id": 14}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx-docker.json"}, "html": {"href": "#!/osrf/vrx-docker"}, "avatar": {"href": "data/bytebucket.org/ravatar/{6aad36a4-6d9e-4aac-beef-5d3783a46826}ts=default"}}, "type": "repository", "name": "vrx-docker", "full_name": "osrf/vrx-docker", "uuid": "{6aad36a4-6d9e-4aac-beef-5d3783a46826}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx-docker/issues/15/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx-docker/issues/15.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/15/watch"}, "comments": {"href": "data/repositories/osrf/vrx-docker/issues/15/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx-docker/issues/15/gazebo-playback-hanging"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/15/vote"}}, "reporter": {"display_name": "Steven Liu", "uuid": "{70a3f7ee-cda4-4f67-af91-5b48afa6d011}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B70a3f7ee-cda4-4f67-af91-5b48afa6d011%7D"}, "html": {"href": "https://bitbucket.org/%7B70a3f7ee-cda4-4f67-af91-5b48afa6d011%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d7bb598b395e3656d5793c27f79ad8edd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSL-0.png"}}, "nickname": "acenturyandabit", "type": "user", "account_id": "5c9ecb16203e134514cf9d29"}, "title": "Gazebo playback hanging", "component": null, "votes": 1, "watches": 2, "content": {"raw": "When attempting to record a video, gazebo hangs. The window shows but then ubuntu tells me its not responding.\r\n\r\nAttached is the playback output file. There\u2019s some error about a missing model, which seems to make sense if i take a look at the state file - there seems to be chunks but not models.", "markup": "markdown", "html": "<p>When attempting to record a video, gazebo hangs. The window shows but then ubuntu tells me its not responding.</p>\n<p>Attached is the playback output file. There\u2019s some error about a missing model, which seems to make sense if i take a look at the state file - there seems to be chunks but not models.</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-10-07T00:43:16.352557+00:00", "milestone": null, "updated_on": "2019-11-08T03:23:05.437011+00:00", "type": "issue", "id": 15}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx-docker.json"}, "html": {"href": "#!/osrf/vrx-docker"}, "avatar": {"href": "data/bytebucket.org/ravatar/{6aad36a4-6d9e-4aac-beef-5d3783a46826}ts=default"}}, "type": "repository", "name": "vrx-docker", "full_name": "osrf/vrx-docker", "uuid": "{6aad36a4-6d9e-4aac-beef-5d3783a46826}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx-docker/issues/16/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx-docker/issues/16.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/16/watch"}, "comments": {"href": "data/repositories/osrf/vrx-docker/issues/16/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx-docker/issues/16/if-sensor_configyaml-fails-compliance-once"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/16/vote"}}, "reporter": {"display_name": "Michael McCarrin", "uuid": "{3c3f500d-bbf6-472c-b8f7-627e5eabc226}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D"}, "html": {"href": "https://bitbucket.org/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a50abc93a3175f92c79e7521dfe089c0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "m1chaelm", "type": "user", "account_id": "5b2a9176467c9a09caa71ab1"}, "title": "If sensor_config.yaml fails compliance once, it fails all day", "component": null, "votes": 0, "watches": 1, "content": {"raw": "Our prepare\\_team\\_wamv.bash script checks that sensors are compliant by grepping through the $HOME/.ros/log/latest/wamv\\_config-wamv\\_generator-1.log for the string \u201cERROR\u201d. This method produces some false positives. In particular, since the log can contain messages from multiple consecutive runs, any run that produces the string ERROR once will cause compliance checks to fail until the logs are rotated.\r\n\r\nA workaround is to delete the log file or removing the lines that say ERROR and run again. Ideally we would record the output of our compliance check directly instead of searching the log.", "markup": "markdown", "html": "<p>Our prepare_team_wamv.bash script checks that sensors are compliant by grepping through the $HOME/.ros/log/latest/wamv_config-wamv_generator-1.log for the string \u201cERROR\u201d. This method produces some false positives. In particular, since the log can contain messages from multiple consecutive runs, any run that produces the string ERROR once will cause compliance checks to fail until the logs are rotated.</p>\n<p>A workaround is to delete the log file or removing the lines that say ERROR and run again. Ideally we would record the output of our compliance check directly instead of searching the log.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-10-30T23:58:43.322842+00:00", "milestone": null, "updated_on": "2019-10-31T04:35:41.047582+00:00", "type": "issue", "id": 16}, {"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/vrx-docker.json"}, "html": {"href": "#!/osrf/vrx-docker"}, "avatar": {"href": "data/bytebucket.org/ravatar/{6aad36a4-6d9e-4aac-beef-5d3783a46826}ts=default"}}, "type": "repository", "name": "vrx-docker", "full_name": "osrf/vrx-docker", "uuid": "{6aad36a4-6d9e-4aac-beef-5d3783a46826}"}, "links": {"attachments": {"href": "data/repositories/osrf/vrx-docker/issues/17/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/vrx-docker/issues/17.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/17/watch"}, "comments": {"href": "data/repositories/osrf/vrx-docker/issues/17/comments_page=1.json"}, "html": {"href": "#!/osrf/vrx-docker/issues/17/run_trialbash-fails-if-host-uid-and-gid"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/vrx-docker/issues/17/vote"}}, "reporter": {"display_name": "Michael McCarrin", "uuid": "{3c3f500d-bbf6-472c-b8f7-627e5eabc226}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D"}, "html": {"href": "https://bitbucket.org/%7B3c3f500d-bbf6-472c-b8f7-627e5eabc226%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a50abc93a3175f92c79e7521dfe089c0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "m1chaelm", "type": "user", "account_id": "5b2a9176467c9a09caa71ab1"}, "title": "run_trial.bash fails if host uid and gid are not 1000", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The vrx-server  Dockerfile attempts to create the vrx-server so its user matches the username of the host system. However, it hard codes uid and gid to 1000. If the user running the container has different uid or gid, the server\u2019s home environment won\u2019t be configured correctly, and the relative path shortcut \u201c~\u201d will be empty. This will cause the run\\_trial.bash script to fail to find the vrx\\_ws directory it needs to initialize the server.\r\n\r\nA quick workaround is to change the uid and gid values in the Dockerfile to match the uid and gid of the user on the host.", "markup": "markdown", "html": "<p>The vrx-server  Dockerfile attempts to create the vrx-server so its user matches the username of the host system. However, it hard codes uid and gid to 1000. If the user running the container has different uid or gid, the server\u2019s home environment won\u2019t be configured correctly, and the relative path shortcut \u201c~\u201d will be empty. This will cause the run_trial.bash script to fail to find the vrx_ws directory it needs to initialize the server.</p>\n<p>A quick workaround is to change the uid and gid values in the Dockerfile to match the uid and gid of the user on the host.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2019-11-20T19:59:22.299976+00:00", "milestone": null, "updated_on": "2019-11-20T19:59:22.299976+00:00", "type": "issue", "id": 17}], "page": 1, "size": 17}